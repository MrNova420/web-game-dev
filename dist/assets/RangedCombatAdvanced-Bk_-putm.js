class h{constructor(){this.activeProjectiles=[],this.gravity=9.8,this.animations={bow_draw:"/assets/animations/bow_draw_arrow.fbx",bow_shoot:"/assets/animations/bow_release.fbx",bow_charged:"/assets/animations/bow_charged_shot.fbx",crossbow_reload:"/assets/animations/crossbow_reload.fbx",gun_shoot:"/assets/animations/gun_fire.fbx"},this.projectileModels={arrow_basic:"/assets/models/projectiles/arrow_basic.glb",arrow_fire:"/assets/models/projectiles/arrow_fire.glb",arrow_ice:"/assets/models/projectiles/arrow_ice.glb",bolt:"/assets/models/projectiles/crossbow_bolt.glb",bullet:"/assets/models/projectiles/magic_bullet.glb"},this.vfx={arrow_trail:"/assets/particles/arrow_trail.png",muzzle_flash:"/assets/particles/muzzle_flash.png",impact:"/assets/particles/arrow_impact.png"}}shoot(t,s,o,i=1){const l=this.getShootAnimation(o),e=this.getProjectileModel(o);logger.info(`${t.id} shoots ${o}`),logger.info(`  Animation: ${l}`),logger.info(`  Projectile: ${e}`),logger.info(`  Charge: ${(i*100).toFixed(0)}%`);const a=50*i,r=this.calculateTrajectory(t.position,s.position,a);return this.activeProjectiles.push({position:t.position.clone(),velocity:r.velocity,model:e,damage:100*i,piercing:i>1.5}),r}calculateTrajectory(t,s,o){const i=s.x-t.x,l=s.y-t.y,e=s.z-t.z,a=Math.sqrt(i*i+e*e),r=Math.atan2(l,a),n=a/(o*Math.cos(r));return{velocity:{x:i/n,y:o*Math.sin(r),z:e/n},time:n,arc:!0}}multiShot(t,s){logger.info(`${t.id} MULTI-SHOT (${s.length} arrows)`),logger.info(`  Animation: ${this.animations.bow_shoot}`);const o=[];for(const i of s)o.push(this.shoot(t,i,"BOW",1));return o}update(t){for(let s=this.activeProjectiles.length-1;s>=0;s--){const o=this.activeProjectiles[s];o.velocity.y-=this.gravity*t,o.position.x+=o.velocity.x*t,o.position.y+=o.velocity.y*t,o.position.z+=o.velocity.z*t,o.position.y<=0&&(logger.info("Projectile hit ground"),logger.info(`  VFX: ${this.vfx.impact}`),this.activeProjectiles.splice(s,1))}}getShootAnimation(t){return t==="BOW"?this.animations.bow_shoot:t==="CROSSBOW"?this.animations.crossbow_reload:this.animations.gun_shoot}getProjectileModel(t){return t==="BOW"?this.projectileModels.arrow_basic:t==="CROSSBOW"?this.projectileModels.bolt:this.projectileModels.bullet}}export{h as RangedCombatAdvanced};
