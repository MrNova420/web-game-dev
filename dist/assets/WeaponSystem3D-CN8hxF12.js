import{c as n,M as o,a as d,k as l}from"./three-DTQjiZ7L.js";class u{constructor(e){this.modelLoader=e,this.categories={SWORD:"sword",AXE:"axe",SPEAR:"spear",HAMMER:"hammer",DAGGER:"dagger",BOW:"bow",STAFF:"staff",WAND:"wand",GREATSWORD:"greatsword",KATANA:"katana"},this.rarities={COMMON:{tier:0,color:13421772,multiplier:1,name:"Common"},UNCOMMON:{tier:1,color:65280,multiplier:1.2,name:"Uncommon"},RARE:{tier:2,color:26367,multiplier:1.5,name:"Rare"},EPIC:{tier:3,color:10040319,multiplier:2,name:"Epic"},LEGENDARY:{tier:4,color:16750848,multiplier:3,name:"Legendary"},MYTHIC:{tier:5,color:16711935,multiplier:5,name:"Mythic"},OMEGA:{tier:6,color:16711680,multiplier:10,name:"Omega"}},this.elements={NONE:{name:"None",bonus:0,effect:null},FIRE:{name:"Fire",bonus:.3,effect:"burn"},ICE:{name:"Ice",bonus:.25,effect:"freeze"},LIGHTNING:{name:"Lightning",bonus:.35,effect:"shock"},POISON:{name:"Poison",bonus:.2,effect:"poison"},HOLY:{name:"Holy",bonus:.4,effect:"smite"},DARK:{name:"Dark",bonus:.4,effect:"curse"},NATURE:{name:"Nature",bonus:.25,effect:"entangle"},ARCANE:{name:"Arcane",bonus:.3,effect:"silence"}},this.weaponDatabase=this.initializeWeaponDatabase(),this.activeWeapons=new Map,this.weaponSets=this.initializeWeaponSets(),this.stats={weaponsCreated:0,weaponsDestroyed:0,totalDamageDealt:0,legendariesObtained:0}}initializeWeaponDatabase(){const e=new Map;return this.addSwordWeapons(e),this.addAxeWeapons(e),this.addSpearWeapons(e),this.addHammerWeapons(e),this.addDaggerWeapons(e),this.addBowWeapons(e),this.addStaffWeapons(e),this.addWandWeapons(e),this.addGreatswordWeapons(e),this.addKatanaWeapons(e),e}addSwordWeapons(e){const t=[{id:"iron_sword",name:"Iron Sword",rarity:"COMMON",damage:15,speed:1,model:"iron_sword.glb"},{id:"steel_sword",name:"Steel Sword",rarity:"COMMON",damage:20,speed:1,model:"steel_sword.glb"},{id:"bronze_sword",name:"Bronze Sword",rarity:"COMMON",damage:18,speed:1.1,model:"bronze_sword.glb"},{id:"silver_sword",name:"Silver Sword",rarity:"UNCOMMON",damage:28,speed:1.1,model:"silver_sword.glb",bonus:{undead:1.5}},{id:"gold_sword",name:"Gold Sword",rarity:"UNCOMMON",damage:25,speed:1.2,model:"gold_sword.glb",bonus:{luck:10}},{id:"mithril_blade",name:"Mithril Blade",rarity:"UNCOMMON",damage:32,speed:1.15,model:"mithril_blade.glb"},{id:"flamebrand",name:"Flamebrand",rarity:"RARE",damage:45,speed:1,element:"FIRE",model:"flamebrand.glb"},{id:"frostbite",name:"Frostbite",rarity:"RARE",damage:42,speed:1.1,element:"ICE",model:"frostbite.glb"},{id:"thunderstrike",name:"Thunderstrike",rarity:"RARE",damage:48,speed:.95,element:"LIGHTNING",model:"thunderstrike.glb"},{id:"venomfang",name:"Venomfang",rarity:"RARE",damage:40,speed:1.2,element:"POISON",model:"venomfang.glb"},{id:"dragonslayer",name:"Dragonslayer",rarity:"EPIC",damage:75,speed:.9,model:"dragonslayer.glb",bonus:{dragons:2}},{id:"soul_calibur",name:"Soul Calibur",rarity:"EPIC",damage:80,speed:1,element:"HOLY",model:"soul_calibur.glb"},{id:"void_blade",name:"Void Blade",rarity:"EPIC",damage:85,speed:1.05,element:"DARK",model:"void_blade.glb"},{id:"excalibur",name:"Excalibur",rarity:"LEGENDARY",damage:150,speed:1.1,element:"HOLY",model:"excalibur.glb",skill:"holy_slash",bonus:{all:1.5},setBonus:"king_arthur"},{id:"kusanagi",name:"Kusanagi",rarity:"LEGENDARY",damage:140,speed:1.3,element:"LIGHTNING",model:"kusanagi.glb",skill:"eight_span_slash",bonus:{speed:30}},{id:"masamune",name:"Masamune",rarity:"LEGENDARY",damage:145,speed:1.2,model:"masamune.glb",skill:"divine_edge",bonus:{crit:25}},{id:"infinity_edge",name:"Infinity Edge",rarity:"MYTHIC",damage:300,speed:1.5,element:"ARCANE",model:"infinity_edge.glb",skill:"reality_cut",bonus:{all:2,crit:50}},{id:"ragnarok",name:"Ragnarok",rarity:"MYTHIC",damage:320,speed:1.3,element:"FIRE",model:"ragnarok.glb",skill:"end_times",bonus:{fire:2,destruction:100}},{id:"omega_blade",name:"Omega Blade",rarity:"OMEGA",damage:999,speed:2,element:"HOLY",model:"omega_blade.glb",skill:"omega_strike",bonus:{all:10,god:!0}}];for(const a of t)e.set(a.id,{...a,category:this.categories.SWORD,durability:100,maxDurability:100,level:1,experience:0})}addAxeWeapons(e){const t=[{id:"battle_axe",name:"Battle Axe",rarity:"COMMON",damage:22,speed:.8,model:"battle_axe.glb"},{id:"war_axe",name:"War Axe",rarity:"COMMON",damage:25,speed:.75,model:"war_axe.glb"},{id:"double_axe",name:"Double Axe",rarity:"UNCOMMON",damage:30,speed:.7,model:"double_axe.glb"},{id:"fire_axe",name:"Fire Axe",rarity:"RARE",damage:50,speed:.8,element:"FIRE",model:"fire_axe.glb"},{id:"thunder_axe",name:"Thunder Axe",rarity:"RARE",damage:55,speed:.75,element:"LIGHTNING",model:"thunder_axe.glb"},{id:"mjolnir",name:"Mj√∂lnir",rarity:"LEGENDARY",damage:180,speed:.9,element:"LIGHTNING",model:"mjolnir.glb",skill:"thunder_god",bonus:{lightning:2,worthy:!0}},{id:"stormbreaker",name:"Stormbreaker",rarity:"LEGENDARY",damage:190,speed:.85,element:"LIGHTNING",model:"stormbreaker.glb",skill:"bring_me_thanos",bonus:{godkiller:!0}},{id:"leviathan_axe",name:"Leviathan Axe",rarity:"MYTHIC",damage:350,speed:1,element:"ICE",model:"leviathan_axe.glb",skill:"frozen_throw",bonus:{returning:!0,ice:2.5}}];for(const a of t)e.set(a.id,{...a,category:this.categories.AXE,durability:100,maxDurability:100})}addSpearWeapons(e){const t=[{id:"pike",name:"Pike",rarity:"COMMON",damage:18,speed:1.1,model:"pike.glb"},{id:"lance",name:"Lance",rarity:"UNCOMMON",damage:28,speed:1,model:"lance.glb"},{id:"gungnir",name:"Gungnir",rarity:"LEGENDARY",damage:170,speed:1.2,model:"gungnir.glb",skill:"all_father_spear",bonus:{piercing:100}}];for(const a of t)e.set(a.id,{...a,category:this.categories.SPEAR,durability:100,maxDurability:100})}addHammerWeapons(e){const t=[{id:"war_hammer",name:"War Hammer",rarity:"COMMON",damage:28,speed:.7,model:"war_hammer.glb"},{id:"great_hammer",name:"Great Hammer",rarity:"RARE",damage:60,speed:.6,model:"great_hammer.glb"},{id:"godhammer",name:"Godhammer",rarity:"MYTHIC",damage:400,speed:.8,element:"HOLY",model:"godhammer.glb",skill:"divine_smite",bonus:{stun:100}}];for(const a of t)e.set(a.id,{...a,category:this.categories.HAMMER,durability:100,maxDurability:100})}addDaggerWeapons(e){const t=[{id:"iron_dagger",name:"Iron Dagger",rarity:"COMMON",damage:10,speed:1.5,model:"iron_dagger.glb"},{id:"assassins_blade",name:"Assassin's Blade",rarity:"RARE",damage:35,speed:1.8,model:"assassins_blade.glb",bonus:{backstab:2}},{id:"shadow_fang",name:"Shadow Fang",rarity:"LEGENDARY",damage:120,speed:2,element:"DARK",model:"shadow_fang.glb",skill:"shadow_strike",bonus:{stealth:50,backstab:3}}];for(const a of t)e.set(a.id,{...a,category:this.categories.DAGGER,durability:100,maxDurability:100})}addBowWeapons(e){const t=[{id:"short_bow",name:"Short Bow",rarity:"COMMON",damage:15,speed:1.2,model:"short_bow.glb"},{id:"long_bow",name:"Long Bow",rarity:"UNCOMMON",damage:25,speed:1,model:"long_bow.glb"},{id:"artemis_bow",name:"Artemis' Bow",rarity:"LEGENDARY",damage:160,speed:1.5,element:"NATURE",model:"artemis_bow.glb",skill:"hunters_mark",bonus:{range:100,accuracy:50}}];for(const a of t)e.set(a.id,{...a,category:this.categories.BOW,durability:100,maxDurability:100})}addStaffWeapons(e){const t=[{id:"wooden_staff",name:"Wooden Staff",rarity:"COMMON",damage:12,speed:1,model:"wooden_staff.glb"},{id:"crystal_staff",name:"Crystal Staff",rarity:"RARE",damage:45,speed:1.1,element:"ARCANE",model:"crystal_staff.glb"},{id:"staff_of_merlin",name:"Staff of Merlin",rarity:"LEGENDARY",damage:175,speed:1.2,element:"ARCANE",model:"staff_of_merlin.glb",skill:"arcane_mastery",bonus:{magic:100,mana:50}}];for(const a of t)e.set(a.id,{...a,category:this.categories.STAFF,durability:100,maxDurability:100})}addWandWeapons(e){const t=[{id:"oak_wand",name:"Oak Wand",rarity:"COMMON",damage:8,speed:1.5,model:"oak_wand.glb"},{id:"elder_wand",name:"Elder Wand",rarity:"LEGENDARY",damage:150,speed:1.8,element:"HOLY",model:"elder_wand.glb",skill:"unbeatable",bonus:{magic:100,master:!0}}];for(const a of t)e.set(a.id,{...a,category:this.categories.WAND,durability:100,maxDurability:100})}addGreatswordWeapons(e){const t=[{id:"iron_greatsword",name:"Iron Greatsword",rarity:"COMMON",damage:35,speed:.7,model:"iron_greatsword.glb"},{id:"claymore",name:"Claymore",rarity:"UNCOMMON",damage:45,speed:.65,model:"claymore.glb"},{id:"buster_sword",name:"Buster Sword",rarity:"EPIC",damage:95,speed:.75,model:"buster_sword.glb",bonus:{strength:30}},{id:"excalibur_morgan",name:"Excalibur Morgan",rarity:"MYTHIC",damage:380,speed:1,element:"DARK",model:"excalibur_morgan.glb",skill:"vortigern",bonus:{dark:3,cursed:!0}}];for(const a of t)e.set(a.id,{...a,category:this.categories.GREATSWORD,durability:100,maxDurability:100})}addKatanaWeapons(e){const t=[{id:"basic_katana",name:"Basic Katana",rarity:"COMMON",damage:20,speed:1.3,model:"basic_katana.glb"},{id:"demon_blade",name:"Demon Blade",rarity:"RARE",damage:48,speed:1.5,element:"DARK",model:"demon_blade.glb"},{id:"murasama",name:"Murasama",rarity:"LEGENDARY",damage:165,speed:1.8,model:"murasama.glb",skill:"iaijutsu",bonus:{crit:40,speed:40}},{id:"yamato",name:"Yamato",rarity:"MYTHIC",damage:370,speed:2,element:"ARCANE",model:"yamato.glb",skill:"judgement_cut",bonus:{dimensional:!0}}];for(const a of t)e.set(a.id,{...a,category:this.categories.KATANA,durability:100,maxDurability:100})}initializeWeaponSets(){return{king_arthur:{weapons:["excalibur","caliburn","avalon_shield"],bonus2:{hp:500,defense:50},bonus3:{damage:1.5,holy:2,kingship:!0}},demon_hunter:{weapons:["demon_blade","demon_fang","demon_slayer"],bonus2:{demonDamage:2},bonus3:{demonDamage:3,lifesteal:20}},dragon_knight:{weapons:["dragonslayer","dragon_lance","dragon_shield"],bonus2:{dragonDamage:2.5},bonus3:{dragonDamage:4,dragonForm:!0}}}}createWeapon(e,t=1){const a=this.weaponDatabase.get(e);if(!a)return console.warn(`Weapon ${e} not found in database`),null;const r=`${e}_${Date.now()}_${Math.random()}`,i={instanceId:r,...a,level:t,experience:0,experienceToNextLevel:this.getExperienceRequired(t),durability:a.maxDurability,enhancements:[],infusions:[],model:null,stats:this.calculateWeaponStats(a,t)};return this.activeWeapons.set(r,i),this.stats.weaponsCreated++,this.loadWeaponModel(i),i}calculateWeaponStats(e,t){const a=this.rarities[e.rarity],r=1+(t-1)*.1;return{damage:Math.floor(e.damage*a.multiplier*r),speed:e.speed,element:e.element||"NONE",bonus:e.bonus||{}}}async loadWeaponModel(e){if(this.modelLoader)try{const t=`/assets/models/weapons/${e.category}/${e.model}`,a=await this.modelLoader.loadModel(t);a&&(e.model=a,this.applyRarityEffect(a,e.rarity))}catch(t){console.warn(`Failed to load weapon model: ${e.model}`,t),e.model=this.createPlaceholderWeapon(e)}}createPlaceholderWeapon(e){const t=new n(.1,1.5,.1),a=new o({color:this.rarities[e.rarity].color});return new d(t,a)}applyRarityEffect(e,t){const a=this.rarities[t];e.traverse(r=>{r.isMesh&&(r.material.emissive=new l(a.color),r.material.emissiveIntensity=a.tier*.1)})}upgradeWeapon(e,t){const a=this.activeWeapons.get(e);return a?(a.level++,a.stats=this.calculateWeaponStats(a,a.level),a.experienceToNextLevel=this.getExperienceRequired(a.level),!0):!1}addExperience(e,t){const a=this.activeWeapons.get(e);if(a)for(a.experience+=t;a.experience>=a.experienceToNextLevel;)a.experience-=a.experienceToNextLevel,a.level++,a.experienceToNextLevel=this.getExperienceRequired(a.level),a.stats=this.calculateWeaponStats(a,a.level)}getExperienceRequired(e){return Math.floor(100*Math.pow(1.5,e-1))}infuseElement(e,t,a){const r=this.activeWeapons.get(e);return r?(r.infusions.push({element:t,strength:a,appliedAt:Date.now()}),!0):!1}repairWeapon(e,t){const a=this.activeWeapons.get(e);return a?(a.durability=Math.min(a.maxDurability,a.durability+t),!0):!1}damageWeapon(e,t){const a=this.activeWeapons.get(e);a&&(a.durability=Math.max(0,a.durability-t),a.durability===0&&this.onWeaponBroken(a))}onWeaponBroken(e){window.gameEngine&&window.gameEngine.eventBus?.emit("weapon:broken",{weapon:e})}getWeapon(e){return this.activeWeapons.get(e)}getWeaponsByRarity(e){return Array.from(this.weaponDatabase.values()).filter(t=>t.rarity===e)}getWeaponsByCategory(e){return Array.from(this.weaponDatabase.values()).filter(t=>t.category===e)}checkSetBonus(e){const t={};for(const[a,r]of Object.entries(this.weaponSets)){const i=e.filter(s=>r.weapons.includes(s.id)).length;i>=2&&Object.assign(t,r.bonus2),i>=3&&Object.assign(t,r.bonus3)}return t}getStats(){return{...this.stats,totalWeaponsInDatabase:this.weaponDatabase.size,activeWeaponInstances:this.activeWeapons.size}}dispose(){for(const e of this.activeWeapons.values())e.model&&e.model.traverse(t=>{t.geometry&&t.geometry.dispose(),t.material&&t.material.dispose()});this.activeWeapons.clear()}}export{u as WeaponSystem3D};
