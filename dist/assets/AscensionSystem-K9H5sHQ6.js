import{l as t}from"./index-CGDjDhhy.js";import"./three-DTQjiZ7L.js";import"./cannon-DPZWuR6y.js";class l{constructor(i){this.gameEngine=i,this.ascensionLevel=0,this.maxAscensionLevel=10,this.divineEssence=0,this.celestialFragments=0,this.ascendedAbilities=new Set,this.learnedPerks=new Set,this.ascensionTiers=[{level:1,name:"Touched",requirement:100,color:"#ffffff"},{level:2,name:"Empowered",requirement:250,color:"#ffff00"},{level:3,name:"Enlightened",requirement:500,color:"#00ffff"},{level:4,name:"Transcendent",requirement:1e3,color:"#ff00ff"},{level:5,name:"Demigod",requirement:2500,color:"#ff8800"},{level:6,name:"Lesser Deity",requirement:5e3,color:"#8800ff"},{level:7,name:"Greater Deity",requirement:1e4,color:"#ff0088"},{level:8,name:"Primordial",requirement:25e3,color:"#00ff88"},{level:9,name:"Cosmic Entity",requirement:5e4,color:"#ff00ff"},{level:10,name:"Omnipotent",requirement:1e5,color:"#ffffff"}],this.divineAbilities=this.createDivineAbilities(),this.divinePerksDatabase=this.createDivinePerks(),this.unlockedPlanes=new Set(["material"]),this.currentPlane="material"}createDivineAbilities(){return{divine_shield:{tier:1,name:"Divine Shield",description:"Summon an impenetrable shield",cooldown:60,cost:{divineEssence:10},effect:{shield:1e3,duration:5}},holy_smite:{tier:1,name:"Holy Smite",description:"Call down divine judgment",cooldown:30,cost:{divineEssence:5},effect:{damage:500,element:"holy",aoe:5}},divine_wrath:{tier:2,name:"Divine Wrath",description:"Unleash devastating holy power",cooldown:45,cost:{divineEssence:15},effect:{damage:1500,element:"holy",aoe:10}},blessing_of_gods:{tier:2,name:"Blessing of the Gods",description:"Grant divine blessings to self and allies",cooldown:90,cost:{divineEssence:20},effect:{allStats:1.5,duration:30}},reality_shift:{tier:3,name:"Reality Shift",description:"Manipulate the fabric of reality",cooldown:120,cost:{divineEssence:30},effect:{teleport:!0,range:"unlimited",invulnerable:3}},time_manipulation:{tier:3,name:"Time Manipulation",description:"Control the flow of time",cooldown:180,cost:{divineEssence:50},effect:{timeStop:!0,duration:10,selfTime:2}},divine_ascension:{tier:4,name:"Divine Ascension",description:"Temporarily achieve full divinity",cooldown:300,cost:{divineEssence:100,celestialFragments:1},effect:{allStats:3,invulnerable:!0,duration:30}},judgment_day:{tier:4,name:"Judgment Day",description:"Rain destruction upon all enemies",cooldown:240,cost:{divineEssence:75},effect:{damage:1e4,aoe:"screen",multihit:10}},creation:{tier:5,name:"Creation",description:"Create matter from nothing",cooldown:600,cost:{divineEssence:200,celestialFragments:5},effect:{createItems:!0,legendary:!0}},resurrection:{tier:5,name:"Resurrection",description:"Return from death automatically",cooldown:0,cost:{divineEssence:0,celestialFragments:10},effect:{autoRevive:!0,fullHeal:!0},passive:!0},omniscience:{tier:6,name:"Omniscience",description:"Know all secrets of the universe",cooldown:0,cost:{divineEssence:500},effect:{seeAll:!0,infiniteVision:!0},passive:!0},omnipresence:{tier:7,name:"Omnipresence",description:"Exist everywhere simultaneously",cooldown:0,cost:{divineEssence:1e3},effect:{teleportAnywhere:!0,instantTravel:!0},passive:!0},omnipotence:{tier:10,name:"Omnipotence",description:"Achieve ultimate power",cooldown:0,cost:{divineEssence:1e4,celestialFragments:100},effect:{infinitePower:!0,invulnerable:!0,infiniteResources:!0},passive:!0}}}createDivinePerks(){return{divine_vitality:{name:"Divine Vitality",tier:1,description:"HP regenerates constantly",effect:{hpRegen:10}},celestial_armor:{name:"Celestial Armor",tier:1,description:"Reduce all damage taken",effect:{damageReduction:.2}},holy_strength:{name:"Holy Strength",tier:2,description:"Permanently increased damage",effect:{damageBonus:.5}},divine_speed:{name:"Divine Speed",tier:2,description:"Move at supernatural speeds",effect:{speedBonus:.5}},immortal_soul:{name:"Immortal Soul",tier:3,description:"Cannot die from damage over time",effect:{dotImmune:!0}},perfect_dodge:{name:"Perfect Dodge",tier:3,description:"Greatly increased dodge chance",effect:{dodgeBonus:.3}},infinite_mana:{name:"Infinite Mana",tier:4,description:"Mana costs reduced to zero",effect:{manaCost:0}},eternal_life:{name:"Eternal Life",tier:5,description:"Revive automatically once per day",effect:{autoReviveDaily:!0}},cosmic_awareness:{name:"Cosmic Awareness",tier:6,description:"See all enemies and items on map",effect:{fullMapVision:!0}},reality_bender:{name:"Reality Bender",tier:7,description:"Critical hits deal 10x damage",effect:{critMultiplier:10}},time_lord:{name:"Time Lord",tier:8,description:"All cooldowns reduced by 90%",effect:{cooldownReduction:.9}},god_mode:{name:"God Mode",tier:10,description:"Take no damage from any source",effect:{invulnerable:!0}}}}ascend(){if(this.ascensionLevel>=this.maxAscensionLevel)return t.info("Already at maximum ascension level"),!1;const i=this.ascensionTiers[this.ascensionLevel];return i?this.divineEssence<i.requirement?(t.info(`Need ${i.requirement} Divine Essence (have ${this.divineEssence})`),!1):(this.divineEssence-=i.requirement,this.ascensionLevel++,this.applyAscensionBonuses(),this.unlockTierAbilities(this.ascensionLevel),this.triggerAscensionEffect(i),t.info(`Ascended to ${i.name}!`),this.saveAscension(),!0):!1}applyAscensionBonuses(){if(!this.gameEngine.player)return;const i=this.gameEngine.player,e=this.ascensionLevel,n=1+e*.5;i.maxHP*=n,i.hp=i.maxHP,i.baseDamage*=n,i.defense*=n,i.magicPower=(i.magicPower||1)*n,i.divineEssencePerKill=e*2}unlockTierAbilities(i){for(const[e,n]of Object.entries(this.divineAbilities))n.tier===i&&(this.ascendedAbilities.add(e),t.info(`Unlocked: ${n.name}`))}learnPerk(i){const e=this.divinePerksDatabase[i];if(!e)return!1;if(e.tier>this.ascensionLevel)return t.info(`Requires Ascension Level ${e.tier}`),!1;const n=e.tier*100;return this.celestialFragments<n?(t.info(`Need ${n} Celestial Fragments`),!1):(this.celestialFragments-=n,this.learnedPerks.add(i),this.applyPerkEffect(e),t.info(`Learned: ${e.name}`),!0)}applyPerkEffect(i){if(!this.gameEngine.player)return;const e=this.gameEngine.player,n=i.effect;n.hpRegen&&(e.hpRegenRate=(e.hpRegenRate||0)+n.hpRegen),n.damageReduction&&(e.damageReduction=(e.damageReduction||0)+n.damageReduction),n.damageBonus&&(e.baseDamage*=1+n.damageBonus),n.speedBonus&&(e.moveSpeed*=1+n.speedBonus),n.dotImmune&&(e.immuneToDOT=!0),n.dodgeBonus&&(e.dodgeChance=(e.dodgeChance||0)+n.dodgeBonus),n.manaCost!==void 0&&(e.manaCostMultiplier=n.manaCost),n.autoReviveDaily&&(e.hasAutoRevive=!0),n.fullMapVision&&(e.fullMapVision=!0),n.critMultiplier&&(e.critMultiplier=n.critMultiplier),n.cooldownReduction&&(e.cooldownMultiplier=1-n.cooldownReduction),n.invulnerable&&(e.isInvulnerable=!0)}useDivineAbility(i){if(!this.ascendedAbilities.has(i))return t.info("Ability not unlocked"),!1;const e=this.divineAbilities[i];if(!e)return!1;if(this.isOnCooldown(i))return t.info("Ability on cooldown"),!1;if(e.cost){if(e.cost.divineEssence&&this.divineEssence<e.cost.divineEssence)return t.info("Not enough Divine Essence"),!1;if(e.cost.celestialFragments&&this.celestialFragments<e.cost.celestialFragments)return t.info("Not enough Celestial Fragments"),!1}return e.cost&&(e.cost.divineEssence&&(this.divineEssence-=e.cost.divineEssence),e.cost.celestialFragments&&(this.celestialFragments-=e.cost.celestialFragments)),this.applyAbilityEffect(e),e.passive||this.setCooldown(i,e.cooldown),t.info(`Used: ${e.name}`),!0}applyAbilityEffect(i){const e=i.effect;e.shield&&this.applyShield(e.shield,e.duration),e.damage&&this.dealDivineDamage(e.damage,e.element,e.aoe),e.allStats&&this.applyStatBuff(e.allStats,e.duration),e.timeStop&&this.activateTimeStop(e.duration),e.invulnerable&&this.activateInvulnerability(e.duration||!0),e.createItems&&this.createLegendaryItems(),e.autoRevive&&this.grantAutoRevive()}addDivineEssence(i){this.divineEssence+=i}addCelestialFragments(i){this.celestialFragments+=i}unlockPlane(i){this.unlockedPlanes.add(i),t.info(`Unlocked plane: ${i}`)}travelToPlane(i){return this.unlockedPlanes.has(i)?(this.currentPlane=i,t.info(`Traveled to: ${i}`),this.gameEngine.worldSystem&&this.gameEngine.worldSystem.changePlane(i),!0):(t.info("Plane not unlocked"),!1)}getAscensionStatus(){const i=this.ascensionTiers[this.ascensionLevel-1],e=this.ascensionTiers[this.ascensionLevel];return{level:this.ascensionLevel,currentTier:i,nextTier:e,divineEssence:this.divineEssence,celestialFragments:this.celestialFragments,unlockedAbilities:Array.from(this.ascendedAbilities),learnedPerks:Array.from(this.learnedPerks),unlockedPlanes:Array.from(this.unlockedPlanes),currentPlane:this.currentPlane}}triggerAscensionEffect(i){this.gameEngine.particleSystem&&this.gameEngine.particleSystem.createAscensionEffect(i.color),this.gameEngine.audioSystem&&this.gameEngine.audioSystem.playSound("ascension")}applyShield(i,e){this.gameEngine.player&&(this.gameEngine.player.shield=i,this.gameEngine.player.shieldDuration=e)}dealDivineDamage(i,e,n){this.gameEngine.enemyManager&&this.gameEngine.enemyManager.dealAOEDamage(i,n,e)}applyStatBuff(i,e){this.gameEngine.player&&(this.gameEngine.player.tempStatMultiplier=i,this.gameEngine.player.buffDuration=e)}activateTimeStop(i){this.gameEngine&&(this.gameEngine.timeScale=.01,setTimeout(()=>{this.gameEngine.timeScale=1},i*1e3))}activateInvulnerability(i){this.gameEngine.player&&(this.gameEngine.player.isInvulnerable=!0,typeof i=="number"&&setTimeout(()=>{this.gameEngine.player.isInvulnerable=!1},i*1e3))}createLegendaryItems(){this.gameEngine.inventorySystem&&this.gameEngine.inventorySystem.addLegendaryItem()}grantAutoRevive(){this.gameEngine.player&&(this.gameEngine.player.autoRevive=!0)}isOnCooldown(i){this.abilityCooldowns||(this.abilityCooldowns=new Map);const e=this.abilityCooldowns.get(i);return e?Date.now()<e:!1}setCooldown(i,e){this.abilityCooldowns||(this.abilityCooldowns=new Map),this.abilityCooldowns.set(i,Date.now()+e*1e3)}saveAscension(){const i={ascensionLevel:this.ascensionLevel,divineEssence:this.divineEssence,celestialFragments:this.celestialFragments,ascendedAbilities:Array.from(this.ascendedAbilities),learnedPerks:Array.from(this.learnedPerks),unlockedPlanes:Array.from(this.unlockedPlanes)};localStorage.setItem("ascension_data",JSON.stringify(i))}loadAscension(){const i=localStorage.getItem("ascension_data");if(i)try{const e=JSON.parse(i);this.ascensionLevel=e.ascensionLevel||0,this.divineEssence=e.divineEssence||0,this.celestialFragments=e.celestialFragments||0,this.ascendedAbilities=new Set(e.ascendedAbilities||[]),this.learnedPerks=new Set(e.learnedPerks||[]),this.unlockedPlanes=new Set(e.unlockedPlanes||["material"])}catch(e){t.error("Failed to load ascension data:",e)}}}export{l as AscensionSystem};
