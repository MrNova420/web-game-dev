import{b2 as c,b0 as l,b3 as m,b4 as h,O as g}from"./three-DTQjiZ7L.js";class x{constructor(s){this.listener=new c,s&&s.add(this.listener),this.audioLoader=new l,this.music=new Map,this.sfx=new Map,this.ambient=new Map,this.voice=new Map,this.activeSounds=new Map,this.settings={masterVolume:1,musicVolume:.7,sfxVolume:.8,ambientVolume:.5,voiceVolume:1,muted:!1},this.stats={soundsLoaded:0,soundsPlaying:0,cacheHits:0,cacheMisses:0},this.manifest={music:{main_theme:"/assets/audio/music/main_theme.mp3",combat:"/assets/audio/music/combat.mp3",exploration:"/assets/audio/music/exploration.mp3",boss:"/assets/audio/music/boss.mp3",town:"/assets/audio/music/town.mp3",dungeon:"/assets/audio/music/dungeon.mp3"},sfx:{sword_swing:"/assets/audio/sfx/sword_swing.ogg",sword_hit:"/assets/audio/sfx/sword_hit.ogg",arrow_shoot:"/assets/audio/sfx/arrow_shoot.ogg",spell_cast:"/assets/audio/sfx/spell_cast.ogg",explosion:"/assets/audio/sfx/explosion.ogg",fireball:"/assets/audio/sfx/fireball.ogg",ice_cast:"/assets/audio/sfx/ice_cast.ogg",lightning:"/assets/audio/sfx/lightning.ogg",heal:"/assets/audio/sfx/heal.ogg",click:"/assets/audio/sfx/ui_click.ogg",hover:"/assets/audio/sfx/ui_hover.ogg",error:"/assets/audio/sfx/ui_error.ogg",success:"/assets/audio/sfx/ui_success.ogg",footstep:"/assets/audio/sfx/footstep.ogg",jump:"/assets/audio/sfx/jump.ogg",land:"/assets/audio/sfx/land.ogg",hurt:"/assets/audio/sfx/hurt.ogg",death:"/assets/audio/sfx/death.ogg",pickup:"/assets/audio/sfx/pickup.ogg",equip:"/assets/audio/sfx/equip.ogg",potion_drink:"/assets/audio/sfx/potion_drink.ogg",coin:"/assets/audio/sfx/coin.ogg",monster_growl:"/assets/audio/sfx/monster_growl.ogg",monster_hit:"/assets/audio/sfx/monster_hit.ogg",monster_death:"/assets/audio/sfx/monster_death.ogg"},ambient:{forest:"/assets/audio/ambient/forest.ogg",cave:"/assets/audio/ambient/cave.ogg",rain:"/assets/audio/ambient/rain.ogg",wind:"/assets/audio/ambient/wind.ogg",fire:"/assets/audio/ambient/fire.ogg",water:"/assets/audio/ambient/water.ogg"},voice:{narrator_intro:"/assets/audio/voice/narrator_intro.ogg"}},this.currentMusic=null,this.musicFadeTime=2e3}async loadAudio(s,e){const t=`${s}_${e}`,i=this[s];if(i.has(t))return this.stats.cacheHits++,i.get(t);this.stats.cacheMisses++;const o=this.manifest[s]?.[e];if(!o)return console.warn(`Audio ${s}/${e} not found in manifest`),null;try{const a=await new Promise((n,u)=>{this.audioLoader.load(o,r=>n(r),void 0,r=>u(r))});return i.set(t,a),this.stats.soundsLoaded++,a}catch(a){return console.warn(`Failed to load audio ${s}/${e}:`,a),null}}async playMusic(s,e=!0,t=!0){this.currentMusic&&this.currentMusic.isPlaying&&(await this.fadeOut(this.currentMusic,this.musicFadeTime),this.currentMusic.stop());const i=await this.loadAudio("music",s);if(!i)return null;const o=new m(this.listener);return o.setBuffer(i),o.setLoop(e),o.setVolume(t?0:this.settings.musicVolume*this.settings.masterVolume),o.play(),t&&await this.fadeIn(o,this.settings.musicVolume*this.settings.masterVolume,this.musicFadeTime),this.currentMusic=o,this.activeSounds.set(`music_${s}`,o),this.stats.soundsPlaying++,o}async playSFX(s,e=1){const t=await this.loadAudio("sfx",s);if(!t)return null;const i=new m(this.listener);i.setBuffer(t),i.setVolume(e*this.settings.sfxVolume*this.settings.masterVolume),i.play();const o=`sfx_${s}_${Date.now()}`;return this.activeSounds.set(o,i),this.stats.soundsPlaying++,i.onEnded=()=>{this.activeSounds.delete(o),this.stats.soundsPlaying--},i}async playPositionalSFX(s,e,t=1,i=50){const o=await this.loadAudio("sfx",s);if(!o)return null;const a=new h(this.listener);a.setBuffer(o),a.setRefDistance(10),a.setMaxDistance(i),a.setVolume(t*this.settings.sfxVolume*this.settings.masterVolume);const n=new g;n.position.set(e.x,e.y,e.z),n.add(a),a.play();const u=`pos_sfx_${s}_${Date.now()}`;return this.activeSounds.set(u,{sound:a,object:n}),this.stats.soundsPlaying++,a.onEnded=()=>{this.activeSounds.delete(u),this.stats.soundsPlaying--},{sound:a,object:n}}async playAmbient(s,e=!0){const t=await this.loadAudio("ambient",s);if(!t)return null;const i=new m(this.listener);return i.setBuffer(t),i.setLoop(e),i.setVolume(this.settings.ambientVolume*this.settings.masterVolume),i.play(),this.activeSounds.set(`ambient_${s}`,i),this.stats.soundsPlaying++,i}stopCategory(s){for(const[e,t]of this.activeSounds.entries())e.startsWith(s)&&(t.isAudio?t.stop():t.sound&&t.sound.stop(),this.activeSounds.delete(e),this.stats.soundsPlaying--)}stopAll(){for(const s of this.activeSounds.values())s.isAudio?s.stop():s.sound&&s.sound.stop();this.activeSounds.clear(),this.stats.soundsPlaying=0}fadeIn(s,e,t){return new Promise(i=>{const a=Date.now(),n=()=>{const u=Date.now()-a,r=Math.min(u/t,1),d=0+(e-0)*r;s.setVolume(d),r<1?requestAnimationFrame(n):i()};n()})}fadeOut(s,e){return new Promise(t=>{const i=s.getVolume(),o=Date.now(),a=()=>{const n=Date.now()-o,u=Math.min(n/e,1),r=i*(1-u);s.setVolume(r),u<1?requestAnimationFrame(a):t()};a()})}setMasterVolume(s){this.settings.masterVolume=Math.max(0,Math.min(1,s)),this.updateAllVolumes()}setMusicVolume(s){this.settings.musicVolume=Math.max(0,Math.min(1,s)),this.currentMusic&&this.currentMusic.setVolume(this.settings.musicVolume*this.settings.masterVolume)}setSFXVolume(s){this.settings.sfxVolume=Math.max(0,Math.min(1,s))}setAmbientVolume(s){this.settings.ambientVolume=Math.max(0,Math.min(1,s))}setMuted(s){this.settings.muted=s,this.listener.setMasterVolume(s?0:this.settings.masterVolume)}updateAllVolumes(){for(const[s,e]of this.activeSounds.entries()){const t=e.isAudio?e:e.sound;s.startsWith("music_")?t.setVolume(this.settings.musicVolume*this.settings.masterVolume):s.startsWith("sfx_")||s.startsWith("pos_sfx_")?t.setVolume(this.settings.sfxVolume*this.settings.masterVolume):s.startsWith("ambient_")&&t.setVolume(this.settings.ambientVolume*this.settings.masterVolume)}}async preloadCommon(){const e=[{category:"sfx",name:"click"},{category:"sfx",name:"sword_swing"},{category:"sfx",name:"footstep"},{category:"sfx",name:"pickup"},{category:"music",name:"main_theme"}].map(t=>this.loadAudio(t.category,t.name));return Promise.all(e)}getStats(){return{...this.stats,activeSounds:this.activeSounds.size,cacheHitRate:this.stats.cacheHits/(this.stats.cacheHits+this.stats.cacheMisses)}}}export{x as SoundManagerSystem};
