import{s as d,b1 as h,ai as m,V as g,c,M as n,d as b,S as w,C as p,a as u,G as f}from"./three-DTQjiZ7L.js";import{G as y,F as _}from"./index-DKIqi2-s.js";import"./cannon-DPZWuR6y.js";class k{constructor(){this.gltfLoader=new y,this.fbxLoader=new _,this.textureLoader=new d,this.modelCache=new Map,this.textureCache=new Map,this.animationCache=new Map,this.loadQueue=[],this.isLoading=!1,this.maxConcurrent=3,this.currentLoading=0,this.stats={modelsLoaded:0,texturesLoaded:0,animationsLoaded:0,cacheHits:0,cacheMisses:0,totalLoadTime:0},this.manifest={characters:{warrior:"/assets/models/characters/player/warrior.glb",mage:"/assets/models/characters/player/mage.glb",rogue:"/assets/models/characters/player/rogue.glb",ranger:"/assets/models/characters/player/ranger.glb",paladin:"/assets/models/characters/player/paladin.glb",necromancer:"/assets/models/characters/player/necromancer.glb",druid:"/assets/models/characters/player/druid.glb",bard:"/assets/models/characters/player/bard.glb",monk:"/assets/models/characters/player/monk.glb",warlock:"/assets/models/characters/player/warlock.glb"},companions:{smoke_siren:"/assets/models/characters/companions/smoke_siren.glb",blunt_wizard:"/assets/models/characters/companions/blunt_wizard.glb",ember_guardian:"/assets/models/characters/companions/ember_guardian.glb",mystical_merchant:"/assets/models/characters/companions/mystical_merchant.glb"},enemies:{goblin:"/assets/models/enemies/goblin.glb",orc:"/assets/models/enemies/orc.glb",skeleton:"/assets/models/enemies/skeleton.glb",zombie:"/assets/models/enemies/zombie.glb",wolf:"/assets/models/enemies/wolf.glb",spider:"/assets/models/enemies/spider.glb",slime:"/assets/models/enemies/slime.glb",bat:"/assets/models/enemies/bat.glb"},bosses:{dragon_tyrant:"/assets/models/bosses/dragon_tyrant.glb",void_lord:"/assets/models/bosses/void_lord.glb",crystal_empress:"/assets/models/bosses/crystal_empress.glb",shadow_reaper:"/assets/models/bosses/shadow_reaper.glb",ancient_golem:"/assets/models/bosses/ancient_golem.glb",demon_king:"/assets/models/bosses/demon_king.glb",phoenix_eternal:"/assets/models/bosses/phoenix_eternal.glb",kraken_depths:"/assets/models/bosses/kraken_depths.glb"},weapons:{sword_iron:"/assets/models/weapons/swords/iron_sword.glb",sword_steel:"/assets/models/weapons/swords/steel_sword.glb",axe_battle:"/assets/models/weapons/axes/battle_axe.glb",bow_long:"/assets/models/weapons/bows/longbow.glb",staff_crystal:"/assets/models/weapons/staves/crystal_staff.glb"},environment:{tree_pine:"/assets/models/environment/trees/pine.glb",rock_large:"/assets/models/environment/rocks/large_rock.glb",building_house:"/assets/models/environment/buildings/house.glb",crystal:"/assets/models/environment/props/crystal.glb"}}}async loadPlayerCharacter(a){const o=this.manifest.characters[a];if(!o)return console.warn(`Character ${a} not found in manifest`),this.createPlaceholder("character");const s=`char_${a}`;if(this.modelCache.has(s))return this.stats.cacheHits++,this.modelCache.get(s).clone();this.stats.cacheMisses++;const e=performance.now();try{const t=await this.loadGLTF(o),r=t.scene,l=t.animations||[];this.processModel(r);const i={model:r.clone(),animations:l,className:a};return this.modelCache.set(s,i),this.stats.modelsLoaded++,this.stats.animationsLoaded+=l.length,this.stats.totalLoadTime+=performance.now()-e,{model:r,animations:l}}catch(t){return console.warn(`Failed to load character ${a}:`,t),this.createPlaceholder("character")}}async loadCompanion(a){const o=this.manifest.companions[a];if(!o)return this.createPlaceholder("companion");const s=`comp_${a}`;if(this.modelCache.has(s))return this.stats.cacheHits++,this.modelCache.get(s).clone();try{const e=await this.loadGLTF(o),t=e.scene;return this.processModel(t),this.modelCache.set(s,{model:t.clone(),animations:e.animations}),this.stats.modelsLoaded++,{model:t,animations:e.animations}}catch(e){return console.warn(`Failed to load companion ${a}:`,e),this.createPlaceholder("companion")}}async loadEnemy(a){const o=this.manifest.enemies[a];if(!o)return this.createPlaceholder("enemy");const s=`enemy_${a}`;if(this.modelCache.has(s))return this.stats.cacheHits++,this.modelCache.get(s).model.clone();try{const e=await this.loadGLTF(o),t=e.scene;return this.processModel(t),this.modelCache.set(s,{model:t.clone(),animations:e.animations}),this.stats.modelsLoaded++,t}catch(e){return console.warn(`Failed to load enemy ${a}:`,e),this.createPlaceholder("enemy")}}async loadBoss(a){const o=this.manifest.bosses[a];if(!o)return this.createPlaceholder("boss");const s=`boss_${a}`;if(this.modelCache.has(s))return this.stats.cacheHits++,this.modelCache.get(s).model.clone();try{const e=await this.loadGLTF(o),t=e.scene;return this.processModel(t),t.scale.set(2,2,2),this.modelCache.set(s,{model:t.clone(),animations:e.animations}),this.stats.modelsLoaded++,t}catch(e){return console.warn(`Failed to load boss ${a}:`,e),this.createPlaceholder("boss",2)}}async loadWeapon(a){const o=this.manifest.weapons[a];if(!o)return this.createPlaceholder("weapon");const s=`weapon_${a}`;if(this.modelCache.has(s))return this.stats.cacheHits++,this.modelCache.get(s).clone();try{const t=(await this.loadGLTF(o)).scene;return this.processModel(t),this.modelCache.set(s,t.clone()),this.stats.modelsLoaded++,t}catch(e){return console.warn(`Failed to load weapon ${a}:`,e),this.createPlaceholder("weapon")}}async loadEnvironment(a){const o=this.manifest.environment[a];if(!o)return this.createPlaceholder("environment");const s=`env_${a}`;if(this.modelCache.has(s))return this.stats.cacheHits++,this.modelCache.get(s).clone();try{const t=(await this.loadGLTF(o)).scene;return this.processModel(t),this.modelCache.set(s,t.clone()),this.stats.modelsLoaded++,t}catch(e){return console.warn(`Failed to load environment ${a}:`,e),this.createPlaceholder("environment")}}loadGLTF(a){return new Promise((o,s)=>{this.gltfLoader.load(a,e=>o(e),e=>{e.loaded/e.total*100},e=>s(e))})}loadFBX(a){return new Promise((o,s)=>{this.fbxLoader.load(a,e=>o(e),void 0,e=>s(e))})}processModel(a){a.traverse(e=>{e.isMesh&&(e.castShadow=!0,e.receiveShadow=!0,e.material&&(e.material.needsUpdate=!0,e.material.map&&(e.material.map.encoding=h)))});const s=new m().setFromObject(a).getCenter(new g);return a.position.sub(s),a}createPlaceholder(a,o=1){let s,e;switch(a){case"character":case"companion":s=new p(.5,1.5,4,8),e=new n({color:a==="character"?4491519:16746564});break;case"enemy":s=new w(.5,16,16),e=new n({color:16729156});break;case"boss":s=new c(2,3,2),e=new n({color:8912896});break;case"weapon":s=new b(.1,.1,1.5,8),e=new n({color:8947848});break;case"environment":s=new c(1,1,1),e=new n({color:4500036});break;default:s=new c(1,1,1),e=new n({color:13421772})}const t=new u(s,e);t.scale.set(o,o,o),t.castShadow=!0,t.receiveShadow=!0;const r=new f;return r.add(t),console.log(`Created placeholder for ${a}`),a==="character"||a==="companion"?{model:r,animations:[]}:r}async preload(a){const o=a.map(s=>{switch(s.type){case"character":return this.loadPlayerCharacter(s.id);case"companion":return this.loadCompanion(s.id);case"enemy":return this.loadEnemy(s.id);case"boss":return this.loadBoss(s.id);case"weapon":return this.loadWeapon(s.id);case"environment":return this.loadEnvironment(s.id);default:return Promise.resolve(null)}});return Promise.all(o)}clearCache(){this.modelCache.clear(),this.textureCache.clear(),this.animationCache.clear()}getStats(){return{...this.stats,cacheSize:this.modelCache.size,cacheHitRate:this.stats.cacheHits/(this.stats.cacheHits+this.stats.cacheMisses),avgLoadTime:this.stats.totalLoadTime/this.stats.modelsLoaded}}}export{k as ModelLoaderSystem};
