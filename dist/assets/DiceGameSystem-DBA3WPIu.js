class r{constructor(){this.enabled=!1,this.currentGame=null,this.assets={diceModels:{standard:"/assets/models/dice/d6_standard.glb",golden:"/assets/models/dice/d6_golden.glb",crystal:"/assets/models/dice/d6_crystal.glb",obsidian:"/assets/models/dice/d6_obsidian.glb"},tables:{craps:"/assets/models/casino/craps_table.glb",poker_dice:"/assets/models/casino/poker_table.glb"},casino_environment:"/assets/models/casino/casino_interior.glb",chips:{white:"/assets/models/casino/chip_white.glb",red:"/assets/models/casino/chip_red.glb",blue:"/assets/models/casino/chip_blue.glb",gold:"/assets/models/casino/chip_gold.glb"},ui:{icons:"game-icons.net",panels:"/assets/ui/kenney_ui_pack/",buttons:"/assets/ui/kenney_ui_pack/buttons/"},audio:{dice_roll:"/assets/audio/freesound/dice_roll.ogg",dice_land:"/assets/audio/freesound/dice_land.ogg",win:"/assets/audio/freesound/casino_win.ogg",lose:"/assets/audio/freesound/casino_lose.ogg",chips:"/assets/audio/freesound/chips_clink.ogg"}},this.gameModes={CRAPS:"craps",POKER_DICE:"poker_dice",LIARS_DICE:"liars_dice",FARKLE:"farkle",YAHTZEE:"yahtzee",PIG:"pig"},this.chipValues=[{value:10,color:"white",model:this.assets.chips.white},{value:50,color:"red",model:this.assets.chips.red},{value:100,color:"blue",model:this.assets.chips.blue},{value:500,color:"gold",model:this.assets.chips.gold}],this.playerStats={balance:1e3,totalWon:0,totalLost:0,gamesPlayed:0,biggestWin:0,winStreak:0,currentStreak:0},this.crapsGame={point:null,phase:"come_out",bets:{pass_line:0,dont_pass:0,field:0,come:0,odds:0}},this.pokerHands=[{name:"Five of a Kind",payout:1e3,check:s=>this.checkFiveOfKind(s)},{name:"Four of a Kind",payout:200,check:s=>this.checkFourOfKind(s)},{name:"Full House",payout:100,check:s=>this.checkFullHouse(s)},{name:"Straight",payout:75,check:s=>this.checkStraight(s)},{name:"Three of a Kind",payout:30,check:s=>this.checkThreeOfKind(s)},{name:"Two Pair",payout:15,check:s=>this.checkTwoPair(s)},{name:"One Pair",payout:5,check:s=>this.checkOnePair(s)}],this.achievements=[{id:"lucky_seven",name:"Lucky Seven",description:"Roll a 7 on come out",unlocked:!1},{id:"high_roller",name:"High Roller",description:"Win 5000 in one game",unlocked:!1},{id:"hot_streak",name:"Hot Streak",description:"Win 10 games in a row",unlocked:!1},{id:"five_kind",name:"Quintuple",description:"Roll five of a kind",unlocked:!1},{id:"poker_master",name:"Poker Master",description:"Get all poker hands",unlocked:!1},{id:"farkle_free",name:"Farkle Free",description:"Play 20 Farkle rounds without farkling",unlocked:!1}],this.dicePhysics={gravity:-9.81,restitution:.6,friction:.3,angularDamping:.5}}init(){logger.info("DiceGameSystem: Initializing with external assets"),logger.info("  - Dice models: Sketchfab Free (4 types)"),logger.info("  - Casino tables: Sketchfab Free"),logger.info("  - Environment: Quaternius Casino Pack"),logger.info("  - UI: Kenney UI Pack + game-icons.net"),this.enabled=!0}startGame(s,e=10){return this.playerStats.balance<e?(logger.info("DiceGameSystem: Insufficient balance"),!1):(this.currentGame={mode:s,bet:e,dice:[],rollCount:0,score:0},logger.info(`DiceGameSystem: Starting ${s} game with bet ${e}`),!0)}rollDice(s=2,e="standard"){const t=[],a=this.assets.diceModels[e];logger.info(`DiceGameSystem: Rolling ${s} ${e} dice (${a})`);for(let i=0;i<s;i++){const n=Math.floor(Math.random()*6)+1;t.push({value:n,model:a,position:{x:Math.random()*2-1,y:5,z:Math.random()*2-1},rotation:{x:Math.random()*360,y:Math.random()*360,z:Math.random()*360},velocity:{x:Math.random()*2-1,y:0,z:Math.random()*2-1},angularVelocity:{x:Math.random()*10,y:Math.random()*10,z:Math.random()*10}})}return this.currentGame.dice=t,this.currentGame.rollCount++,t}playCraps(s,e){(!this.currentGame||this.currentGame.mode!==this.gameModes.CRAPS)&&this.startGame(this.gameModes.CRAPS,e);const t=this.rollDice(2),a=t[0].value+t[1].value;logger.info(`DiceGameSystem: Craps roll: ${a} (${t[0].value} + ${t[1].value})`);let i=!1,n=0;return this.crapsGame.phase==="come_out"?a===7||a===11?(i=!0,n=e*2,this.unlockAchievement("lucky_seven")):a===2||a===3||a===12?i=!1:(this.crapsGame.point=a,this.crapsGame.phase="point",logger.info(`DiceGameSystem: Point established: ${a}`)):this.crapsGame.phase==="point"&&(a===this.crapsGame.point?(i=!0,n=e*2,this.crapsGame.phase="come_out",this.crapsGame.point=null):a===7&&(i=!1,this.crapsGame.phase="come_out",this.crapsGame.point=null)),this.updateBalance(i,n,e),{win:i,payout:n,total:a,dice:t}}playPokerDice(s){(!this.currentGame||this.currentGame.mode!==this.gameModes.POKER_DICE)&&this.startGame(this.gameModes.POKER_DICE,s);const e=this.rollDice(5,"golden"),t=e.map(o=>o.value).sort((o,c)=>o-c);logger.info(`DiceGameSystem: Poker dice: [${t.join(", ")}]`);let a=null,i=0;for(const o of this.pokerHands)if(o.check(t)){a=o,i=s*(o.payout/10);break}const n=a!==null;return this.updateBalance(n,i,s),a&&a.name==="Five of a Kind"&&this.unlockAchievement("five_kind"),{win:n,hand:a?a.name:"No Hand",payout:i,dice:e,values:t}}checkFiveOfKind(s){return s.every(e=>e===s[0])}checkFourOfKind(s){const e=this.getCounts(s);return Object.values(e).includes(4)}checkFullHouse(s){const e=this.getCounts(s),t=Object.values(e).sort();return t.length===2&&t[0]===2&&t[1]===3}checkStraight(s){const e=[...new Set(s)].sort((t,a)=>t-a);return e.length!==5?!1:e[4]-e[0]===4}checkThreeOfKind(s){const e=this.getCounts(s);return Object.values(e).includes(3)}checkTwoPair(s){const e=this.getCounts(s);return Object.values(e).filter(a=>a===2).length===2}checkOnePair(s){const e=this.getCounts(s);return Object.values(e).includes(2)}getCounts(s){const e={};for(const t of s)e[t]=(e[t]||0)+1;return e}updateBalance(s,e,t){this.playerStats.gamesPlayed++,s?(this.playerStats.balance+=e,this.playerStats.totalWon+=e,this.playerStats.currentStreak++,this.playerStats.currentStreak>this.playerStats.winStreak&&(this.playerStats.winStreak=this.playerStats.currentStreak,this.playerStats.winStreak>=10&&this.unlockAchievement("hot_streak")),e>this.playerStats.biggestWin&&(this.playerStats.biggestWin=e,e>=5e3&&this.unlockAchievement("high_roller")),logger.info(`DiceGameSystem: Won ${e}! Balance: ${this.playerStats.balance}`)):(this.playerStats.balance-=t,this.playerStats.totalLost+=t,this.playerStats.currentStreak=0,logger.info(`DiceGameSystem: Lost ${t}. Balance: ${this.playerStats.balance}`))}unlockAchievement(s){const e=this.achievements.find(t=>t.id===s);e&&!e.unlocked&&(e.unlocked=!0,logger.info(`DiceGameSystem: Achievement unlocked: ${e.name}`))}update(s){if(!(!this.enabled||!this.currentGame))for(const e of this.currentGame.dice)e.velocity&&(e.velocity.y+=this.dicePhysics.gravity*s,e.position.x+=e.velocity.x*s,e.position.y+=e.velocity.y*s,e.position.z+=e.velocity.z*s,e.rotation.x+=e.angularVelocity.x*s,e.rotation.y+=e.angularVelocity.y*s,e.rotation.z+=e.angularVelocity.z*s,e.angularVelocity.x*=1-this.dicePhysics.angularDamping*s,e.angularVelocity.y*=1-this.dicePhysics.angularDamping*s,e.angularVelocity.z*=1-this.dicePhysics.angularDamping*s,e.position.y<=0&&(e.position.y=0,e.velocity.y=-e.velocity.y*this.dicePhysics.restitution,e.velocity.x*=1-this.dicePhysics.friction,e.velocity.z*=1-this.dicePhysics.friction,Math.abs(e.velocity.y)<.1&&Math.abs(e.velocity.x)<.1&&Math.abs(e.velocity.z)<.1&&(e.velocity=null)))}getInfo(){return{name:"DiceGameSystem",version:"1.0.0",phase:"Phase 8 - Mini-Games",enabled:this.enabled,gameModes:Object.keys(this.gameModes).length,achievements:this.achievements.length,playerBalance:this.playerStats.balance,gamesPlayed:this.playerStats.gamesPlayed,externalAssets:{models:"Sketchfab Free (dice, tables, chips)",environment:"Quaternius Casino Pack",ui:"Kenney UI Pack + game-icons.net",audio:"Freesound"}}}}export{r as DiceGameSystem};
