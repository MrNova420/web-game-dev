import{c as i,M as n,a as o}from"./three-DTQjiZ7L.js";class m{constructor(e,s){this.combatSystem=e,this.scene=s,this.isActive=!1,this.currentBossIndex=0,this.difficulty="normal",this.startTime=0,this.bosses=this.initializeBosses(),this.playerState={health:100,maxHealth:100,mana:100,maxMana:100,buffs:[]},this.rewards={normal:{gold:5e3,items:3,legendary:.1},hard:{gold:1e4,items:5,legendary:.25},nightmare:{gold:25e3,items:10,legendary:.5},omega:{gold:1e5,items:20,legendary:1}},this.stats={attemptsStarted:0,attemptsCompleted:0,bossesDefeated:0,fastestClear:1/0,highestStreak:0}}initializeBosses(){return[{id:"smoke_dragon",name:"Smoke Dragon",health:5e3,damage:50,model:"/assets/models/bosses/smoke_dragon.glb",animations:{idle:"/assets/animations/dragon_idle.fbx",attack:"/assets/animations/dragon_attack.fbx",roar:"/assets/animations/dragon_roar.fbx"},mechanics:["breath_weapon","tail_swipe","wing_gust"],weakness:"ice",arena:"/assets/models/arenas/crystal_cavern.glb"},{id:"fungal_empress",name:"Fungal Empress",health:6e3,damage:60,model:"/assets/models/bosses/fungal_empress.glb",animations:{idle:"/assets/animations/female_idle.fbx",attack:"/assets/animations/spellcast.fbx",summon:"/assets/animations/summon.fbx"},mechanics:["spore_cloud","minion_summon","poison_nova"],weakness:"fire",arena:"/assets/models/arenas/fungal_city.glb"},{id:"verdant_queen",name:"Verdant Queen",health:7e3,damage:70,model:"/assets/models/bosses/nature_queen.glb",animations:{idle:"/assets/animations/female_idle_2.fbx",attack:"/assets/animations/nature_attack.fbx",heal:"/assets/animations/heal.fbx"},mechanics:["vine_grab","healing_field","entangle"],weakness:"lightning",arena:"/assets/models/arenas/vine_cathedral.glb"},{id:"cyber_core",name:"Ship Core AI",health:8e3,damage:80,model:"/assets/models/bosses/ai_core.glb",animations:{idle:"/assets/animations/robot_idle.fbx",attack:"/assets/animations/laser_attack.fbx",malfunction:"/assets/animations/robot_damage.fbx"},mechanics:["laser_barrage","shield_phase","drone_spawn"],weakness:"arcane",arena:"/assets/models/arenas/starship_interior.glb"},{id:"shadow_reaper",name:"Shadow Reaper",health:1e4,damage:100,model:"/assets/models/bosses/reaper.glb",animations:{idle:"/assets/animations/reaper_idle.fbx",attack:"/assets/animations/scythe_attack.fbx",teleport:"/assets/animations/teleport.fbx"},mechanics:["shadow_phase","death_touch","soul_drain"],weakness:"holy",arena:"/assets/models/arenas/shadow_realm.glb"},{id:"phoenix_eternal",name:"Phoenix Eternal",health:12e3,damage:120,model:"/assets/models/bosses/phoenix.glb",animations:{idle:"/assets/animations/phoenix_idle.fbx",attack:"/assets/animations/phoenix_dive.fbx",rebirth:"/assets/animations/phoenix_rebirth.fbx"},mechanics:["fire_tornado","rebirth","flame_dash"],weakness:"water",arena:"/assets/models/arenas/fire_temple.glb"},{id:"void_lord",name:"Void Lord",health:15e3,damage:150,model:"/assets/models/bosses/void_lord.glb",animations:{idle:"/assets/animations/demon_idle.fbx",attack:"/assets/animations/void_attack.fbx",ultimate:"/assets/animations/void_ultimate.fbx"},mechanics:["void_zone","reality_tear","darkness_wave"],weakness:"light",arena:"/assets/models/arenas/void_dimension.glb"},{id:"omega_dragon",name:"Omega Dragon Emperor",health:25e3,damage:200,model:"/assets/models/bosses/omega_dragon.glb",animations:{idle:"/assets/animations/dragon_emperor_idle.fbx",attack:"/assets/animations/dragon_ultimate.fbx",roar:"/assets/animations/dragon_emperor_roar.fbx"},mechanics:["omega_breath","meteor_storm","time_distortion","reality_break"],weakness:null,arena:"/assets/models/arenas/twilight_throne.glb"}]}startBossRush(e="normal"){return this.isActive=!0,this.currentBossIndex=0,this.difficulty=e,this.startTime=Date.now(),this.playerState.health=this.playerState.maxHealth,this.playerState.mana=this.playerState.maxMana,this.playerState.buffs=[],this.scaleBossesForDifficulty(e),this.loadBoss(0),this.stats.attemptsStarted++,!0}scaleBossesForDifficulty(e){const t={normal:1,hard:1.5,nightmare:2.5,omega:5}[e]||1;for(const a of this.bosses)a.scaledHealth=Math.floor(a.health*t),a.scaledDamage=Math.floor(a.damage*t)}async loadBoss(e){const s=this.bosses[e];if(!s)return null;const t={id:s.id,name:s.name,health:s.scaledHealth,maxHealth:s.scaledHealth,damage:s.scaledDamage,mechanics:s.mechanics,weakness:s.weakness,phase:1,enraged:!1};try{const a=await this.loadExternalModel(s.model);a&&(t.model=a,this.scene.add(a))}catch(a){console.warn(`Failed to load boss model: ${s.model}`,a),t.model=this.createPlaceholderBoss(),this.scene.add(t.model)}try{const a=await this.loadExternalModel(s.arena);a&&this.scene.add(a)}catch(a){console.warn(`Failed to load arena: ${s.arena}`,a)}return this.combatSystem&&this.combatSystem.registerCombatant(s.id,t),t}async loadExternalModel(e){return new Promise((s,t)=>{console.log(`Loading external model from: ${e}`),console.log("Source: Sketchfab Free / Quaternius / Mixamo"),s(null)})}createPlaceholderBoss(){const e=new i(2,3,2),s=new n({color:16711680,emissive:4456448});return new o(e,s)}update(e){if(!this.isActive)return;const s=this.bosses[this.currentBossIndex];s&&(this.updateBossMechanics(s,e),this.checkPhaseTransition(s))}updateBossMechanics(e,s){for(const t of e.mechanics)this.executeBossMechanic(e,t,s)}executeBossMechanic(e,s,t){}checkPhaseTransition(e){const s=this.combatSystem?.getCombatStats(e.id);if(!s)return;s.hp/s.maxHp*100<=50&&e.phase===1&&(e.phase=2,e.enraged=!0,window.gameEngine&&window.gameEngine.eventBus?.emit("bossRush:phaseTransition",{boss:e.name,phase:2}))}onBossDefeated(e){if(this.stats.bossesDefeated++,this.currentBossIndex++,this.currentBossIndex>=this.bosses.length){this.completeBossRush();return}this.healPlayerBetweenBosses(),setTimeout(()=>{this.loadBoss(this.currentBossIndex)},5e3)}healPlayerBetweenBosses(){const e=this.playerState.maxHealth*.3;this.playerState.health=Math.min(this.playerState.maxHealth,this.playerState.health+e),this.playerState.mana=this.playerState.maxMana,window.gameEngine&&window.gameEngine.eventBus?.emit("bossRush:heal",{amount:e})}completeBossRush(){this.isActive=!1;const e=Date.now()-this.startTime;this.stats.attemptsCompleted++,this.stats.fastestClear=Math.min(this.stats.fastestClear,e);const s=this.rewards[this.difficulty],t=e<3e5?1.5:1,a={difficulty:this.difficulty,clearTime:e,gold:Math.floor(s.gold*t),items:s.items,legendaryChance:s.legendary,newRecord:e===this.stats.fastestClear};return window.gameEngine&&window.gameEngine.eventBus?.emit("bossRush:complete",a),a}onPlayerDefeated(){this.isActive=!1;const e={difficulty:this.difficulty,bossesDefeated:this.currentBossIndex,timeSpent:Date.now()-this.startTime};return window.gameEngine&&window.gameEngine.eventBus?.emit("bossRush:defeated",e),e}getLeaderboard(e){return{difficulty:e,yourBest:this.stats.fastestClear,global:[{rank:1,name:"Player1",time:18e4},{rank:2,name:"Player2",time:21e4},{rank:3,name:"Player3",time:24e4}]}}getStats(){return{...this.stats,successRate:this.stats.attemptsStarted>0?(this.stats.attemptsCompleted/this.stats.attemptsStarted*100).toFixed(1):0}}}export{m as BossRushModeSystem};
