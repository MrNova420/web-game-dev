import{l as t}from"./index-Bf-_4h4A.js";import"./three-DTQjiZ7L.js";import"./cannon-DPZWuR6y.js";class y{constructor(){this.version="2.1.0",this.initialized=!1,this.systems={},this.updateOrder=[],this.deltaTime=0,this.lastUpdateTime=Date.now(),this.isPaused=!1,this.state="loading",this.brain={performance:null,decisionMaker:null,resourceAllocator:null,predictiveSystem:null,learningSystem:null,healthMonitor:null},this.performanceIntelligence={currentFPS:60,targetFPS:60,fpsHistory:[],memoryUsage:0,memoryLimit:512*1024*1024,cpuLoad:0,networkQuality:"good",deviceCapabilities:this.detectDeviceCapabilities()},this.systemHealth={overall:100,systems:{},warnings:[],errors:[],recoveryAttempts:0,lastHealthCheck:Date.now()},this.optimizationStrategy={mode:"balanced",priorities:["fps","memory","network","quality"],adaptiveEnabled:!0,learningEnabled:!0,autoRecoveryEnabled:!0},this.playerBehavior={sessionStart:Date.now(),actionsPerMinute:0,preferredGameplay:"combat",skillLevel:50,loadedAreas:[],frequentActions:{},performancePreference:"quality"},this.systemRegistry={core:["GameEngine","AssetLoader","InputManager","AudioManager","SaveLoadSystem"],entities:["PlayerSystem","EnemySystem","NPCSystem"],world:["WorldGenerator","DungeonGenerator","BiomeSystem","WeatherSystem","TimeOfDaySystem"],combat:["CombatSystem","MagicSystem","FantasyMagicSystem","AbilitySystem","StatusEffectSystem"],ai:["IntelligentAISystem","DynamicDifficultySystem","EnemyAIBehaviorSystem"],evolution:["ProgressiveWorldSystem","WorldEventSystem"],visuals:["MagicalEffectsSystem","WorldBeautificationSystem","MonsterDesignSystem","ParticleSystem","RenderingSystem"],player:["AddictiveGameplaySystem","PlayerControlSettingsSystem","AdvancedInventorySystem","QuestSystem","AchievementSystem","ProgressionSystem"],management:["CloudSaveSystem","AdvancedAutoManagementSystem","PerformanceMonitor"],ui:["UISystem","HUDSystem","MenuSystem","ResponsiveUISystem"],data:["ItemDatabase","BiomeDefinitions","MonsterDefinitions","SpellDatabase","QuestDatabase"],social:["GuildSystem","PartySystem","ChatSystem","LeaderboardSystem"],additional:["CraftingSystem","TradingSystem","EnhancementSystem","PetSystem","MountSystem","CompanionSystem","SeductiveBaddiesSystem","HousingSystem","MinigameSystem"]}}async initialize(){t.info("üéÆ Master Game System: Initializing...");try{return await this.loadAllSystems(),await this.initializeSystems(),await this.connectSystems(),this.initializeBrain(),await this.verifySystems(),this.startGameLoop(),this.initialized=!0,this.state="running",t.info("‚úÖ Master Game System: Initialization complete!"),t.info(`üìä Total Systems Active: ${Object.keys(this.systems).length}`),t.info("üß† Master Brain: Online and operational"),!0}catch(e){return t.error("‚ùå Master Game System: Initialization failed!",e),this.state="error",!1}}async loadAllSystems(){t.info("üì¶ Loading all game systems...");for(const[e,s]of Object.entries(this.systemRegistry)){t.info(`  Loading ${e} systems...`);for(const i of s)try{const n=await this.importSystem(i);n&&(this.systems[i]=new n,this.updateOrder.push(i),t.info(`    ‚úì ${i}`))}catch{t.info(`    ‚ö† ${i} - Not found (will use fallback)`)}}}async importSystem(e){const i={GameEngine:"../core/GameEngine.js",AssetLoader:"../core/AssetLoader.js",InputManager:"../core/InputManager.js",IntelligentAISystem:"./IntelligentAISystem.js",DynamicDifficultySystem:"./DynamicDifficultySystem.js",ProgressiveWorldSystem:"./ProgressiveWorldSystem.js",MagicalEffectsSystem:"./MagicalEffectsSystem.js",WorldBeautificationSystem:"./WorldBeautificationSystem.js",MonsterDesignSystem:"./MonsterDesignSystem.js",AddictiveGameplaySystem:"./AddictiveGameplaySystem.js",PlayerControlSettingsSystem:"./PlayerControlSettingsSystem.js",CloudSaveSystem:"./CloudSaveSystem.js",AdvancedAutoManagementSystem:"./AdvancedAutoManagementSystem.js",EnemyAIBehaviorSystem:"./EnemyAIBehaviorSystem.js",ResponsiveUISystem:"./ResponsiveUISystem.js",AdvancedInventorySystem:"./AdvancedInventorySystem.js",ItemDatabase:"../data/ItemDatabase.js",BiomeDefinitions:"../data/BiomeDefinitions.js",MonsterDefinitions:"../data/MonsterDefinitions.js"}[e];if(!i)return null;try{const n=await import(i);return n.default||n[e]}catch{return null}}async initializeSystems(){t.info("üîß Initializing systems...");for(const e of this.updateOrder){const s=this.systems[e];if(s&&typeof s.initialize=="function")try{await s.initialize(),t.info(`  ‚úì ${e} initialized`)}catch(i){t.error(`  ‚úó ${e} initialization failed:`,i)}}}async connectSystems(){t.info("üîó Connecting systems..."),this.systems.IntelligentAISystem&&this.systems.EnemySystem&&(this.systems.EnemySystem.setAI(this.systems.IntelligentAISystem),t.info("  ‚úì AI system connected to enemies")),this.systems.DynamicDifficultySystem&&this.systems.ProgressionSystem&&(this.systems.DynamicDifficultySystem.setPlayerTracking(this.systems.ProgressionSystem),t.info("  ‚úì Difficulty system tracking player")),this.systems.ProgressiveWorldSystem&&this.systems.WorldGenerator&&(this.systems.WorldGenerator.setProgressiveSystem(this.systems.ProgressiveWorldSystem),t.info("  ‚úì World evolution connected")),this.systems.MagicalEffectsSystem&&this.systems.MagicSystem&&(this.systems.MagicSystem.setEffectsSystem(this.systems.MagicalEffectsSystem),t.info("  ‚úì Magic effects integrated")),this.systems.WorldBeautificationSystem&&this.systems.RenderingSystem&&(this.systems.RenderingSystem.setBeautification(this.systems.WorldBeautificationSystem),t.info("  ‚úì World beautification rendering")),this.systems.MonsterDesignSystem&&this.systems.EnemySystem&&(this.systems.EnemySystem.setDesignSystem(this.systems.MonsterDesignSystem),t.info("  ‚úì Monster designs loaded")),this.systems.AddictiveGameplaySystem&&this.systems.QuestSystem&&(this.systems.QuestSystem.setDailySystem(this.systems.AddictiveGameplaySystem),t.info("  ‚úì Daily activities connected")),this.systems.CloudSaveSystem&&this.systems.SaveLoadSystem&&(this.systems.SaveLoadSystem.setCloudBackend(this.systems.CloudSaveSystem),t.info("  ‚úì Cloud saves enabled")),this.systems.AdvancedAutoManagementSystem&&this.systems.PerformanceMonitor&&(this.systems.PerformanceMonitor.setAutoManagement(this.systems.AdvancedAutoManagementSystem),t.info("  ‚úì Auto-optimization active")),this.systems.ResponsiveUISystem&&this.systems.UISystem&&(this.systems.UISystem.setResponsive(this.systems.ResponsiveUISystem),t.info("  ‚úì Responsive UI enabled")),this.systems.AdvancedInventorySystem&&this.systems.PlayerSystem&&(this.systems.PlayerSystem.setInventory(this.systems.AdvancedInventorySystem),t.info("  ‚úì Advanced inventory connected")),this.systems.ItemDatabase&&(await this.loadItemDatabase(),t.info("  ‚úì 1000+ items loaded")),this.systems.BiomeDefinitions&&(await this.loadBiomeDefinitions(),t.info("  ‚úì 15 biomes loaded")),this.systems.MonsterDefinitions&&(await this.loadMonsterDefinitions(),t.info("  ‚úì 100+ monsters loaded")),t.info("‚úÖ All systems connected!")}async verifySystems(){t.info("üîç Verifying system integrity...");let e=0;const s=["GameEngine","PlayerSystem","RenderingSystem","InputManager"];for(const a of s)this.systems[a]||(t.error(`  ‚úó Critical system missing: ${a}`),e++);const i=["IntelligentAISystem","DynamicDifficultySystem","ProgressiveWorldSystem","MagicalEffectsSystem","WorldBeautificationSystem","MonsterDesignSystem"];let n=0;for(const a of i)this.systems[a]&&n++;return t.info(`  ‚Ñπ Phase 8-9 systems: ${n}/${i.length} active`),this.systems.ItemDatabase&&this.systems.ItemDatabase.items&&t.info(`  ‚úì Items loaded: ${this.systems.ItemDatabase.items.length}`),e===0?(t.info("‚úÖ All systems verified!"),!0):(t.warn(`‚ö† ${e} issues found, but game can continue`),!0)}async loadItemDatabase(){if(!this.systems.ItemDatabase)return;const e=this.systems.ItemDatabase.getAllItems?this.systems.ItemDatabase.getAllItems().length:1e3;t.info(`    Items in database: ${e}`)}async loadBiomeDefinitions(){if(!this.systems.BiomeDefinitions)return;const e=this.systems.BiomeDefinitions.biomes?this.systems.BiomeDefinitions.biomes.length:15;t.info(`    Biomes defined: ${e}`)}async loadMonsterDefinitions(){if(!this.systems.MonsterDefinitions)return;const e=this.systems.MonsterDefinitions.monsters?this.systems.MonsterDefinitions.monsters.length:100;t.info(`    Monsters defined: ${e}`)}startGameLoop(){t.info("üé¨ Starting main game loop...");const e=()=>{if(this.state!=="running"){requestAnimationFrame(e);return}const s=Date.now();this.deltaTime=(s-this.lastUpdateTime)/1e3,this.lastUpdateTime=s,this.deltaTime=Math.min(this.deltaTime,.1),this.updateAllSystems(this.deltaTime),requestAnimationFrame(e)};requestAnimationFrame(e)}updateAllSystems(e){if(!this.isPaused)try{this.brainUpdate(e);for(const s of this.updateOrder){const i=this.systems[s];i&&typeof i.update=="function"&&i.update(e)}}catch(s){t.error("Error in game loop:",s),this.handleError(s)}}handleError(e){t.error("üö® Game error:",e),this.systems.AdvancedAutoManagementSystem&&this.systems.AdvancedAutoManagementSystem.handleError(e),e.critical&&this.pause()}getSystem(e){return this.systems[e]}getAllSystems(){return{...this.systems}}getSystemCount(){return Object.keys(this.systems).length}pause(){this.isPaused=!0,this.state="paused",t.info("‚è∏ Game paused")}resume(){this.isPaused=!1,this.state="running",this.lastUpdateTime=Date.now(),t.info("‚ñ∂Ô∏è Game resumed")}async save(){t.info("üíæ Saving game state...");const e={version:this.version,timestamp:Date.now(),systems:{}};for(const[s,i]of Object.entries(this.systems))typeof i.exportData=="function"&&(e.systems[s]=i.exportData());return this.systems.CloudSaveSystem?await this.systems.CloudSaveSystem.save(e):this.systems.SaveLoadSystem&&await this.systems.SaveLoadSystem.save(e),t.info("‚úÖ Game saved!"),e}async load(e){if(t.info("üìÇ Loading game state..."),!e)return t.warn("No save data provided"),!1;e.version!==this.version&&t.warn(`Save version mismatch: ${e.version} vs ${this.version}`);for(const[s,i]of Object.entries(e.systems)){const n=this.systems[s];n&&typeof n.importData=="function"&&n.importData(i)}return t.info("‚úÖ Game loaded!"),!0}getSystemStatus(){const e={version:this.version,state:this.state,initialized:this.initialized,systemCount:this.getSystemCount(),systems:{}};for(const[s,i]of Object.entries(this.systems))e.systems[s]={active:!0,hasUpdate:typeof i.update=="function",hasExport:typeof i.exportData=="function",hasImport:typeof i.importData=="function"};return e}printSystemReport(){t.info("üìä Master Game System Report"),t.info("=".repeat(50)),t.info(`Version: ${this.version}`),t.info(`State: ${this.state}`),t.info(`Total Systems: ${this.getSystemCount()}`),t.info(""),t.info("Systems by Category:");for(const[e,s]of Object.entries(this.systemRegistry)){const i=s.filter(n=>this.systems[n]).length;t.info(`  ${e}: ${i}/${s.length}`)}t.info("=".repeat(50))}healthCheck(){const e={status:"healthy",issues:[],warnings:[]},s=["GameEngine","PlayerSystem","RenderingSystem"];for(const n of s)this.systems[n]||(e.issues.push(`Critical system missing: ${n}`),e.status="critical");const i=["IntelligentAISystem","DynamicDifficultySystem","ProgressiveWorldSystem"];for(const n of i)this.systems[n]||(e.warnings.push(`Phase 8-9 system missing: ${n}`),e.status==="healthy"&&(e.status="warning"));if(this.systems.AdvancedAutoManagementSystem){const n=this.systems.AdvancedAutoManagementSystem.getCurrentFPS();n<30&&(e.warnings.push(`Low FPS: ${n}`),e.status==="healthy"&&(e.status="warning"))}return e}initializeBrain(){t.info("üß† Initializing Master Brain..."),this.systems.AdvancedAutoManagementSystem&&(this.brain.performance=this.systems.AdvancedAutoManagementSystem,t.info("  ‚úì Brain connected to Performance System")),this.brain.decisionMaker={makeOptimizationDecision:()=>this.makeOptimizationDecision(),allocateResources:()=>this.allocateResources(),predictNextFrame:()=>this.predictNextFrame(),learnFromPlayer:()=>this.learnFromPlayer()},this.brain.resourceAllocator={cpuBudget:100,memoryBudget:this.performanceIntelligence.memoryLimit,networkBudget:1e3,gpuBudget:100},this.brain.learningSystem={patterns:{},predictions:{},adaptations:[]},t.info("‚úÖ Master Brain initialized and operational")}brainUpdate(e){this.updatePerformanceIntelligence(),this.optimizationStrategy.adaptiveEnabled&&this.makeOptimizationDecision(),this.allocateResources(),this.optimizationStrategy.learningEnabled&&this.learnFromPlayer(),this.monitorSystemHealth(),this.optimizationStrategy.autoRecoveryEnabled&&this.attemptAutoRecovery()}updatePerformanceIntelligence(){if(!this.brain.performance)return;const e=this.brain.performance.getPerformanceMetrics();this.performanceIntelligence.currentFPS=e.fps||60,this.performanceIntelligence.memoryUsage=e.memory||0,this.performanceIntelligence.cpuLoad=e.cpu||0,this.performanceIntelligence.fpsHistory.push(this.performanceIntelligence.currentFPS),this.performanceIntelligence.fpsHistory.length>60&&this.performanceIntelligence.fpsHistory.shift()}makeOptimizationDecision(){const e=this.performanceIntelligence.currentFPS,s=this.performanceIntelligence.targetFPS,i=this.performanceIntelligence.memoryUsage,n=this.performanceIntelligence.memoryLimit;e<s*.8?(this.brain.performance?.reduceQuality(),this.systemHealth.warnings.push(`Low FPS: ${e}, reducing quality`)):e>s*1.1&&i<n*.7&&this.brain.performance?.increaseQuality(),i>n*.9&&(this.brain.performance?.cleanupResources(),this.systemHealth.warnings.push(`High memory: ${Math.round(i/1024/1024)}MB, cleaning up`))}allocateResources(){const e=this.playerBehavior.preferredGameplay;e==="combat"?this.brain.resourceAllocator.cpuBudget={ai:40,effects:30,world:20,ui:10}:e==="exploration"?this.brain.resourceAllocator.cpuBudget={world:40,effects:30,ai:20,ui:10}:e==="social"&&(this.brain.resourceAllocator.cpuBudget={ui:40,network:30,effects:20,ai:10})}predictNextFrame(){const e=this.performanceIntelligence.fpsHistory;if(e.length<10)return null;const s=e.slice(-10),i=s.reduce((a,r)=>a+r,0)/s.length,n=s[s.length-1]-s[0];return{predictedFPS:i+n,needsOptimization:i<this.performanceIntelligence.targetFPS,trend:n>0?"improving":n<0?"degrading":"stable"}}learnFromPlayer(){const e=Date.now()-this.playerBehavior.sessionStart;e%6e4<100&&(this.brain.learningSystem.patterns[e]={fps:this.performanceIntelligence.currentFPS,memory:this.performanceIntelligence.memoryUsage,gameplay:this.playerBehavior.preferredGameplay,areas:this.playerBehavior.loadedAreas.length}),this.performanceIntelligence.currentFPS<45&&this.playerBehavior.performancePreference==="quality"?this.optimizationStrategy.mode="balanced":this.performanceIntelligence.currentFPS>55&&this.playerBehavior.performancePreference==="performance"&&(this.optimizationStrategy.mode="conservative")}monitorSystemHealth(){const e=Date.now();if(e-this.systemHealth.lastHealthCheck<5e3)return;this.systemHealth.lastHealthCheck=e;let s=0,i=0;for(const[n,a]of Object.entries(this.systems))i++,a&&typeof a.isHealthy=="function"?a.isHealthy()?(s++,this.systemHealth.systems[n]="healthy"):(this.systemHealth.systems[n]="unhealthy",this.systemHealth.warnings.push(`System unhealthy: ${n}`)):s++;this.systemHealth.overall=i>0?s/i*100:100}attemptAutoRecovery(){if(this.systemHealth.overall<50)if(t.warn("üö® System health critical! Attempting recovery..."),this.systemHealth.recoveryAttempts++,this.systemHealth.recoveryAttempts<3){this.brain.performance?.setQuality("LOW"),this.brain.performance?.cleanupResources();for(const[e,s]of Object.entries(this.systemHealth.systems))if(s==="unhealthy"){const i=this.systems[e];i&&typeof i.restart=="function"&&(i.restart(),t.info(`  ‚Üª Restarted ${e}`))}t.info("‚úÖ Recovery attempt complete")}else t.error("‚ùå Auto-recovery failed. Manual intervention needed."),this.state="error";else this.systemHealth.recoveryAttempts=0}detectDeviceCapabilities(){const e=document.createElement("canvas"),s=e.getContext("webgl2")||e.getContext("webgl");if(!s)return{tier:"low",webgl2:!1,maxTextureSize:2048,recommendedQuality:"LOW"};const i=s.getExtension("WEBGL_debug_renderer_info"),n=i?s.getParameter(i.UNMASKED_RENDERER_WEBGL):"",a=/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);let r="medium",m="MEDIUM";return a?(r="low",m="LOW"):(n.includes("NVIDIA")||n.includes("AMD Radeon"))&&(r="high",m="HIGH"),{tier:r,webgl2:!!e.getContext("webgl2"),maxTextureSize:s.getParameter(s.MAX_TEXTURE_SIZE),recommendedQuality:m,renderer:n,isMobile:a}}getBrainStatus(){return{connected:!!this.brain.performance,performanceIntelligence:this.performanceIntelligence,systemHealth:this.systemHealth,optimizationStrategy:this.optimizationStrategy,playerBehavior:this.playerBehavior,prediction:this.predictNextFrame()}}}const o=new y;typeof window<"u"&&(window.masterGame=o,document.readyState==="loading"?document.addEventListener("DOMContentLoaded",()=>{o.initialize().then(()=>{t.info("üéÆ Dynasty of Emberveil - Ready to Play!"),o.printSystemReport()})}):o.initialize().then(()=>{t.info("üéÆ Dynasty of Emberveil - Ready to Play!"),o.printSystemReport()}));export{y as MasterGameSystem,o as default,o as masterGame};
