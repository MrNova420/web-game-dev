import{l as t}from"./index-Bf-_4h4A.js";import"./three-DTQjiZ7L.js";import"./cannon-DPZWuR6y.js";class l{constructor(){this.limitGauges=new Map,this.maxLimit=100,this.limitBreaks={OMNISLASH:{name:"Omnislash",animation:"/assets/animations/omnislash.fbx",vfx:"/assets/particles/omnislash_effect.png",hits:15,damagePerHit:200},METEOR:{name:"Meteor",animation:"/assets/animations/meteor_cast.fbx",vfx:"/assets/particles/meteor_rain.png",aoe:!0,radius:20,damage:5e3},FINAL_HEAVEN:{name:"Final Heaven",animation:"/assets/animations/final_heaven.fbx",vfx:"/assets/particles/divine_impact.png",damage:9999,ignoreDefense:!0}}}gainLimitCharge(i,e){const s=this.limitGauges.get(i)||0,a=Math.min(s+e,this.maxLimit);this.limitGauges.set(i,a),a>=this.maxLimit&&t.info(`${i} LIMIT BREAK READY!`)}executeLimitBreak(i,e){const s=this.limitGauges.get(i)||0;if(s<this.maxLimit)return t.info(`${i} limit gauge not full (${s}/${this.maxLimit})`),null;const a=this.limitBreaks[e];return t.info(`${i} executes ${a.name}!`),t.info(`  Animation: ${a.animation}`),t.info(`  VFX: ${a.vfx}`),this.limitGauges.set(i,0),a}}export{l as LimitBreakSystem};
