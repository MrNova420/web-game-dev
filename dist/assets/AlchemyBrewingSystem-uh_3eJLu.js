import{l as a}from"./index-uQPGMzc0.js";import"./three-DTQjiZ7L.js";import"./cannon-DPZWuR6y.js";class p{constructor(t){this.gameEngine=t,this.activeBrews=new Map,this.completedPotions=new Set,this.discoveredRecipes=new Set(["basic_health_potion","basic_mana_potion"]),this.alchemyLevel=1,this.alchemyXP=0,this.alchemyXPToNext=100,this.equipment={cauldron:{tier:1,slots:3,quality:1},alembic:null,mortar:{tier:1,grindSpeed:1},phials:{count:10,tier:1}},this.recipes=this.createRecipeDatabase(),this.ingredients=this.createIngredientDatabase(),this.brewingMethods={boil:{time:30,difficulty:1,qualityMod:1},simmer:{time:60,difficulty:2,qualityMod:1.2},distill:{time:120,difficulty:3,qualityMod:1.5},infuse:{time:90,difficulty:2,qualityMod:1.3},ferment:{time:300,difficulty:4,qualityMod:1.8},transmute:{time:180,difficulty:5,qualityMod:2}}}createRecipeDatabase(){return{basic_health_potion:{name:"Basic Health Potion",type:"health",tier:1,ingredients:[{id:"red_herb",amount:2},{id:"spring_water",amount:1}],method:"boil",duration:30,difficulty:1,result:{hp:50},xpGain:10},basic_mana_potion:{name:"Basic Mana Potion",type:"mana",tier:1,ingredients:[{id:"blue_herb",amount:2},{id:"spring_water",amount:1}],method:"boil",duration:30,difficulty:1,result:{mana:50},xpGain:10},greater_health_potion:{name:"Greater Health Potion",type:"health",tier:2,ingredients:[{id:"red_herb",amount:3},{id:"honey",amount:1},{id:"purified_water",amount:1}],method:"simmer",duration:60,difficulty:2,result:{hp:150},xpGain:25,unlockLevel:5},strength_elixir:{name:"Elixir of Strength",type:"buff",tier:2,ingredients:[{id:"iron_root",amount:2},{id:"beast_blood",amount:1},{id:"alcohol",amount:1}],method:"infuse",duration:90,difficulty:3,result:{attackBonus:20,duration:300},xpGain:40,unlockLevel:10},swiftness_potion:{name:"Potion of Swiftness",type:"buff",tier:2,ingredients:[{id:"feather_grass",amount:3},{id:"lightning_essence",amount:1},{id:"purified_water",amount:1}],method:"simmer",duration:60,difficulty:2,result:{speedBonus:30,duration:180},xpGain:35,unlockLevel:8},grand_healing_elixir:{name:"Grand Healing Elixir",type:"health",tier:3,ingredients:[{id:"golden_herb",amount:2},{id:"phoenix_tear",amount:1},{id:"celestial_water",amount:1},{id:"honey",amount:2}],method:"distill",duration:120,difficulty:4,result:{hp:500,regen:50},xpGain:80,unlockLevel:20},invisibility_potion:{name:"Potion of Invisibility",type:"buff",tier:3,ingredients:[{id:"shadow_bloom",amount:3},{id:"ghost_essence",amount:1},{id:"void_water",amount:1}],method:"infuse",duration:120,difficulty:5,result:{invisible:!0,duration:60},xpGain:100,unlockLevel:25},philosophers_stone:{name:"Philosopher's Stone",type:"legendary",tier:4,ingredients:[{id:"primordial_essence",amount:1},{id:"dragon_blood",amount:1},{id:"star_dust",amount:1},{id:"eternal_flame",amount:1}],method:"transmute",duration:300,difficulty:10,result:{transmute:!0},xpGain:500,unlockLevel:50},elixir_of_immortality:{name:"Elixir of Immortality",type:"legendary",tier:4,ingredients:[{id:"phoenix_tear",amount:3},{id:"unicorn_horn",amount:1},{id:"ambrosia",amount:1},{id:"time_crystal",amount:1}],method:"transmute",duration:360,difficulty:10,result:{revive:!0,fullHeal:!0},xpGain:1e3,unlockLevel:75},green_goddess_brew:{name:"Green Goddess Brew",type:"special",tier:2,ingredients:[{id:"cannabis_flower",amount:3},{id:"honey",amount:2},{id:"mint_leaf",amount:2},{id:"spring_water",amount:1}],method:"infuse",duration:90,difficulty:3,result:{relaxation:100,creativity:50,duration:600},xpGain:60,unlockLevel:15},cosmic_elixir:{name:"Cosmic Elixir",type:"special",tier:3,ingredients:[{id:"psychedelic_mushroom",amount:2},{id:"cannabis_concentrate",amount:1},{id:"star_dust",amount:1},{id:"void_water",amount:1}],method:"ferment",duration:240,difficulty:6,result:{consciousness:200,visions:!0,duration:300},xpGain:150,unlockLevel:40}}}createIngredientDatabase(){return{red_herb:{name:"Red Herb",rarity:"common",properties:["healing","vitality"]},blue_herb:{name:"Blue Herb",rarity:"common",properties:["mana","magic"]},spring_water:{name:"Spring Water",rarity:"common",properties:["pure","neutral"]},iron_root:{name:"Iron Root",rarity:"uncommon",properties:["strength","endurance"]},feather_grass:{name:"Feather Grass",rarity:"uncommon",properties:["speed","lightness"]},honey:{name:"Honey",rarity:"uncommon",properties:["sweet","binding"]},purified_water:{name:"Purified Water",rarity:"uncommon",properties:["pure","enhanced"]},golden_herb:{name:"Golden Herb",rarity:"rare",properties:["healing","divine"]},shadow_bloom:{name:"Shadow Bloom",rarity:"rare",properties:["stealth","darkness"]},lightning_essence:{name:"Lightning Essence",rarity:"rare",properties:["speed","electric"]},beast_blood:{name:"Beast Blood",rarity:"rare",properties:["power","primal"]},phoenix_tear:{name:"Phoenix Tear",rarity:"epic",properties:["resurrection","fire"]},dragon_blood:{name:"Dragon Blood",rarity:"epic",properties:["power","magic"]},unicorn_horn:{name:"Unicorn Horn",rarity:"epic",properties:["purity","healing"]},ghost_essence:{name:"Ghost Essence",rarity:"epic",properties:["ethereal","stealth"]},primordial_essence:{name:"Primordial Essence",rarity:"legendary",properties:["creation","power"]},star_dust:{name:"Star Dust",rarity:"legendary",properties:["cosmic","magic"]},time_crystal:{name:"Time Crystal",rarity:"legendary",properties:["time","eternal"]},eternal_flame:{name:"Eternal Flame",rarity:"legendary",properties:["fire","immortal"]},cannabis_flower:{name:"Cannabis Flower",rarity:"uncommon",properties:["relaxation","healing"]},cannabis_concentrate:{name:"Cannabis Concentrate",rarity:"rare",properties:["potent","psychoactive"]},psychedelic_mushroom:{name:"Psychedelic Mushroom",rarity:"rare",properties:["vision","consciousness"]},void_water:{name:"Void Water",rarity:"epic",properties:["void","transformation"]},celestial_water:{name:"Celestial Water",rarity:"epic",properties:["divine","pure"]},ambrosia:{name:"Ambrosia",rarity:"legendary",properties:["divine","immortality"]}}}startBrew(t){const e=this.recipes[t];if(!e)return{success:!1,message:"Recipe not found"};if(!this.discoveredRecipes.has(t))return{success:!1,message:"Recipe not discovered"};if(e.unlockLevel&&this.alchemyLevel<e.unlockLevel)return{success:!1,message:`Requires Alchemy Level ${e.unlockLevel}`};for(const r of e.ingredients)if(!this.hasIngredient(r.id,r.amount))return{success:!1,message:`Missing ${r.amount}x ${this.ingredients[r.id]?.name}`};if(!this.brewingMethods[e.method])return{success:!1,message:"Invalid brewing method"};for(const r of e.ingredients)this.consumeIngredient(r.id,r.amount);const n=`brew_${Date.now()}_${Math.random().toString(36).substr(2,9)}`,o={id:n,recipeId:t,recipe:e,method:e.method,startTime:Date.now(),duration:e.duration*1e3,difficulty:e.difficulty,stage:"brewing",quality:0,progress:0,events:[],requiredActions:this.generateBrewingActions(e.difficulty)};return this.activeBrews.set(n,o),a.info(`Started brewing ${e.name}`),{success:!0,brewId:n}}generateBrewingActions(t){const e=[],i=Math.floor(t/2)+1,n=["stir","heat","cool","add_reagent","filter","shake"];for(let o=0;o<i;o++){const r=n[Math.floor(Math.random()*n.length)];e.push({type:r,timing:Math.random()*.8+.1,completed:!1,window:5e3})}return e.sort((o,r)=>o.timing-r.timing)}update(t){const e=Date.now();for(const[i,n]of this.activeBrews){if(n.stage!=="brewing")continue;const o=e-n.startTime;n.progress=Math.min(1,o/n.duration);for(const r of n.requiredActions){if(r.completed)continue;const c=n.startTime+n.duration*r.timing,s=e-c;s>0&&s<r.window?n.currentAction=r:s>=r.window&&(r.completed=!0,r.missed=!0,n.quality-=.1,n.events.push({type:"missed_action",action:r.type,time:e}))}n.progress>=1&&this.completeBrew(i)}}performAction(t,e){const i=this.activeBrews.get(t);return!i||i.stage!=="brewing"?{success:!1,message:"Invalid brew"}:!i.currentAction||i.currentAction.type!==e?{success:!1,message:"Wrong action or timing"}:(i.currentAction.completed=!0,i.currentAction=null,i.quality+=.2,i.events.push({type:"action_completed",action:e,time:Date.now()}),{success:!0,quality:i.quality})}completeBrew(t){const e=this.activeBrews.get(t);if(!e)return null;e.stage="complete",e.endTime=Date.now();const i=this.brewingMethods[e.method].qualityMod,n=this.equipment.cauldron.quality,r=e.requiredActions.filter(m=>m.completed&&!m.missed).length/e.requiredActions.length;e.finalQuality=Math.max(0,Math.min(1,(e.quality*.5+r*.5)*i*n));const c=this.createPotion(e.recipe,e.finalQuality),s=Math.floor(e.recipe.xpGain*(1+e.finalQuality));return this.addAlchemyXP(s),this.completedPotions.add(e.recipeId),this.gameEngine.inventorySystem&&this.gameEngine.inventorySystem.addItem(c),a.info(`Completed ${e.recipe.name} with ${(e.finalQuality*100).toFixed(0)}% quality`),this.activeBrews.delete(t),{potion:c,quality:e.finalQuality,xp:s}}createPotion(t,e){const i={id:`${t.type}_${Date.now()}`,name:t.name,type:"potion",tier:t.tier,quality:e,effects:{...t.result}};for(const[n,o]of Object.entries(i.effects))typeof o=="number"&&(i.effects[n]=Math.floor(o*(.5+e*.5)));return i}experimentBrew(t){for(const[e,i]of Object.entries(this.recipes))if(!this.discoveredRecipes.has(e)&&this.ingredientsMatch(t,i.ingredients))return this.discoveredRecipes.add(e),a.info(`Discovered recipe: ${i.name}!`),{success:!0,recipe:i};return a.info("Experiment failed - no recipe discovered"),{success:!1}}ingredientsMatch(t,e){if(t.length!==e.length)return!1;const i=new Map,n=new Map;for(const o of t)i.set(o.id,(i.get(o.id)||0)+o.amount);for(const o of e)n.set(o.id,(n.get(o.id)||0)+o.amount);for(const[o,r]of n)if(i.get(o)!==r)return!1;return!0}addAlchemyXP(t){for(this.alchemyXP+=t;this.alchemyXP>=this.alchemyXPToNext;)this.alchemyXP-=this.alchemyXPToNext,this.alchemyLevel++,this.alchemyXPToNext=Math.floor(this.alchemyXPToNext*1.5),a.info(`Alchemy Level Up! Now level ${this.alchemyLevel}`),this.onLevelUp()}onLevelUp(){for(const[t,e]of Object.entries(this.recipes))e.unlockLevel===this.alchemyLevel&&(this.discoveredRecipes.add(t),a.info(`Unlocked recipe: ${e.name}`))}upgradeEquipment(t,e){if(!this.equipment[t])return{success:!1,message:"Invalid equipment type"};const i=e*1e3;if(this.gameEngine.economySystem){if(!this.gameEngine.economySystem.canAfford(i))return{success:!1,message:"Not enough gold"};this.gameEngine.economySystem.spendGold(i)}return this.equipment[t].tier=e,this.equipment[t].quality=1+(e-1)*.2,{success:!0}}hasIngredient(t,e){return this.gameEngine.inventorySystem?this.gameEngine.inventorySystem.hasItem(t,e):!0}consumeIngredient(t,e){this.gameEngine.inventorySystem&&this.gameEngine.inventorySystem.removeItem(t,e)}getActiveBrews(){return Array.from(this.activeBrews.values())}getDiscoveredRecipes(){return Array.from(this.discoveredRecipes).map(t=>this.recipes[t])}getAlchemyStats(){return{level:this.alchemyLevel,xp:this.alchemyXP,xpToNext:this.alchemyXPToNext,discoveredRecipes:this.discoveredRecipes.size,totalRecipes:Object.keys(this.recipes).length,completedPotions:this.completedPotions.size,equipment:this.equipment}}}export{p as AlchemyBrewingSystem};
