import{V as s}from"./three-DTQjiZ7L.js";class l{constructor(e){this.scene=e,this.active=!1,this.assets={platforms:{basic:"/assets/models/platforms/platform_basic.glb",moving:"/assets/models/platforms/platform_moving.glb",crumbling:"/assets/models/platforms/platform_crumble.glb",ice:"/assets/models/platforms/platform_ice.glb",spring:"/assets/models/platforms/platform_spring.glb"},character:{model:"/assets/models/characters/platformer_hero.glb",animations:{idle:"/assets/animations/platformer_idle.fbx",run:"/assets/animations/platformer_run.fbx",jump:"/assets/animations/platformer_jump.fbx",fall:"/assets/animations/platformer_fall.fbx",wallslide:"/assets/animations/platformer_wallslide.fbx",doublejump:"/assets/animations/platformer_doublejump.fbx"}},backgrounds:{layer1:"/assets/textures/backgrounds/platform_bg_far.png",layer2:"/assets/textures/backgrounds/platform_bg_mid.png",layer3:"/assets/textures/backgrounds/platform_bg_near.png"},collectibles:{coin:"/assets/models/collectibles/coin.glb",gem:"/assets/models/collectibles/gem.glb",star:"/assets/models/collectibles/star.glb",heart:"/assets/models/collectibles/heart.glb"},hazards:{spike:"/assets/models/hazards/spike.glb",saw:"/assets/models/hazards/saw_blade.glb",fire:"/assets/models/hazards/fire_trap.glb",laser:"/assets/models/hazards/laser_beam.glb"},powerups:{speed_boost:"/assets/ui/icons/speed_boost.png",double_jump:"/assets/ui/icons/double_jump.png",invincibility:"/assets/ui/icons/invincibility.png",magnet:"/assets/ui/icons/magnet.png"},enemies:{walker:"/assets/models/enemies/platform_walker.glb",flyer:"/assets/models/enemies/platform_flyer.glb",shooter:"/assets/models/enemies/platform_shooter.glb"}},this.physics={gravity:-25,jumpForce:12,doubleJumpForce:10,moveSpeed:8,airControl:.7,wallSlideSpeed:-2,wallJumpForce:{x:10,y:12},friction:.85,airFriction:.95},this.player={position:new s(0,0,0),velocity:new s(0,0,0),grounded:!1,canDoubleJump:!0,wallSliding:!1,facing:1,health:3,coins:0,gems:0,stars:0,powerups:[]},this.levels=this.createLevels(),this.currentLevel=0,this.platforms=[],this.collectibles=[],this.hazards=[],this.enemies=[],this.particles=[],this.camera={position:new s(0,5,20),followSpeed:.1,bounds:{minX:-50,maxX:50,minY:-10,maxY:30}},this.score=0,this.timeBonus=1e3,this.combo=0,this.maxCombo=0,this.backgroundLayers=[],this.initialize()}initialize(){console.log("üéÆ Platformer Game System initialized"),console.log("   Using Kenney Platform Pack + Mixamo + OpenGameArt")}createLevels(){return[{name:"Green Hills",theme:"plains",background:"plains",difficulty:1,platformCount:20,collectibleCount:30,hazardCount:5,enemyCount:3,boss:null,timeLimit:180,targetScore:500,description:"Learn the basics of jumping and movement"},{name:"Mystic Forest",theme:"forest",background:"forest",difficulty:2,platformCount:30,collectibleCount:40,hazardCount:10,enemyCount:8,boss:null,timeLimit:240,targetScore:1e3,description:"Navigate through the magical forest"},{name:"Crystal Caverns",theme:"cave",background:"cave",difficulty:3,platformCount:35,collectibleCount:50,hazardCount:15,enemyCount:12,boss:null,timeLimit:300,targetScore:1500,description:"Explore the glowing crystal caves"},{name:"Frozen Palace",theme:"ice",background:"ice",difficulty:4,platformCount:40,collectibleCount:60,hazardCount:20,enemyCount:15,boss:{type:"ice_golem",health:500},timeLimit:360,targetScore:2500,description:"Slide through icy platforms and defeat the Ice Golem"},{name:"Lava Peaks",theme:"volcano",background:"volcano",difficulty:5,platformCount:45,collectibleCount:70,hazardCount:30,enemyCount:20,boss:null,timeLimit:300,targetScore:3e3,description:"Race through the volcanic wasteland"},{name:"Cloud Kingdom",theme:"sky",background:"sky",difficulty:6,platformCount:50,collectibleCount:80,hazardCount:25,enemyCount:25,boss:{type:"sky_dragon",health:800},timeLimit:420,targetScore:4e3,description:"Soar through floating islands and face the Sky Dragon"},{name:"Spooky Mansion",theme:"haunted",background:"haunted",difficulty:7,platformCount:55,collectibleCount:90,hazardCount:35,enemyCount:30,boss:null,timeLimit:480,targetScore:5e3,description:"Navigate the ghost-filled mansion"},{name:"Ancient Ruins",theme:"desert",background:"desert",difficulty:8,platformCount:60,collectibleCount:100,hazardCount:40,enemyCount:35,boss:{type:"sand_guardian",health:1e3},timeLimit:540,targetScore:6e3,description:"Uncover secrets in the desert temple"},{name:"Cyber Factory",theme:"tech",background:"tech",difficulty:9,platformCount:65,collectibleCount:110,hazardCount:50,enemyCount:40,boss:null,timeLimit:480,targetScore:7e3,description:"Hack through the automated factory"},{name:"Zero Gravity",theme:"space",background:"space",difficulty:10,platformCount:70,collectibleCount:120,hazardCount:45,enemyCount:45,boss:{type:"alien_overlord",health:1500},timeLimit:600,targetScore:8e3,description:"Navigate zero-gravity platforms in space"},{name:"Dark Dimension",theme:"nightmare",background:"nightmare",difficulty:11,platformCount:80,collectibleCount:150,hazardCount:60,enemyCount:50,boss:null,timeLimit:660,targetScore:1e4,description:"Survive the twisted nightmare world"},{name:"Ultimate Gauntlet",theme:"epic",background:"epic",difficulty:12,platformCount:100,collectibleCount:200,hazardCount:80,enemyCount:60,boss:{type:"omega_boss",health:3e3},timeLimit:900,targetScore:15e3,description:"The ultimate platforming challenge - all mechanics combined"}]}startGame(){console.log("üéÆ Starting Platformer Mini-Game"),console.log(`   Level: ${this.levels[this.currentLevel].name}`),this.active=!0,this.loadLevel(this.currentLevel)}loadLevel(e){const t=this.levels[e];console.log(`üì¶ Loading Level ${e+1}: ${t.name}`),console.log(`   Theme: ${t.theme}, Difficulty: ${t.difficulty}`),console.log("   Using external assets from Kenney + Quaternius + OpenGameArt"),this.player.position.set(0,2,0),this.player.velocity.set(0,0,0),this.player.health=3,this.player.coins=0,this.platforms=[],this.collectibles=[],this.hazards=[],this.enemies=[],this.generatePlatforms(t),this.spawnCollectibles(t),this.spawnHazards(t),this.spawnEnemies(t),this.loadParallaxBackground(t.background),t.boss&&this.spawnBoss(t.boss)}generatePlatforms(e){console.log(`üèóÔ∏è  Generating ${e.platformCount} platforms (Kenney Platform Pack)`)}spawnCollectibles(e){console.log(`üíé Spawning ${e.collectibleCount} collectibles (Kenney Game Icons)`)}spawnHazards(e){console.log(`‚ö†Ô∏è  Spawning ${e.hazardCount} hazards (Kenney Obstacle Pack)`)}spawnEnemies(e){console.log(`üëæ Spawning ${e.enemyCount} enemies (Quaternius)`)}spawnBoss(e){console.log(`üëπ Spawning boss: ${e.type} (Sketchfab Free)`)}loadParallaxBackground(e){console.log(`üñºÔ∏è  Loading parallax background: ${e} (OpenGameArt)`)}update(e){this.active&&(this.updatePlayerPhysics(e),this.updateCamera(e),this.updatePlatforms(e),this.updateCollectibles(e),this.updateHazards(e),this.updateEnemies(e),this.updateParticles(e),this.updateParallax(e),this.checkLevelComplete())}updatePlayerPhysics(e){this.player.velocity.y+=this.physics.gravity*e,this.player.position.x+=this.player.velocity.x*e,this.player.position.y+=this.player.velocity.y*e,this.player.grounded?this.player.velocity.x*=this.physics.friction:this.player.velocity.x*=this.physics.airFriction,this.player.position.y<0&&(this.player.position.y=0,this.player.velocity.y=0,this.player.grounded=!0,this.player.canDoubleJump=!0)}updateCamera(e){const t=this.player.position.x,a=this.player.position.y+5;this.camera.position.x+=(t-this.camera.position.x)*this.camera.followSpeed,this.camera.position.y+=(a-this.camera.position.y)*this.camera.followSpeed,this.camera.position.x=Math.max(this.camera.bounds.minX,Math.min(this.camera.bounds.maxX,this.camera.position.x)),this.camera.position.y=Math.max(this.camera.bounds.minY,Math.min(this.camera.bounds.maxY,this.camera.position.y))}updatePlatforms(e){}updateCollectibles(e){}updateHazards(e){}updateEnemies(e){}updateParticles(e){}updateParallax(e){}checkLevelComplete(){}handleInput(e){this.active&&(e.left?(this.player.velocity.x=-this.physics.moveSpeed,this.player.facing=-1):e.right&&(this.player.velocity.x=this.physics.moveSpeed,this.player.facing=1),e.jump&&this.player.grounded?(this.player.velocity.y=this.physics.jumpForce,this.player.grounded=!1):e.jump&&this.player.canDoubleJump&&!this.player.grounded&&(this.player.velocity.y=this.physics.doubleJumpForce,this.player.canDoubleJump=!1),this.player.wallSliding&&e.jump&&(this.player.velocity.x=this.physics.wallJumpForce.x*-this.player.facing,this.player.velocity.y=this.physics.wallJumpForce.y,this.player.wallSliding=!1))}collectItem(e){switch(e.type){case"coin":this.player.coins++,this.score+=10;break;case"gem":this.player.gems++,this.score+=50;break;case"star":this.player.stars++,this.score+=100;break;case"heart":this.player.health=Math.min(this.player.health+1,3);break}this.combo++,this.maxCombo=Math.max(this.maxCombo,this.combo)}takeDamage(e=1){this.player.health-=e,this.combo=0,this.player.health<=0&&this.gameOver()}gameOver(){console.log("üíÄ Game Over!"),this.active=!1}levelComplete(){console.log(`‚úÖ Level ${this.currentLevel+1} Complete!`),console.log(`   Score: ${this.score}, Max Combo: ${this.maxCombo}`),this.currentLevel++,this.currentLevel<this.levels.length?this.loadLevel(this.currentLevel):this.gameComplete()}gameComplete(){console.log("üéâ All levels complete! Platformer Master!"),this.active=!1}getStats(){return{level:this.currentLevel+1,levelName:this.levels[this.currentLevel].name,health:this.player.health,coins:this.player.coins,gems:this.player.gems,stars:this.player.stars,score:this.score,combo:this.combo,maxCombo:this.maxCombo,source:"Kenney Platform Pack + Mixamo + OpenGameArt + Quaternius"}}}export{l as PlatformerGameSystem};
