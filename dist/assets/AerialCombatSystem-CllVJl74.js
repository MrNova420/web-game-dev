class t{constructor(){this.airborneEntities=new Map,this.animations={air_slash:"/assets/animations/air_slash.fbx",air_combo:"/assets/animations/air_combo.fbx",ground_slam:"/assets/animations/ground_slam.fbx"},this.vfx={air_trail:"/assets/particles/air_slash_trail.png",impact_crater:"/assets/particles/ground_crater.png"}}launch(a,s){console.log(`${a} launches ${s} into air!`),this.airborneEntities.set(s,{launchedBy:a,juggleCount:0})}airCombo(a,s){const i=this.airborneEntities.get(s);return i?(i.juggleCount++,console.log(`${a} AIR COMBO (${i.juggleCount} hits)`),console.log(`  Animation: ${this.animations.air_combo}`),console.log(`  VFX: ${this.vfx.air_trail}`),{damage:100*i.juggleCount}):null}groundSlam(a,s){return console.log(`${a} GROUND SLAM!`),console.log(`  Animation: ${this.animations.ground_slam}`),console.log(`  VFX: ${this.vfx.impact_crater}`),this.airborneEntities.delete(s),{damage:300,aoe:!0,radius:5}}}export{t as AerialCombatSystem};
