class s{constructor(e,t,i,r,a){this.scene=e,this.terrainSystem=t,this.weatherSystem=i,this.textureManager=r,this.soundManager=a,this.biomes={forest:this.createBiomeConfig("forest",{textures:["grass","dirt","moss"],vegetation:["tree","bush","flower"],weatherPatterns:["clear","rain"],lighting:{ambient:.6,tint:{r:.9,g:1,b:.9}},fogColor:{r:.7,g:.8,b:.7},ambientSound:"forest"}),darkForest:this.createBiomeConfig("darkForest",{textures:["dark_grass","dark_dirt","dark_moss"],vegetation:["dead_tree","thorns","mushroom"],weatherPatterns:["fog","rain"],lighting:{ambient:.3,tint:{r:.6,g:.6,b:.7}},fogColor:{r:.4,g:.4,b:.5},ambientSound:"dark_forest"}),plains:this.createBiomeConfig("plains",{textures:["grass","dirt"],vegetation:["grass_tuft","wildflower"],weatherPatterns:["clear","rain"],lighting:{ambient:.9,tint:{r:1,g:1,b:1}},fogColor:{r:.8,g:.9,b:1},ambientSound:"wind_soft"}),grasslands:this.createBiomeConfig("grasslands",{textures:["tall_grass","dirt"],vegetation:["tall_grass","wheat"],weatherPatterns:["clear","rain"],lighting:{ambient:.9,tint:{r:1,g:1,b:.95}},fogColor:{r:.8,g:.9,b:1},ambientSound:"grassland"}),mountains:this.createBiomeConfig("mountains",{textures:["rock","snow","stone"],vegetation:["pine","rock_formation"],weatherPatterns:["clear","snow","blizzard"],lighting:{ambient:.8,tint:{r:.95,g:.95,b:1}},fogColor:{r:.8,g:.85,b:.9},ambientSound:"wind_mountain"}),snowyPeaks:this.createBiomeConfig("snowyPeaks",{textures:["snow","ice","rock"],vegetation:["ice_crystal","frozen_tree"],weatherPatterns:["snow","blizzard"],lighting:{ambient:1,tint:{r:.9,g:.95,b:1}},fogColor:{r:.9,g:.95,b:1},ambientSound:"blizzard"}),desert:this.createBiomeConfig("desert",{textures:["sand","sandstone"],vegetation:["cactus","dead_bush"],weatherPatterns:["clear","sandstorm"],lighting:{ambient:1,tint:{r:1,g:.95,b:.8}},fogColor:{r:.9,g:.8,b:.6},ambientSound:"desert"}),swamp:this.createBiomeConfig("swamp",{textures:["mud","murky_water","moss"],vegetation:["willow","cattail","lily_pad"],weatherPatterns:["fog","rain"],lighting:{ambient:.5,tint:{r:.7,g:.8,b:.7}},fogColor:{r:.5,g:.6,b:.5},ambientSound:"swamp"}),volcano:this.createBiomeConfig("volcano",{textures:["lava_rock","ash","obsidian"],vegetation:["dead_tree","lava_crystal"],weatherPatterns:["clear","storm"],lighting:{ambient:.7,tint:{r:1,g:.7,b:.5}},fogColor:{r:.5,g:.3,b:.2},ambientSound:"volcano"}),tundra:this.createBiomeConfig("tundra",{textures:["snow","ice","frozen_dirt"],vegetation:["ice_spike","frozen_bush"],weatherPatterns:["snow","blizzard"],lighting:{ambient:.9,tint:{r:.9,g:.95,b:1}},fogColor:{r:.9,g:.95,b:1},ambientSound:"tundra"}),enchantedForest:this.createBiomeConfig("enchantedForest",{textures:["glowing_grass","magical_dirt","crystal"],vegetation:["glowing_tree","magic_flower","crystal"],weatherPatterns:["clear"],lighting:{ambient:.7,tint:{r:.8,g:.9,b:1}},fogColor:{r:.6,g:.7,b:.9},ambientSound:"magical"}),crystalCaverns:this.createBiomeConfig("crystalCaverns",{textures:["crystal","glowing_stone","cave_floor"],vegetation:["crystal_formation","glowing_mushroom"],weatherPatterns:["clear"],lighting:{ambient:.4,tint:{r:.7,g:.8,b:1}},fogColor:{r:.3,g:.4,b:.6},ambientSound:"cavern"})},this.activeBiomes=new Map,this.biomeBlendDistance=50,this.initialize()}initialize(){console.log("[BiomeRenderingSystem] Initializing biome system..."),console.log(`[BiomeRenderingSystem] ${Object.keys(this.biomes).length} biomes available`)}createBiomeConfig(e,t){return{id:e,textures:t.textures||[],vegetation:t.vegetation||[],weatherPatterns:t.weatherPatterns||["clear"],lighting:t.lighting||{ambient:.8,tint:{r:1,g:1,b:1}},fogColor:t.fogColor||{r:.8,g:.9,b:1},fogDensity:t.fogDensity||.001,ambientSound:t.ambientSound||null,particleEffects:t.particleEffects||[]}}getBiomeAt(e,t){const i=Math.sqrt(e*e+t*t);return i<200?this.biomes.plains:i<500?this.biomes.forest:i<1e3?this.biomes.mountains:this.biomes.snowyPeaks}applyBiome(e,t){const i=`${Math.floor(e.x/100)},${Math.floor(e.z/100)}`;this.activeBiomes.has(i)&&this.activeBiomes.get(i).id===t.id||(this.activeBiomes.set(i,t),console.log(`[BiomeRenderingSystem] Applied biome ${t.id} at (${e.x}, ${e.z})`),this.applyBiomeEffects(t))}applyBiomeEffects(e){this.applyBiomeLighting(e),this.applyBiomeFog(e),this.applyBiomeWeather(e),this.applyBiomeSound(e),this.loadBiomeTextures(e)}applyBiomeLighting(e){console.log(`[BiomeRenderingSystem] Applying lighting for ${e.id}`)}applyBiomeFog(e){this.scene.fog&&(this.scene.fog.density=e.fogDensity)}applyBiomeWeather(e){if(this.weatherSystem&&e.weatherPatterns.length>0){const t=e.weatherPatterns[Math.floor(Math.random()*e.weatherPatterns.length)];this.weatherSystem.setWeather(t,3)}}applyBiomeSound(e){this.soundManager&&e.ambientSound&&this.soundManager.playAmbient(e.ambientSound,!0)}async loadBiomeTextures(e){if(this.textureManager)for(const t of e.textures)await this.textureManager.loadTerrainMaterial(t,{x:50,y:50})}update(e){const t=this.getBiomeAt(e.x,e.z);this.applyBiome(e,t)}getBiomeList(){return Object.keys(this.biomes)}getBiome(e){return this.biomes[e]}dispose(){this.activeBiomes.clear(),console.log("[BiomeRenderingSystem] Disposed")}}export{s as BiomeRenderingSystem};
