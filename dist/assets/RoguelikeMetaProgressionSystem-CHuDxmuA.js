class c{constructor(e){this.gameEngine=e,this.HOUR_IN_MS=36e5,this.metaCurrency={souls:0,essence:0,fragments:0},this.unlockedFeatures=new Set,this.unlockedClasses=new Set(["warrior"]),this.unlockedBiomes=new Set(["smoke_forest"]),this.unlockedModes=new Set(["story"]),this.metaUpgrades=new Map,this.upgradeDatabase=this.createUpgradeDatabase(),this.runStats={totalRuns:0,successfulRuns:0,totalDeaths:0,deepestFloor:0,totalKills:0,totalBossKills:0,fastestRun:1/0,longestRun:0,totalPlayTime:0},this.currentRun=null,this.metaAchievements=new Set,this.loadProgress()}createUpgradeDatabase(){return{base_health:{name:"Fortified Constitution",description:"Start each run with additional max HP",maxLevel:10,cost:e=>50*Math.pow(1.5,e),currency:"souls",effect:e=>({maxHP:10*e})},base_damage:{name:"Innate Power",description:"Start each run with increased base damage",maxLevel:10,cost:e=>50*Math.pow(1.5,e),currency:"souls",effect:e=>({baseDamage:2*e})},base_defense:{name:"Hardened Skin",description:"Start each run with increased base defense",maxLevel:10,cost:e=>50*Math.pow(1.5,e),currency:"souls",effect:e=>({baseDefense:2*e})},base_speed:{name:"Swift Feet",description:"Start each run with increased movement speed",maxLevel:5,cost:e=>75*Math.pow(1.5,e),currency:"souls",effect:e=>({baseSpeed:.05*e})},starting_gold:{name:"Starting Capital",description:"Begin runs with bonus gold",maxLevel:20,cost:e=>30*e,currency:"souls",effect:e=>({startingGold:50*e})},potion_capacity:{name:"Expanded Pouch",description:"Carry more potions",maxLevel:10,cost:e=>100*e,currency:"souls",effect:e=>({potionSlots:e})},inventory_size:{name:"Dimensional Storage",description:"Increase inventory capacity",maxLevel:15,cost:e=>80*e,currency:"souls",effect:e=>({inventorySlots:5*e})},bonus_xp:{name:"Quick Learner",description:"Gain bonus experience from all sources",maxLevel:10,cost:e=>100*Math.pow(1.3,e),currency:"souls",effect:e=>({xpMultiplier:.1*e})},loot_luck:{name:"Fortune Finder",description:"Increased chance for better loot",maxLevel:10,cost:e=>150*Math.pow(1.4,e),currency:"souls",effect:e=>({lootBonus:.05*e})},crit_chance:{name:"Critical Eye",description:"Permanent critical hit chance increase",maxLevel:10,cost:e=>120*Math.pow(1.5,e),currency:"souls",effect:e=>({critChance:.02*e})},dodge_chance:{name:"Evasive Maneuvers",description:"Chance to dodge attacks",maxLevel:5,cost:e=>200*Math.pow(1.6,e),currency:"essence",effect:e=>({dodgeChance:.03*e})},revive_token:{name:"Second Chance",description:"Auto-revive once per run",maxLevel:3,cost:e=>500*e,currency:"essence",effect:e=>({reviveTokens:e})},starting_level:{name:"Veteran Status",description:"Start runs at a higher level",maxLevel:10,cost:e=>300*Math.pow(1.5,e),currency:"essence",effect:e=>({startingLevel:e})},skill_points:{name:"Innate Talent",description:"Start with bonus skill points",maxLevel:20,cost:e=>250*e,currency:"essence",effect:e=>({bonusSkillPoints:e})},pet_power:{name:"Companion Bond",description:"Pets start stronger",maxLevel:10,cost:e=>200*Math.pow(1.3,e),currency:"essence",effect:e=>({petStatsMultiplier:.1*e})},boss_rewards:{name:"Legendary Fate",description:"Bosses guarantee rare+ items",maxLevel:1,cost:e=>100,currency:"fragments",effect:e=>({bossLootQuality:"rare_plus"})},permanent_buffs:{name:"Eternal Blessing",description:"Keep 1 buff permanently through death",maxLevel:3,cost:e=>150*e,currency:"fragments",effect:e=>({permanentBuffSlots:e})},checkpoint_system:{name:"Waypoint Master",description:"Unlock checkpoints every 5 floors",maxLevel:1,cost:e=>200,currency:"fragments",effect:e=>({checkpoints:!0})},reroll_abilities:{name:"Fate Weaver",description:"Reroll ability offerings once per floor",maxLevel:5,cost:e=>100*e,currency:"fragments",effect:e=>({rerollsPerFloor:e})}}}startRun(e={}){return this.currentRun={id:`run_${Date.now()}`,startTime:Date.now(),startFloor:e.startFloor||1,startingStats:this.calculateStartingStats(),floor:e.startFloor||1,kills:0,bossKills:0,deaths:0,soulsCollected:0,itemsFound:0,checkpointsUsed:0,revivedCount:0,active:!0},this.runStats.totalRuns++,this.applyMetaProgressionBonuses(),this.currentRun}calculateStartingStats(){const e={maxHP:100,baseDamage:10,baseDefense:5,baseSpeed:1,startingGold:0,potionSlots:3,inventorySlots:20,xpMultiplier:1,lootBonus:0,critChance:.1,dodgeChance:0,reviveTokens:0,startingLevel:1,bonusSkillPoints:0,petStatsMultiplier:1};for(const[s,t]of this.metaUpgrades){const r=this.upgradeDatabase[s];if(r){const n=r.effect(t);for(const[a,o]of Object.entries(n))typeof o=="number"&&e[a],e[a]=o}}return e}applyMetaProgressionBonuses(){if(!this.gameEngine.player||!this.currentRun)return;const e=this.currentRun.startingStats,s=this.gameEngine.player;s.maxHP+=e.maxHP-100,s.hp=s.maxHP,s.baseDamage+=e.baseDamage-10,s.defense+=e.baseDefense-5,s.moveSpeed*=e.baseSpeed,this.gameEngine.economySystem&&this.gameEngine.economySystem.addGold(e.startingGold),e.startingLevel>1&&(s.level=e.startingLevel,s.skillPoints+=e.bonusSkillPoints),e.reviveTokens>0&&(s.reviveTokens=e.reviveTokens)}endRun(e=!1,s=0){if(!this.currentRun)return null;const t=Date.now(),r=t-this.currentRun.startTime;this.currentRun.endTime=t,this.currentRun.duration=r,this.currentRun.finalFloor=s,this.currentRun.success=e,this.currentRun.active=!1,this.runStats.totalPlayTime+=r,e?this.runStats.successfulRuns++:this.runStats.totalDeaths++,s>this.runStats.deepestFloor&&(this.runStats.deepestFloor=s),this.runStats.totalKills+=this.currentRun.kills,this.runStats.totalBossKills+=this.currentRun.bossKills,r<this.runStats.fastestRun&&(this.runStats.fastestRun=r),r>this.runStats.longestRun&&(this.runStats.longestRun=r);const n=this.calculateRunRewards();this.metaCurrency.souls+=n.souls,this.metaCurrency.essence+=n.essence,this.metaCurrency.fragments+=n.fragments,this.checkForUnlocks(),this.saveProgress();const a={run:this.currentRun,rewards:n,newUnlocks:[]};return this.currentRun=null,a}calculateRunRewards(){if(!this.currentRun)return{souls:0,essence:0,fragments:0};let e=0,s=0,t=0;return e+=this.currentRun.floor*10,e+=this.currentRun.kills*2,e+=this.currentRun.bossKills*50,this.currentRun.success&&(e*=2,s+=Math.floor(this.currentRun.floor/10),this.currentRun.finalFloor>=100&&(t+=1),this.currentRun.finalFloor>=500&&(t+=5),this.currentRun.finalFloor>=999&&(t+=10)),s+=this.currentRun.bossKills,this.currentRun.duration<this.HOUR_IN_MS&&(e=Math.floor(e*1.5)),this.currentRun.deaths===0&&(e=Math.floor(e*1.25),s+=5),{souls:e,essence:s,fragments:t}}purchaseUpgrade(e){const s=this.upgradeDatabase[e];if(!s)return{success:!1,message:"Upgrade not found"};const t=this.metaUpgrades.get(e)||0;if(t>=s.maxLevel)return{success:!1,message:"Max level reached"};const r=s.cost(t),n=s.currency;return this.metaCurrency[n]<r?{success:!1,message:`Not enough ${n}`}:(this.metaCurrency[n]-=r,this.metaUpgrades.set(e,t+1),this.saveProgress(),{success:!0,newLevel:t+1,effect:s.effect(t+1)})}checkForUnlocks(){const e=[];return this.runStats.deepestFloor>=20&&!this.unlockedClasses.has("mage")&&(this.unlockedClasses.add("mage"),e.push({type:"class",id:"mage"})),this.runStats.deepestFloor>=30&&!this.unlockedClasses.has("rogue")&&(this.unlockedClasses.add("rogue"),e.push({type:"class",id:"rogue"})),this.runStats.deepestFloor>=50&&!this.unlockedClasses.has("ranger")&&(this.unlockedClasses.add("ranger"),e.push({type:"class",id:"ranger"})),this.runStats.deepestFloor>=75&&!this.unlockedClasses.has("cleric")&&(this.unlockedClasses.add("cleric"),e.push({type:"class",id:"cleric"})),this.runStats.deepestFloor>=21&&!this.unlockedBiomes.has("crystal_caves")&&(this.unlockedBiomes.add("crystal_caves"),e.push({type:"biome",id:"crystal_caves"})),this.runStats.deepestFloor>=41&&!this.unlockedBiomes.has("volcanic_wastes")&&(this.unlockedBiomes.add("volcanic_wastes"),e.push({type:"biome",id:"volcanic_wastes"})),this.runStats.deepestFloor>=61&&!this.unlockedBiomes.has("frozen_tundra")&&(this.unlockedBiomes.add("frozen_tundra"),e.push({type:"biome",id:"frozen_tundra"})),this.runStats.deepestFloor>=81&&!this.unlockedBiomes.has("sky_islands")&&(this.unlockedBiomes.add("sky_islands"),e.push({type:"biome",id:"sky_islands"})),this.runStats.successfulRuns>=1&&!this.unlockedModes.has("endless")&&(this.unlockedModes.add("endless"),e.push({type:"mode",id:"endless"})),this.runStats.successfulRuns>=5&&!this.unlockedModes.has("challenge")&&(this.unlockedModes.add("challenge"),e.push({type:"mode",id:"challenge"})),this.runStats.successfulRuns>=10&&!this.unlockedModes.has("hardcore")&&(this.unlockedModes.add("hardcore"),e.push({type:"mode",id:"hardcore"})),this.runStats.totalBossKills>=10&&!this.unlockedFeatures.has("boss_rush")&&(this.unlockedFeatures.add("boss_rush"),e.push({type:"feature",id:"boss_rush"})),this.runStats.deepestFloor>=100&&!this.unlockedFeatures.has("prestige")&&(this.unlockedFeatures.add("prestige"),e.push({type:"feature",id:"prestige"})),e}recordKill(e=!1){this.currentRun&&(this.currentRun.kills++,e&&this.currentRun.bossKills++)}recordDeath(){this.currentRun&&this.currentRun.deaths++}updateFloor(e){this.currentRun&&(this.currentRun.floor=e)}addRunSouls(e){this.currentRun&&(this.currentRun.soulsCollected+=e)}getMetaStats(){return{currency:{...this.metaCurrency},upgrades:Array.from(this.metaUpgrades.entries()).map(([e,s])=>({id:e,level:s,upgrade:this.upgradeDatabase[e]})),runStats:{...this.runStats},unlocked:{classes:Array.from(this.unlockedClasses),biomes:Array.from(this.unlockedBiomes),modes:Array.from(this.unlockedModes),features:Array.from(this.unlockedFeatures)}}}getAvailableUpgrades(){const e=[];for(const[s,t]of Object.entries(this.upgradeDatabase)){const r=this.metaUpgrades.get(s)||0;r<t.maxLevel&&e.push({id:s,...t,currentLevel:r,nextCost:t.cost(r),canAfford:this.metaCurrency[t.currency]>=t.cost(r)})}return e}saveProgress(){const e={metaCurrency:this.metaCurrency,metaUpgrades:Array.from(this.metaUpgrades.entries()),runStats:this.runStats,unlockedClasses:Array.from(this.unlockedClasses),unlockedBiomes:Array.from(this.unlockedBiomes),unlockedModes:Array.from(this.unlockedModes),unlockedFeatures:Array.from(this.unlockedFeatures),metaAchievements:Array.from(this.metaAchievements)};localStorage.setItem("roguelike_meta_progress",JSON.stringify(e))}loadProgress(){const e=localStorage.getItem("roguelike_meta_progress");if(e)try{const s=JSON.parse(e);this.metaCurrency=s.metaCurrency||this.metaCurrency,this.metaUpgrades=new Map(s.metaUpgrades||[]),this.runStats=s.runStats||this.runStats,this.unlockedClasses=new Set(s.unlockedClasses||["warrior"]),this.unlockedBiomes=new Set(s.unlockedBiomes||["smoke_forest"]),this.unlockedModes=new Set(s.unlockedModes||["story"]),this.unlockedFeatures=new Set(s.unlockedFeatures||[]),this.metaAchievements=new Set(s.metaAchievements||[])}catch(s){console.error("Failed to load meta-progression:",s)}}reset(){this.metaCurrency={souls:0,essence:0,fragments:0},this.metaUpgrades.clear(),this.unlockedClasses=new Set(["warrior"]),this.unlockedBiomes=new Set(["smoke_forest"]),this.unlockedModes=new Set(["story"]),this.unlockedFeatures.clear(),this.runStats={totalRuns:0,successfulRuns:0,totalDeaths:0,deepestFloor:0,totalKills:0,totalBossKills:0,fastestRun:1/0,longestRun:0,totalPlayTime:0},this.saveProgress()}}export{c as RoguelikeMetaProgressionSystem};
