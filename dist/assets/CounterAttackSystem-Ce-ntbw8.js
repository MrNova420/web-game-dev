class i{constructor(){this.counterWindows=new Map,this.counterWindowDuration=2e3,this.counterAnimations={sword_riposte:"/assets/animations/sword_riposte.fbx",spear_counter_thrust:"/assets/animations/spear_counter.fbx",axe_counter_chop:"/assets/animations/axe_counter.fbx",dagger_backstab:"/assets/animations/dagger_backstab.fbx",unarmed_counter:"/assets/animations/counter_throw.fbx"},this.vfx={counter_flash:"/assets/particles/counter_flash.png",critical_burst:"/assets/particles/critical_burst.png"}}openCounterWindow(t,o){const n=Date.now();this.counterWindows.set(t,{weaponType:o,openedAt:n,expiresAt:n+this.counterWindowDuration}),console.log(`${t} counter window opened for ${this.counterWindowDuration}ms`)}executeCounter(t,o){const n=this.counterWindows.get(t);if(!n)return console.log(`${t} no counter window active`),null;if(Date.now()>n.expiresAt)return console.log(`${t} counter window expired`),this.counterWindows.delete(t),null;const s=this.getCounterAnimation(n.weaponType);return console.log(`${t} counters ${o}!`),console.log(`  Animation: ${s}`),console.log(`  VFX: ${this.vfx.counter_flash}, ${this.vfx.critical_burst}`),this.counterWindows.delete(t),{damage:150,damageMultiplier:2,guaranteedCrit:!0,stunTarget:!0,stunDuration:1}}getCounterAnimation(t){const o=`${t.toLowerCase()}_counter`;return this.counterAnimations[o]||this.counterAnimations.sword_riposte}hasCounterWindow(t){const o=this.counterWindows.get(t);return o?Date.now()<=o.expiresAt:!1}update(t){const o=Date.now();for(const[n,e]of this.counterWindows.entries())o>e.expiresAt&&this.counterWindows.delete(n)}}export{i as CounterAttackSystem};
