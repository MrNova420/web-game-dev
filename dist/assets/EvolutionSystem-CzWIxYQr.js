class o{constructor(e){this.gameEngine=e,this.playerEvolutions=[],this.petEvolutions=new Map,this.weaponEvolutions=new Map,this.evolutionTiers=["base","evolved","advanced","ultimate","transcendent"],this.evolutionDatabase=this.createEvolutionDatabase()}createEvolutionDatabase(){return{player:{warrior:{tier1:{name:"Berserker",requirements:{level:25,kills:500,bossKills:10},bonuses:{attack:1.3,critDamage:1.5,hp:1.2},newAbilities:["rage","blood_frenzy"],appearance:"berserker_skin"},tier2:{name:"Warlord",requirements:{level:50,kills:2e3,bossKills:50},bonuses:{attack:1.6,critDamage:2,hp:1.5,defense:1.3},newAbilities:["war_cry","devastate","last_stand"],appearance:"warlord_skin"},tier3:{name:"Titan",requirements:{level:100,kills:1e4,bossKills:200},bonuses:{attack:2,critDamage:3,hp:2,defense:1.6},newAbilities:["titan_form","world_breaker","unstoppable"],appearance:"titan_skin"}},mage:{tier1:{name:"Archmage",requirements:{level:25,spellsCast:1e3,magicDamage:5e4},bonuses:{magicPower:1.4,manaCost:.8,cooldown:.9},newAbilities:["arcane_mastery","spell_weaving"],appearance:"archmage_skin"},tier2:{name:"Sage",requirements:{level:50,spellsCast:5e3,magicDamage:5e5},bonuses:{magicPower:1.8,manaCost:.6,cooldown:.7},newAbilities:["omniscience","meteor_swarm","time_stop"],appearance:"sage_skin"},tier3:{name:"Transcendent",requirements:{level:100,spellsCast:2e4,magicDamage:5e6},bonuses:{magicPower:2.5,manaCost:.4,cooldown:.5},newAbilities:["reality_warp","cosmic_cascade","infinite_mana"],appearance:"transcendent_skin"}},rogue:{tier1:{name:"Shadow Assassin",requirements:{level:25,criticalHits:500,backstabs:100},bonuses:{critChance:1.5,critDamage:1.8,speed:1.3},newAbilities:["shadow_step","assassinate"],appearance:"assassin_skin"},tier2:{name:"Phantom",requirements:{level:50,criticalHits:2e3,backstabs:500},bonuses:{critChance:2,critDamage:2.5,speed:1.6,dodge:1.5},newAbilities:["phantom_dance","death_mark","shadow_clone"],appearance:"phantom_skin"},tier3:{name:"Void Walker",requirements:{level:100,criticalHits:1e4,backstabs:2e3},bonuses:{critChance:3,critDamage:4,speed:2,dodge:2},newAbilities:["void_step","dimensional_strike","perfect_assassination"],appearance:"void_walker_skin"}}},pets:{dragon:{tier1:{name:"Drake",level:1,stats:{hp:100,attack:20,defense:15},abilities:["flame_breath","claw_strike"]},tier2:{name:"Dragon",level:25,requirements:{battles:50,wins:30},stats:{hp:300,attack:60,defense:45},abilities:["flame_breath","claw_strike","dragon_roar","tail_sweep"]},tier3:{name:"Elder Dragon",level:50,requirements:{battles:200,wins:150},stats:{hp:800,attack:150,defense:120},abilities:["inferno","dragon_dive","dragon_roar","wing_gust","fireball"]},tier4:{name:"Ancient Dragon",level:100,requirements:{battles:500,wins:400,legendary:!0},stats:{hp:2e3,attack:350,defense:300},abilities:["meteor_storm","dragon_ascension","infernal_wrath","time_dilation"]}},wolf:{tier1:{name:"Pup",level:1,stats:{hp:80,attack:25,defense:10},abilities:["bite","growl"]},tier2:{name:"Wolf",level:25,requirements:{battles:50,wins:30},stats:{hp:200,attack:70,defense:30},abilities:["savage_bite","howl","pack_tactics"]},tier3:{name:"Dire Wolf",level:50,requirements:{battles:200,wins:150},stats:{hp:500,attack:180,defense:80},abilities:["feral_rush","alpha_howl","blood_rage","shadow_pounce"]},tier4:{name:"Fenrir",level:100,requirements:{battles:500,wins:400,legendary:!0},stats:{hp:1500,attack:400,defense:200},abilities:["world_eater","ragnarok_howl","chains_breaker","fenrir_bite"]}}},weapons:{sword:{tier1:{name:"Iron Sword",damage:20,rarity:"common",effects:[]},tier2:{name:"Steel Blade",damage:50,requirements:{kills:100},rarity:"uncommon",effects:["sharpness_1"]},tier3:{name:"Mithril Sword",damage:120,requirements:{kills:500,material:"mithril_ore"},rarity:"rare",effects:["sharpness_2","lightweight"]},tier4:{name:"Legendary Blade",damage:300,requirements:{kills:2e3,bossKills:50,material:"legendary_essence"},rarity:"legendary",effects:["sharpness_3","critical_edge","soul_stealer"]},tier5:{name:"Excalibur",damage:750,requirements:{kills:1e4,bossKills:200,legendary:!0},rarity:"mythic",effects:["divine_strike","holy_aura","legendary_power","invincible"]}},staff:{tier1:{name:"Wooden Staff",damage:15,rarity:"common",effects:[]},tier2:{name:"Crystal Staff",damage:40,requirements:{spellsCast:200},rarity:"uncommon",effects:["magic_amp_1"]},tier3:{name:"Arcane Staff",damage:100,requirements:{spellsCast:1e3,material:"arcane_crystal"},rarity:"rare",effects:["magic_amp_2","mana_efficiency"]},tier4:{name:"Cosmic Rod",damage:250,requirements:{spellsCast:5e3,bossKills:50,material:"star_fragment"},rarity:"legendary",effects:["magic_amp_3","spell_echo","cosmic_power"]},tier5:{name:"Staff of Eternity",damage:650,requirements:{spellsCast:2e4,bossKills:200,legendary:!0},rarity:"mythic",effects:["infinite_power","reality_bend","time_master","omnipotence"]}}}}}canEvolve(e,i,a){const t=this.getEvolutionData(e,i,a);if(!t)return{can:!1,reason:"Evolution not found"};if(t.requirements){const s=[];for(const[n,r]of Object.entries(t.requirements))this.checkRequirement(e,i,n,r)||s.push(`${n}: ${r}`);if(s.length>0)return{can:!1,reason:"Missing requirements",missing:s}}return{can:!0}}getEvolutionData(e,i,a){const t=this.evolutionDatabase[e];if(!t)return null;if(e==="player"&&this.gameEngine.player){const s=this.gameEngine.player.class||"warrior",n=t[s];return n?n[a]:null}return t[i]?t[i][a]:null}checkRequirement(e,i,a,t){if(e==="player"&&this.gameEngine.player){const s=this.gameEngine.player;switch(a){case"level":return s.level>=t;case"kills":return(s.stats?.kills||0)>=t;case"bossKills":return(s.stats?.bossKills||0)>=t;case"spellsCast":return(s.stats?.spellsCast||0)>=t;case"magicDamage":return(s.stats?.totalMagicDamage||0)>=t;case"criticalHits":return(s.stats?.criticalHits||0)>=t;case"backstabs":return(s.stats?.backstabs||0)>=t;case"legendary":return t===!0&&this.hasLegendaryStatus();default:return!1}}if(e==="pets"){const s=this.petEvolutions.get(i);if(!s)return!1;switch(a){case"battles":return s.battles>=t;case"wins":return s.wins>=t;case"legendary":return t===!0&&s.legendary;default:return!1}}if(e==="weapons"){const s=this.weaponEvolutions.get(i);if(!s)return!1;switch(a){case"kills":return s.kills>=t;case"bossKills":return s.bossKills>=t;case"spellsCast":return s.spellsCast>=t;case"material":return this.hasMaterial(t);case"legendary":return t===!0&&s.legendary;default:return!1}}return!1}evolvePlayer(e){if(!this.gameEngine.player)return!1;const i=this.canEvolve("player",null,e);if(!i.can)return logger.info("Cannot evolve:",i.reason,i.missing),!1;const a=this.getEvolutionData("player",null,e);if(!a)return!1;const t=this.gameEngine.player;if(a.bonuses)for(const[s,n]of Object.entries(a.bonuses))this.applyStatBonus(t,s,n);if(a.newAbilities)for(const s of a.newAbilities)this.unlockAbility(s);return a.appearance&&this.changeAppearance(t,a.appearance),this.playerEvolutions.push({tier:e,name:a.name,timestamp:Date.now()}),logger.info(`Player evolved to ${a.name}!`),!0}evolvePet(e,i){const a=this.canEvolve("pets",e,i);if(!a.can)return logger.info("Cannot evolve:",a.reason,a.missing),!1;const t=this.getEvolutionData("pets",e,i);if(!t)return!1;const s=this.gameEngine.petSystem?.getPet(e);return!s||!s.stats?(logger.info("Invalid pet or missing stats"),!1):(s.name=t.name,s.stats={...t.stats},s.abilities=[...t.abilities],s.tier=i,logger.info(`Pet evolved to ${t.name}!`),!0)}evolveWeapon(e,i){const a=this.canEvolve("weapons",e,i);if(!a.can)return logger.info("Cannot evolve:",a.reason,a.missing),!1;const t=this.getEvolutionData("weapons",e,i);if(!t)return!1;const s=this.gameEngine.inventorySystem?.getItem(e);return!s||typeof s.damage>"u"?(logger.info("Invalid weapon or missing damage property"),!1):(t.requirements?.material&&this.consumeMaterial(t.requirements.material),s.name=t.name,s.damage=t.damage,s.rarity=t.rarity,s.effects=[...t.effects],s.tier=i,logger.info(`Weapon evolved to ${t.name}!`),!0)}applyStatBonus(e,i,a){switch(i){case"attack":e.baseDamage*=a;break;case"critDamage":e.critMultiplier=(e.critMultiplier||2)*a;break;case"hp":e.maxHP*=a,e.hp=e.maxHP;break;case"defense":e.defense*=a;break;case"magicPower":e.magicPower=(e.magicPower||1)*a;break;case"manaCost":e.manaCostMultiplier=a;break;case"cooldown":e.cooldownMultiplier=a;break;case"critChance":e.critChance=(e.critChance||.1)*a;break;case"speed":e.moveSpeed*=a;break;case"dodge":e.dodgeChance=(e.dodgeChance||0)*a;break}}unlockAbility(e){this.gameEngine.player&&(this.gameEngine.player.unlockedAbilities||(this.gameEngine.player.unlockedAbilities=[]),this.gameEngine.player.unlockedAbilities.push(e))}changeAppearance(e,i){e.mesh&&e.mesh.material&&logger.info(`Appearance changed to ${i}`)}hasLegendaryStatus(){return this.gameEngine.player?.legendary||!1}hasMaterial(e){return this.gameEngine.inventorySystem?this.gameEngine.inventorySystem.hasItem(e):!1}consumeMaterial(e){this.gameEngine.inventorySystem&&this.gameEngine.inventorySystem.removeItem(e)}initializePetTracking(e){this.petEvolutions.has(e)||this.petEvolutions.set(e,{battles:0,wins:0,kills:0,legendary:!1})}initializeWeaponTracking(e){this.weaponEvolutions.has(e)||this.weaponEvolutions.set(e,{kills:0,bossKills:0,spellsCast:0,legendary:!1})}recordPetBattle(e,i){const a=this.petEvolutions.get(e);a&&(a.battles++,i&&a.wins++)}recordWeaponKill(e,i=!1){const a=this.weaponEvolutions.get(e);a&&(a.kills++,i&&a.bossKills++)}}export{o as EvolutionSystem};
