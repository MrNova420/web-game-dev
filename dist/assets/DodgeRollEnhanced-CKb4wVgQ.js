class a{constructor(){this.dodgingEntities=new Map,this.iFrameDuration=400,this.staminaCost=25,this.cooldown=1e3,this.animations={dodge_forward:"/assets/animations/dodge_roll_forward.fbx",dodge_back:"/assets/animations/dodge_roll_back.fbx",dodge_left:"/assets/animations/dodge_roll_left.fbx",dodge_right:"/assets/animations/dodge_roll_right.fbx",dodge_diagonal_fl:"/assets/animations/dodge_diagonal_fl.fbx",dodge_diagonal_fr:"/assets/animations/dodge_diagonal_fr.fbx",quick_step:"/assets/animations/quick_step.fbx"},this.vfx={motion_blur:"/assets/particles/motion_blur.png",afterimage:"/assets/particles/afterimage.png",dodge_trail:"/assets/particles/dodge_trail.png"}}dodge(o,t,e=!0){if(!e)return logger.info(`${o} not enough stamina to dodge`),!1;const n=this.animations[`dodge_${t}`]||this.animations.dodge_forward;logger.info(`${o} dodge ${t}: ${n}`),logger.info(`  VFX: ${this.vfx.motion_blur}, ${this.vfx.afterimage}`);const i=Date.now();return this.dodgingEntities.set(o,{direction:t,startTime:i,iFrameEnd:i+this.iFrameDuration,cooldownEnd:i+this.cooldown,invulnerable:!0}),!0}isInvulnerable(o){const t=this.dodgingEntities.get(o);return t?Date.now()<=t.iFrameEnd?(logger.info(`${o} has i-frames active`),!0):(t.invulnerable=!1,!1):!1}canDodge(o){const t=this.dodgingEntities.get(o);return t?Date.now()>t.cooldownEnd:!0}update(o){const t=Date.now();for(const[e,n]of this.dodgingEntities.entries())t>n.cooldownEnd&&this.dodgingEntities.delete(e)}}export{a as DodgeRollEnhanced};
