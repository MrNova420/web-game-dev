var p=(u,e)=>()=>(e||u((e={exports:{}}).exports,e),e.exports);var k=p((y,r)=>{class g{constructor(e,t,i,s){this.combat=e,this.ui=t,this.audio=i,this.particles=s,this.activeEffects=new Map,this.immunities=new Map,this.resistances=new Map,this.effectDefinitions=this.initializeEffectDefinitions()}initializeEffectDefinitions(){return{regeneration:{type:"positive",category:"healing",maxStacks:5,tickInterval:1e3,effect:(e,t)=>({healPerTick:10*t}),color:"#00FF00",icon:"regeneration"},haste:{type:"positive",category:"buff",maxStacks:3,effect:(e,t)=>({attackSpeedMult:1+.15*t,moveSpeedMult:1+.1*t}),color:"#FFFF00",icon:"haste"},shield:{type:"positive",category:"protection",maxStacks:1,effect:(e,t,i)=>({absorbDamage:i||100}),color:"#00FFFF",icon:"shield"},strength:{type:"positive",category:"buff",maxStacks:5,effect:(e,t)=>({attackMult:1+.1*t}),color:"#FF0000",icon:"strength"},wisdom:{type:"positive",category:"buff",maxStacks:5,effect:(e,t)=>({magicPowerMult:1+.15*t}),color:"#9370DB",icon:"wisdom"},luck:{type:"positive",category:"buff",maxStacks:3,effect:(e,t)=>({critChanceBonus:.05*t,lootBonus:.1*t}),color:"#FFD700",icon:"luck"},poison:{type:"negative",category:"dot",maxStacks:10,tickInterval:1e3,effect:(e,t,i)=>({damagePerTick:(i||10)*t}),color:"#00FF00",icon:"poison"},burn:{type:"negative",category:"dot",maxStacks:5,tickInterval:500,effect:(e,t,i)=>({damagePerTick:(i||15)*t}),color:"#FF4500",icon:"burn"},freeze:{type:"negative",category:"cc",maxStacks:1,effect:(e,t)=>({moveSpeedMult:0,canAttack:!1,canMove:!1}),color:"#87CEEB",icon:"freeze"},stun:{type:"negative",category:"cc",maxStacks:1,effect:(e,t)=>({moveSpeedMult:0,canAttack:!1,canMove:!1,canDodge:!1}),color:"#FFD700",icon:"stun"},slow:{type:"negative",category:"debuff",maxStacks:5,effect:(e,t)=>({moveSpeedMult:1-.1*t,attackSpeedMult:1-.08*t}),color:"#4169E1",icon:"slow"},bleed:{type:"negative",category:"dot",maxStacks:10,tickInterval:1e3,effect:(e,t,i)=>({damagePerTick:(i||8)*t,healingReduction:.5}),color:"#8B0000",icon:"bleed"},weakness:{type:"negative",category:"debuff",maxStacks:5,effect:(e,t)=>({attackMult:1-.1*t,defenseMult:1-.05*t}),color:"#696969",icon:"weakness"},curse:{type:"negative",category:"debuff",maxStacks:3,effect:(e,t)=>({allStatsMult:1-.1*t,damageTakenMult:1+.15*t}),color:"#4B0082",icon:"curse"},confusion:{type:"negative",category:"cc",maxStacks:1,effect:(e,t)=>({accuracyMult:.5,movementReversed:!0}),color:"#FF69B4",icon:"confusion"}}}applyEffect(e,t,i,s=0,o=1){if(this.isImmune(e,t))return{success:!1,reason:"immune"};const c=this.effectDefinitions[t];if(!c)return{success:!1,reason:"unknown_effect"};const a=this.getResistance(e,t),n=i*(1-a),l=Math.max(1,Math.floor(o*(1-a)));this.activeEffects.has(e)||this.activeEffects.set(e,[]);const h=this.activeEffects.get(e),f=h.find(m=>m.type===t);return f?(f.stacks=Math.min(c.maxStacks,f.stacks+l),f.duration=Math.max(f.duration,n),f.power=Math.max(f.power||0,s)):h.push({type:t,stacks:Math.min(c.maxStacks,l),duration:n,maxDuration:n,power:s,appliedAt:Date.now(),lastTick:Date.now()}),this.showEffectApplied(e,t,c),{success:!0,stacks:l,duration:n}}update(e){const t=Date.now();for(const[i,s]of this.activeEffects.entries())for(let o=s.length-1;o>=0;o--){const c=s[o],a=this.effectDefinitions[c.type];c.duration-=e,a.tickInterval&&t-c.lastTick>=a.tickInterval&&(this.processEffectTick(i,c,a),c.lastTick=t),c.duration<=0&&this.removeEffect(i,c.type)}}processEffectTick(e,t,i){const s=i.effect(e,t.stacks,t.power);s.damagePerTick&&(this.combat?.takeDamage(e,s.damagePerTick,{type:"dot",source:t.type}),this.showDOTDamage(e,s.damagePerTick,i.color)),s.healPerTick&&(this.combat?.heal(e,s.healPerTick),this.showHOTHealing(e,s.healPerTick))}removeEffect(e,t){const i=this.activeEffects.get(e);if(!i)return;const s=i.findIndex(o=>o.type===t);s!==-1&&(i.splice(s,1),this.showEffectRemoved(e,t))}hasEffect(e,t){return this.activeEffects.get(e)?.some(s=>s.type===t)||!1}getEffect(e,t){return this.activeEffects.get(e)?.find(s=>s.type===t)}getEffects(e,t=null){const i=this.activeEffects.get(e)||[];return t?i.filter(s=>this.effectDefinitions[s.type]?.category===t):i}cleanse(e,t="all"){const i=this.activeEffects.get(e);if(!i)return 0;let s=0;for(let o=i.length-1;o>=0;o--){const c=i[o],a=this.effectDefinitions[c.type];(t==="all"||c.type===t||a.type===t||a.category===t)&&(i.splice(o,1),s++,this.showEffectRemoved(e,c.type))}return s>0&&(this.audio?.playSFX("cleanse",1),this.particles?.createEffect("cleanse",this.getEntityPosition(e))),s}setImmunity(e,t,i=null){this.immunities.has(e)||this.immunities.set(e,new Map),this.immunities.get(e).set(t,i?Date.now()+i:1/0)}removeImmunity(e,t){const i=this.immunities.get(e);i&&i.delete(t)}isImmune(e,t){const i=this.immunities.get(e);if(!i)return!1;const s=i.get(t);return s===void 0?!1:s!==1/0&&Date.now()>s?(i.delete(t),!1):!0}setResistance(e,t,i){this.resistances.has(e)||this.resistances.set(e,new Map),this.resistances.get(e).set(t,i)}getResistance(e,t){return this.resistances.get(e)?.get(t)||0}getStatModifiers(e){const t={moveSpeedMult:1,attackSpeedMult:1,attackMult:1,defenseMult:1,magicPowerMult:1,critChanceBonus:0,damageTakenMult:1,healingReduction:0,canAttack:!0,canMove:!0,canDodge:!0},i=this.activeEffects.get(e)||[];for(const s of i){const c=this.effectDefinitions[s.type].effect(e,s.stacks,s.power);for(const[a,n]of Object.entries(c))a.endsWith("Mult")?t[a]*=n:a.endsWith("Bonus")||a.endsWith("Reduction")?t[a]+=n:typeof n=="boolean"?t[a]=t[a]&&n:t[a]=n}return t}showEffectApplied(e,t,i){const s=this.getEntityPosition(e);this.ui?.addStatusIcon(e,t,i.icon,i.color),this.particles?.createEffect(t+"_applied",s,{color:i.color}),this.audio?.playSFX("status_applied",.7)}showEffectRemoved(e,t){this.ui?.removeStatusIcon(e,t)}showDOTDamage(e,t,i){const s=this.getEntityPosition(e);this.ui?.showDamageNumber(s,t,{type:"dot",color:i})}showHOTHealing(e,t){const i=this.getEntityPosition(e);this.ui?.showDamageNumber(i,t,{type:"heal",color:"#00FF00"})}getEntityPosition(e){return this.combat?.getEntityPosition?.(e)||{x:0,y:0,z:0}}save(e){const t=this.activeEffects.get(e);return t?t.map(i=>({type:i.type,stacks:i.stacks,duration:i.duration,power:i.power})):null}load(e,t){if(t)for(const i of t)this.applyEffect(e,i.type,i.duration,i.power,i.stacks)}}typeof r<"u"&&r.exports&&(r.exports=g)});export default k();
