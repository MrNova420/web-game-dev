import{l as t}from"./index-Bf-_4h4A.js";import"./three-DTQjiZ7L.js";import"./cannon-DPZWuR6y.js";class h{constructor(e,i,s){this.scene=e,this.camera=i,this.renderer=s,this.healthVignetteIntensity=0,this.damageFlashIntensity=0,this.healingGlowIntensity=0,this.levelUpBurstActive=!1,this.criticalSlowMoActive=!1,this.elementTintColor=new THREE.Color(1,1,1),this.magicShimmerIntensity=0,this.assetPaths={vignette:"/assets/textures/ui/vignette.png",damageOverlay:"/assets/textures/ui/damage_flash.png",healOverlay:"/assets/textures/ui/heal_glow.png",shimmerParticles:"/assets/particles/magic_shimmer.png",levelUpBurst:"/assets/particles/level_up_burst.png"},this.elementTints={FIRE:new THREE.Color(1,.6,.3),ICE:new THREE.Color(.6,.8,1),LIGHTNING:new THREE.Color(1,1,.5),NATURE:new THREE.Color(.6,1,.6),HOLY:new THREE.Color(1,.9,.6),DARK:new THREE.Color(.5,.3,.6),POISON:new THREE.Color(.5,.8,.3),ARCANE:new THREE.Color(.7,.4,1)},this.init()}init(){t.info("PlayerScreenEffectsSystem initialized with external assets"),t.info("- Vignette texture: Kenney"),t.info("- Particle overlays: Kenney Particle Pack"),t.info("- Post-processing: Three.js built-in")}triggerDamageFlash(e=.5){this.damageFlashIntensity=Math.min(e,1),t.info(`Damage flash triggered (intensity: ${e})`)}triggerHealingGlow(e=.4){this.healingGlowIntensity=Math.min(e,1),t.info(`Healing glow triggered (intensity: ${e})`)}triggerLevelUpBurst(){this.levelUpBurstActive=!0,t.info("Level-up burst triggered! (Kenney particles)"),setTimeout(()=>{this.levelUpBurstActive=!1},2e3)}triggerCriticalSlowMo(e=300){this.criticalSlowMoActive=!0,t.info(`Critical slow-mo triggered (${e}ms)`),setTimeout(()=>{this.criticalSlowMoActive=!1},e)}setElementTint(e,i=.3){this.elementTints[e]&&(this.elementTintColor.copy(this.elementTints[e]),t.info(`Element tint set: ${e} (intensity: ${i})`))}updateHealthVignette(e){this.healthVignetteIntensity=Math.max(0,1-e*2)}update(e){this.damageFlashIntensity>0&&(this.damageFlashIntensity-=e*3,this.damageFlashIntensity=Math.max(0,this.damageFlashIntensity)),this.healingGlowIntensity>0&&(this.healingGlowIntensity-=e*2,this.healingGlowIntensity=Math.max(0,this.healingGlowIntensity)),this.magicShimmerIntensity=.1+Math.sin(Date.now()*.001)*.05}getTimeScale(){return this.criticalSlowMoActive?.3:1}}export{h as PlayerScreenEffectsSystem};
