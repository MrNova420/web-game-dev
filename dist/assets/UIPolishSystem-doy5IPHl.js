class r{constructor(){this.floatingNumbers=[],this.statusEffectPulses=new Map,this.barTransitions=new Map,this.assetPaths={uiPanel:"/assets/ui/panel.png",healthBar:"/assets/ui/health_bar.png",manaBar:"/assets/ui/mana_bar.png",xpBar:"/assets/ui/xp_bar.png",abilityFrame:"/assets/ui/ability_frame.png",tooltip:"/assets/ui/tooltip.png",questMarker:"/assets/icons/quest_marker.png",damageFont:"/assets/ui/damage_numbers.png"},this.damageColors={NORMAL:"#FFFFFF",CRITICAL:"#FFD700",POISON:"#00FF00",FIRE:"#FF4500",ICE:"#00CED1",LIGHTNING:"#FFFF00",HOLY:"#FFD700",DARK:"#8B008B",HEALING:"#32CD32"},this.statusPulseRates={BURNING:2,POISONED:1.5,FROZEN:.5,STUNNED:3,BUFFED:1},this.init()}init(){logger.info("UIPolishSystem initialized with external assets"),logger.info("- UI elements: Kenney UI Pack"),logger.info("- Icons: game-icons.net (4000+ icons)"),logger.info("- Fonts: Kenney")}createFloatingDamage(t,s,a){const e=this.damageColors[s]||this.damageColors.NORMAL,i=s==="CRITICAL"?1.5:1,o={damage:Math.floor(t),type:s,color:e,scale:i,position:a.clone(),velocity:new THREE.Vector3((Math.random()-.5)*.5,1+Math.random()*.5,0),lifetime:0,maxLifetime:2};this.floatingNumbers.push(o),logger.info(`Floating damage: ${t} (${s}, color: ${e})`)}addStatusEffectPulse(t,s,a){const e=this.statusPulseRates[s]||1;this.statusEffectPulses.set(t,{type:s,iconPath:a,pulseRate:e,pulsePhase:0}),logger.info(`Status effect added: ${s} (pulse rate: ${e}/s)`)}removeStatusEffectPulse(t){this.statusEffectPulses.delete(t)}transitionBar(t,s,a=.5){this.barTransitions.has(t)||this.barTransitions.set(t,{current:s});const e=this.barTransitions.get(t);e.target=s,e.duration=a,e.elapsed=0,e.startValue=e.current,logger.info(`Bar transition: ${t} -> ${s} (${a}s)`)}triggerXPBarFill(t,s,a){logger.info(`XP gained: +${t} (${s} -> ${a})`),this.transitionBar("xp",a,1),a>=1&&logger.info("Level-up! XP bar glows gold")}showTooltip(t,s){logger.info(`Tooltip shown: "${t}" at (${s.x}, ${s.y})`)}updateQuestMarker(t){}updateAbilityCooldown(t,s){s===0&&logger.info(`Ability ready: ${t} (icon glows)`)}update(t){this.floatingNumbers=this.floatingNumbers.filter(s=>(s.lifetime+=t,s.position.add(s.velocity.clone().multiplyScalar(t)),s.velocity.y-=t*2,s.lifetime<s.maxLifetime)),this.statusEffectPulses.forEach((s,a)=>{s.pulsePhase+=t*s.pulseRate*Math.PI*2,s.pulsePhase=s.pulsePhase%(Math.PI*2)}),this.barTransitions.forEach((s,a)=>{if(s.target!==void 0&&s.elapsed<s.duration){s.elapsed+=t;const e=Math.min(s.elapsed/s.duration,1),i=1-Math.pow(1-e,3);s.current=s.startValue+(s.target-s.startValue)*i}})}getBarValue(t){const s=this.barTransitions.get(t);return s?s.current:0}}export{r as UIPolishSystem};
