class l{constructor(){this.isActive=!1,this.lastUpdateTime=Date.now(),this.resources={gold:0,essence:0,crystals:0,gems:0,prestige_tokens:0},this.generators=this.initializeGenerators(),this.ownedGenerators=new Map,this.upgrades=this.initializeUpgrades(),this.purchasedUpgrades=new Set,this.multipliers={global:1,gold:1,essence:1,offline:1,prestige:1},this.offlineEarnings={enabled:!0,maxDuration:36e5,efficiency:.5},this.stats={totalGoldEarned:0,totalEssenceEarned:0,generatorsPurchased:0,upgradesPurchased:0,prestigeCount:0,totalPlayTime:0,offlineTime:0}}initializeGenerators(){return{smoke_sprite:{id:"smoke_sprite",name:"Smoke Sprite",baseCost:10,baseProduction:1,costMultiplier:1.15,tier:1,icon:"game-icons.net/smoke-sprite.png",unlocked:!0},herb_garden:{id:"herb_garden",name:"Herb Garden",baseCost:50,baseProduction:5,costMultiplier:1.15,tier:1,icon:"game-icons.net/herb-garden.png",unlocked:!0},crystal_mine:{id:"crystal_mine",name:"Crystal Mine",baseCost:250,baseProduction:25,costMultiplier:1.15,tier:2,icon:"game-icons.net/crystal-mine.png",unlocked:!1,unlockRequirement:{gold:1e3}},essence_well:{id:"essence_well",name:"Essence Well",baseCost:1e3,baseProduction:100,costMultiplier:1.15,tier:2,icon:"game-icons.net/essence-well.png",unlocked:!1,unlockRequirement:{gold:5e3}},mystic_portal:{id:"mystic_portal",name:"Mystic Portal",baseCost:5e3,baseProduction:500,costMultiplier:1.15,tier:3,icon:"game-icons.net/mystic-portal.png",unlocked:!1,unlockRequirement:{gold:25e3}},dimensional_rift:{id:"dimensional_rift",name:"Dimensional Rift",baseCost:25e3,baseProduction:2500,costMultiplier:1.15,tier:3,icon:"game-icons.net/dimensional-rift.png",unlocked:!1,unlockRequirement:{gold:1e5}},cosmic_factory:{id:"cosmic_factory",name:"Cosmic Factory",baseCost:1e5,baseProduction:1e4,costMultiplier:1.15,tier:4,icon:"game-icons.net/cosmic-factory.png",unlocked:!1,unlockRequirement:{gold:5e5}},infinity_engine:{id:"infinity_engine",name:"Infinity Engine",baseCost:1e6,baseProduction:1e5,costMultiplier:1.15,tier:4,icon:"game-icons.net/infinity-engine.png",unlocked:!1,unlockRequirement:{gold:5e6}}}}initializeUpgrades(){return{double_production:{id:"double_production",name:"Double Production",cost:500,effect:{type:"global_multiplier",value:2},icon:"game-icons.net/double-production.png",unlocked:!0},triple_production:{id:"triple_production",name:"Triple Production",cost:5e3,effect:{type:"global_multiplier",value:3},icon:"game-icons.net/triple-production.png",requires:["double_production"],unlocked:!1},smoke_sprite_boost:{id:"smoke_sprite_boost",name:"Smoke Sprite Efficiency",cost:100,effect:{type:"generator_multiplier",generator:"smoke_sprite",value:2},icon:"game-icons.net/boost.png",unlocked:!0},auto_buy_generators:{id:"auto_buy_generators",name:"Auto Buy Generators",cost:1e4,effect:{type:"automation",feature:"auto_buy"},icon:"game-icons.net/auto-buy.png",unlocked:!1},auto_battle:{id:"auto_battle",name:"Auto Battle",cost:25e3,effect:{type:"automation",feature:"auto_battle"},icon:"game-icons.net/auto-battle.png",unlocked:!1},offline_progress:{id:"offline_progress",name:"Offline Progress",cost:1e3,effect:{type:"offline_earnings",value:.5},icon:"game-icons.net/offline.png",unlocked:!0},improved_offline:{id:"improved_offline",name:"Improved Offline Earnings",cost:1e4,effect:{type:"offline_earnings",value:.75},icon:"game-icons.net/offline-improved.png",requires:["offline_progress"],unlocked:!1},prestige_boost:{id:"prestige_boost",name:"Prestige Power",cost:1e5,effect:{type:"prestige_multiplier",value:1.5},icon:"game-icons.net/prestige.png",unlocked:!1}}}start(){this.isActive=!0,this.lastUpdateTime=Date.now(),this.calculateOfflineProgress()}calculateOfflineProgress(){const t=Date.now(),e=t-this.lastUpdateTime;if(e>6e4){const s=Math.min(e,this.offlineEarnings.maxDuration),o=s/1e3,i=this.calculateTotalProduction()*o*this.offlineEarnings.efficiency*this.multipliers.offline;this.resources.gold+=i,this.stats.totalGoldEarned+=i,this.stats.offlineTime+=s,window.gameEngine&&window.gameEngine.eventBus?.emit("idle:offlineEarnings",{gold:i,duration:s,efficiency:this.offlineEarnings.efficiency})}this.lastUpdateTime=t}update(t){if(!this.isActive)return;const e=this.calculateTotalProduction()*t;this.resources.gold+=e,this.stats.totalGoldEarned+=e,this.stats.totalPlayTime+=t*1e3,this.hasUpgrade("auto_buy_generators")&&this.autoBuyGenerators(),this.hasUpgrade("auto_battle")&&this.performAutoBattle(t)}calculateTotalProduction(){let t=0;for(const[e,s]of this.ownedGenerators){const o=this.generators[e];if(!o)continue;let r=o.baseProduction*s;const i=Array.from(this.purchasedUpgrades).map(n=>this.upgrades[n]).filter(n=>n.effect.type==="generator_multiplier"&&n.effect.generator===e);for(const n of i)r*=n.effect.value;t+=r}return t*=this.multipliers.global,t*=this.multipliers.gold,t*=this.multipliers.prestige,t}purchaseGenerator(t,e=1){const s=this.generators[t];if(!s||!s.unlocked)return!1;const o=this.ownedGenerators.get(t)||0,r=this.calculateGeneratorCost(s,o,e);return this.resources.gold<r?!1:(this.resources.gold-=r,this.ownedGenerators.set(t,o+e),this.stats.generatorsPurchased+=e,this.checkUnlocks(),!0)}calculateGeneratorCost(t,e,s){let o=0;for(let r=0;r<s;r++){const i=t.baseCost*Math.pow(t.costMultiplier,e+r);o+=i}return Math.floor(o)}purchaseUpgrade(t){const e=this.upgrades[t];if(!e||!e.unlocked||this.purchasedUpgrades.has(t))return!1;if(e.requires){for(const s of e.requires)if(!this.purchasedUpgrades.has(s))return!1}return this.resources.gold<e.cost?!1:(this.resources.gold-=e.cost,this.purchasedUpgrades.add(t),this.stats.upgradesPurchased++,this.applyUpgrade(e),this.checkUnlocks(),!0)}applyUpgrade(t){const e=t.effect;switch(e.type){case"global_multiplier":this.multipliers.global*=e.value;break;case"offline_earnings":this.offlineEarnings.efficiency=e.value;break;case"prestige_multiplier":this.multipliers.prestige*=e.value;break}}autoBuyGenerators(){const t=Object.values(this.generators).filter(e=>e.unlocked).filter(e=>{const s=this.ownedGenerators.get(e.id)||0,o=this.calculateGeneratorCost(e,s,1);return this.resources.gold>=o}).sort((e,s)=>{const o=this.calculateGeneratorCost(e,this.ownedGenerators.get(e.id)||0,1);return this.calculateGeneratorCost(s,this.ownedGenerators.get(s.id)||0,1)-o});t.length>0&&this.purchaseGenerator(t[0].id,1)}performAutoBattle(t){const e=10*t;this.resources.essence+=e,this.stats.totalEssenceEarned+=e}hasUpgrade(t){return this.purchasedUpgrades.has(t)}checkUnlocks(){for(const t of Object.values(this.generators))if(!t.unlocked&&t.unlockRequirement){let e=!0;for(const[s,o]of Object.entries(t.unlockRequirement))if(this.stats[`total${s.charAt(0).toUpperCase()+s.slice(1)}Earned`]<o){e=!1;break}e&&(t.unlocked=!0,window.gameEngine&&window.gameEngine.eventBus?.emit("idle:generatorUnlocked",{generator:t.name}))}for(const t of Object.values(this.upgrades))t.unlocked||this.stats.totalGoldEarned>=t.cost/10&&(t.unlocked=!0)}prestige(){const t=this.calculateTotalProduction(),e=Math.floor(Math.log10(t+1));if(e<=0)return!1;this.resources.gold=0,this.resources.essence=0,this.ownedGenerators.clear();const s=Array.from(this.purchasedUpgrades).filter(o=>this.upgrades[o].effect.type==="prestige_multiplier");this.purchasedUpgrades.clear();for(const o of s)this.purchasedUpgrades.add(o);return this.resources.prestige_tokens+=e,this.stats.prestigeCount++,this.multipliers.prestige=1+this.resources.prestige_tokens*.1,window.gameEngine&&window.gameEngine.eventBus?.emit("idle:prestige",{tokens:e,totalTokens:this.resources.prestige_tokens}),!0}getProductionSummary(){const t={perSecond:this.calculateTotalProduction(),perMinute:this.calculateTotalProduction()*60,perHour:this.calculateTotalProduction()*3600,generators:[]};for(const[e,s]of this.ownedGenerators){const o=this.generators[e];t.generators.push({name:o.name,count:s,production:o.baseProduction*s})}return t}getStats(){return{...this.stats,currentProduction:this.calculateTotalProduction(),totalGenerators:Array.from(this.ownedGenerators.values()).reduce((t,e)=>t+e,0)}}save(){const t={resources:this.resources,ownedGenerators:Array.from(this.ownedGenerators.entries()),purchasedUpgrades:Array.from(this.purchasedUpgrades),multipliers:this.multipliers,stats:this.stats,lastUpdateTime:Date.now()};localStorage.setItem("idle_game_save",JSON.stringify(t))}load(){const t=localStorage.getItem("idle_game_save");if(!t)return!1;try{const e=JSON.parse(t);return this.resources=e.resources,this.ownedGenerators=new Map(e.ownedGenerators),this.purchasedUpgrades=new Set(e.purchasedUpgrades),this.multipliers=e.multipliers,this.stats=e.stats,this.lastUpdateTime=e.lastUpdateTime,this.calculateOfflineProgress(),!0}catch(e){return console.error("Failed to load idle game save:",e),!1}}}export{l as IdleGameSystem};
