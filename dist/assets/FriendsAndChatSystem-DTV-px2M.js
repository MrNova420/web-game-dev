class o{constructor(e){this.gameEngine=e,this.friends=new Map,this.friendRequests=new Map,this.blockedUsers=new Set,this.chatChannels=new Map,this.privateMessages=new Map,this.chatHistory=[],this.maxChatHistory=100,this.onlineStatus="online",this.customStatus="",this.initializeChannels(),this.settings={profanityFilter:!0,allowPrivateMessages:!0,allowFriendRequests:!0,showOnlineStatus:!0,chatNotifications:!0,soundEnabled:!0}}initializeChannels(){this.chatChannels.set("global",{id:"global",name:"Global",type:"public",messages:[],members:new Set,maxMessages:100}),this.chatChannels.set("trade",{id:"trade",name:"Trade",type:"public",messages:[],members:new Set,maxMessages:50}),this.chatChannels.set("guild",{id:"guild",name:"Guild",type:"guild",messages:[],members:new Set,maxMessages:100}),this.chatChannels.set("party",{id:"party",name:"Party",type:"party",messages:[],members:new Set,maxMessages:50})}sendFriendRequest(e,s=""){if(this.friends.has(e))return{success:!1,message:"Already friends"};for(const[a,i]of this.friendRequests)if(i.to===e&&i.status==="pending")return{success:!1,message:"Friend request already sent"};if(this.blockedUsers.has(e))return{success:!1,message:"Cannot send request to blocked user"};const t=`request_${Date.now()}_${Math.random().toString(36).substr(2,9)}`,n={id:t,from:this.gameEngine.player?.id||"player",to:e,message:s,timestamp:Date.now(),status:"pending"};return this.friendRequests.set(t,n),console.log(`Sent friend request to ${e}`),{success:!0,requestId:t}}acceptFriendRequest(e){const s=this.friendRequests.get(e);if(!s||s.status!=="pending")return{success:!1,message:"Invalid request"};const t={id:s.from,addedDate:Date.now(),nickname:null,notes:"",favorite:!1,lastOnline:Date.now(),onlineStatus:"online"};return this.friends.set(s.from,t),s.status="accepted",s.acceptedDate=Date.now(),this.createPrivateConversation(s.from),console.log(`Accepted friend request from ${s.from}`),{success:!0,friend:t}}declineFriendRequest(e){const s=this.friendRequests.get(e);return!s||s.status!=="pending"?{success:!1,message:"Invalid request"}:(s.status="declined",s.declinedDate=Date.now(),console.log(`Declined friend request from ${s.from}`),{success:!0})}removeFriend(e){if(!this.friends.has(e))return{success:!1,message:"Not in friends list"};this.friends.delete(e);const s=this.getConversationId(e);return this.privateMessages.delete(s),console.log(`Removed friend ${e}`),{success:!0}}blockUser(e){return this.friends.has(e)&&this.removeFriend(e),this.blockedUsers.add(e),console.log(`Blocked user ${e}`),{success:!0}}unblockUser(e){return this.blockedUsers.has(e)?(this.blockedUsers.delete(e),console.log(`Unblocked user ${e}`),{success:!0}):{success:!1,message:"User not blocked"}}setFriendNickname(e,s){const t=this.friends.get(e);return t?(t.nickname=s,{success:!0}):{success:!1,message:"Friend not found"}}toggleFriendFavorite(e){const s=this.friends.get(e);return s?(s.favorite=!s.favorite,{success:!0,favorite:s.favorite}):{success:!1,message:"Friend not found"}}sendChannelMessage(e,s,t="chat"){const n=this.chatChannels.get(e);if(!n)return{success:!1,message:"Channel not found"};this.settings.profanityFilter&&(s=this.filterProfanity(s));const a={id:`msg_${Date.now()}_${Math.random().toString(36).substr(2,9)}`,channelId:e,userId:this.gameEngine.player?.id||"player",username:this.gameEngine.player?.name||"Player",message:s,type:t,timestamp:Date.now(),edited:!1};return n.messages.push(a),n.messages.length>n.maxMessages&&n.messages.shift(),this.chatHistory.push(a),this.chatHistory.length>this.maxChatHistory&&this.chatHistory.shift(),this.settings.chatNotifications&&this.triggerChatNotification(a),{success:!0,message:a}}sendPrivateMessage(e,s){if(this.blockedUsers.has(e))return{success:!1,message:"Cannot message blocked user"};if(!this.settings.allowPrivateMessages)return{success:!1,message:"Private messages disabled"};this.settings.profanityFilter&&(s=this.filterProfanity(s));const t=this.getConversationId(e);this.privateMessages.has(t)||this.createPrivateConversation(e);const n={id:`pm_${Date.now()}_${Math.random().toString(36).substr(2,9)}`,conversationId:t,from:this.gameEngine.player?.id||"player",to:e,message:s,timestamp:Date.now(),read:!1,edited:!1},a=this.privateMessages.get(t);return a.messages.push(n),a.lastMessage=n,a.unreadCount++,this.settings.chatNotifications&&this.triggerPMNotification(n),{success:!0,message:n}}getConversationId(e){const t=[this.gameEngine.player?.id||"player",e].sort();return`conv_${t[0]}_${t[1]}`}createPrivateConversation(e){const s=this.getConversationId(e);this.privateMessages.has(s)||this.privateMessages.set(s,{id:s,participants:[this.gameEngine.player?.id||"player",e],messages:[],lastMessage:null,unreadCount:0,createdDate:Date.now()})}markConversationRead(e){const s=this.privateMessages.get(e);if(!s)return!1;for(const t of s.messages)t.to===(this.gameEngine.player?.id||"player")&&(t.read=!0);return s.unreadCount=0,!0}getChannelMessages(e,s=50){const t=this.chatChannels.get(e);return t?t.messages.slice(-s):[]}getPrivateMessages(e,s=50){const t=this.getConversationId(e),n=this.privateMessages.get(t);return n?n.messages.slice(-s):[]}getUnreadCount(){let e=0;for(const s of this.privateMessages.values())e+=s.unreadCount;return e}getFriends(e="all"){const s=Array.from(this.friends.values());switch(e){case"online":return s.filter(t=>t.onlineStatus==="online");case"offline":return s.filter(t=>t.onlineStatus==="offline");case"favorite":return s.filter(t=>t.favorite);default:return s}}getPendingRequests(){return Array.from(this.friendRequests.values()).filter(e=>e.status==="pending"&&e.to===(this.gameEngine.player?.id||"player"))}setOnlineStatus(e,s=""){return["online","away","busy","invisible"].includes(e)?(this.onlineStatus=e,this.customStatus=s,this.broadcastStatusChange(),{success:!0}):{success:!1,message:"Invalid status"}}broadcastStatusChange(){console.log(`Status changed to ${this.onlineStatus}`)}updateSettings(e){return this.settings={...this.settings,...e},this.saveSettings(),{success:!0}}filterProfanity(e){const s=["badword1","badword2"];let t=e;for(const n of s){const a=new RegExp(n,"gi");t=t.replace(a,"*".repeat(n.length))}return t}triggerChatNotification(e){this.settings.soundEnabled&&(this.gameEngine.audioSystem&&this.gameEngine.audioSystem.playSound("chat_message"),console.log(`[${e.channelId}] ${e.username}: ${e.message}`))}triggerPMNotification(e){this.settings.soundEnabled&&(this.gameEngine.audioSystem&&this.gameEngine.audioSystem.playSound("pm_received"),console.log(`[PM] New message from ${e.from}`))}createCustomChannel(e,s,t,n=[]){return this.chatChannels.has(e)?{success:!1,message:"Channel already exists"}:(this.chatChannels.set(e,{id:e,name:s,type:t,messages:[],members:new Set(n),maxMessages:100,createdDate:Date.now()}),{success:!0})}deleteCustomChannel(e){return!this.chatChannels.get(e)||["global","trade"].includes(e)?{success:!1,message:"Cannot delete system channel"}:(this.chatChannels.delete(e),{success:!0})}joinChannel(e){const s=this.chatChannels.get(e);if(!s)return{success:!1,message:"Channel not found"};const t=this.gameEngine.player?.id||"player";return s.members.add(t),this.sendChannelMessage(e,`${this.gameEngine.player?.name||"Player"} joined the channel`,"system"),{success:!0}}leaveChannel(e){const s=this.chatChannels.get(e);if(!s)return{success:!1,message:"Channel not found"};const t=this.gameEngine.player?.id||"player";return s.members.delete(t),this.sendChannelMessage(e,`${this.gameEngine.player?.name||"Player"} left the channel`,"system"),{success:!0}}getStats(){return{friendsCount:this.friends.size,onlineFriendsCount:this.getFriends("online").length,pendingRequestsCount:this.getPendingRequests().length,blockedUsersCount:this.blockedUsers.size,unreadMessagesCount:this.getUnreadCount(),channelsCount:this.chatChannels.size,onlineStatus:this.onlineStatus}}save(){const e={friends:Array.from(this.friends.entries()),friendRequests:Array.from(this.friendRequests.entries()),blockedUsers:Array.from(this.blockedUsers),onlineStatus:this.onlineStatus,customStatus:this.customStatus,settings:this.settings};localStorage.setItem("social_data",JSON.stringify(e))}load(){const e=localStorage.getItem("social_data");if(e)try{const s=JSON.parse(e);this.friends=new Map(s.friends||[]),this.friendRequests=new Map(s.friendRequests||[]),this.blockedUsers=new Set(s.blockedUsers||[]),this.onlineStatus=s.onlineStatus||"online",this.customStatus=s.customStatus||"",this.settings=s.settings||this.settings}catch(s){console.error("Failed to load social data:",s)}}saveSettings(){localStorage.setItem("chat_settings",JSON.stringify(this.settings))}}export{o as FriendsAndChatSystem};
