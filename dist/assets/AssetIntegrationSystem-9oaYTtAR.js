import{s as l,b0 as i,c as d,b as c,a as h}from"./three-DTQjiZ7L.js";import{G as m,F as g}from"./index-DKIqi2-s.js";import"./cannon-DPZWuR6y.js";class p{constructor(){this.gltfLoader=new m,this.fbxLoader=new g,this.textureLoader=new l,this.audioLoader=new i,this.assetCache=new Map,this.loadingQueue=[],this.isLoading=!1,this.assetPaths={characters:{warrior:"/assets/models/characters/warrior.glb",mage:"/assets/models/characters/mage.glb",rogue:"/assets/models/characters/rogue.glb",ranger:"/assets/models/characters/ranger.glb",cleric:"/assets/models/characters/cleric.glb",paladin:"/assets/models/characters/paladin.glb"},monsters:{goblin:"/assets/models/monsters/goblin.glb",orc:"/assets/models/monsters/orc.glb",skeleton:"/assets/models/monsters/skeleton.glb",zombie:"/assets/models/monsters/zombie.glb",demon:"/assets/models/monsters/demon.glb",dragon:"/assets/models/monsters/dragon.glb"},bosses:{dragon_king:"/assets/models/bosses/dragon_king.glb",demon_lord:"/assets/models/bosses/demon_lord.glb",lich:"/assets/models/bosses/lich.glb",hydra:"/assets/models/bosses/hydra.glb",phoenix:"/assets/models/bosses/phoenix.glb"},weapons:{swords:"/assets/models/weapons/swords/",axes:"/assets/models/weapons/axes/",bows:"/assets/models/weapons/bows/",staffs:"/assets/models/weapons/staffs/",hammers:"/assets/models/weapons/hammers/"},environments:{forest:"/assets/models/environments/forest/",desert:"/assets/models/environments/desert/",snow:"/assets/models/environments/snow/",volcano:"/assets/models/environments/volcano/",ocean:"/assets/models/environments/ocean/"},particles:{fire:"/assets/particles/fire_01.png",ice:"/assets/particles/ice_01.png",lightning:"/assets/particles/lightning_01.png",explosion:"/assets/particles/explosion_01.png",smoke:"/assets/particles/smoke_01.png",sparkle:"/assets/particles/sparkle_01.png"},textures:{grass:"/assets/textures/grass_poly_haven_4k/",rock:"/assets/textures/rock_poly_haven_4k/",dirt:"/assets/textures/dirt_poly_haven_4k/",snow:"/assets/textures/snow_poly_haven_4k/",sand:"/assets/textures/sand_poly_haven_4k/"},skyboxes:{day:"/assets/skyboxes/day_poly_haven.hdr",night:"/assets/skyboxes/night_poly_haven.hdr",sunset:"/assets/skyboxes/sunset_poly_haven.hdr",overcast:"/assets/skyboxes/overcast_poly_haven.hdr"},icons:"/assets/icons/",ui:"/assets/ui/kenney/",audio:{music:"/assets/audio/music/incompetech/",sfx:"/assets/audio/sfx/freesound/"}},console.log("AssetIntegrationSystem initialized - 100% external assets")}async loadModel(s,e="gltf"){if(this.assetCache.has(s))return this.assetCache.get(s).clone();try{const t=e==="gltf"?this.gltfLoader:this.fbxLoader,a=await new Promise((n,r)=>{t.load(s,n,void 0,r)}),o=e==="gltf"?a.scene:a;return this.assetCache.set(s,o),console.log(`‚úÖ Loaded external model: ${s}`),o.clone()}catch(t){return console.error(`Failed to load external model: ${s}`,t),this.createFallbackMesh()}}async loadTexture(s){if(this.assetCache.has(s))return this.assetCache.get(s);try{const e=await new Promise((t,a)=>{this.textureLoader.load(s,t,void 0,a)});return this.assetCache.set(s,e),console.log(`‚úÖ Loaded external texture: ${s}`),e}catch(e){return console.error(`Failed to load external texture: ${s}`,e),null}}async loadAnimation(s){if(this.assetCache.has(s))return this.assetCache.get(s);try{const t=(await new Promise((a,o)=>{this.fbxLoader.load(s,a,void 0,o)})).animations[0];return this.assetCache.set(s,t),console.log(`‚úÖ Loaded Mixamo animation: ${s}`),t}catch(e){return console.error(`Failed to load Mixamo animation: ${s}`,e),null}}async loadParticle(s){const e=this.assetPaths.particles[s];return this.loadTexture(e)}async loadPBRTexture(s){const e=this.assetPaths.textures[s],[t,a,o,n]=await Promise.all([this.loadTexture(`${e}albedo.jpg`),this.loadTexture(`${e}normal.jpg`),this.loadTexture(`${e}roughness.jpg`),this.loadTexture(`${e}ao.jpg`)]);return{albedo:t,normal:a,roughness:o,ao:n}}async batchLoad(s){console.log(`üì¶ Batch loading ${s.length} external assets...`);const e=await Promise.allSettled(s.map(a=>this.loadModel(a.path,a.type))),t=e.filter(a=>a.status==="fulfilled").length;return console.log(`‚úÖ Loaded ${t}/${s.length} external assets`),e}async preloadEssentials(){console.log("üöÄ Preloading essential external assets...");const s=[...Object.values(this.assetPaths.characters),this.assetPaths.monsters.goblin,this.assetPaths.monsters.skeleton];await this.batchLoad(s.map(e=>({path:e,type:"gltf"}))),console.log("‚úÖ Essential external assets preloaded")}createFallbackMesh(){console.warn("‚ö†Ô∏è Using fallback mesh - external asset failed to load");const s=new d(1,1,1),e=new c({color:16711935,wireframe:!0});return new h(s,e)}getStats(){return{cachedAssets:this.assetCache.size,loadingQueue:this.loadingQueue.length,isLoading:this.isLoading,externalAssetSources:{models:"Mixamo, Quaternius, Sketchfab Free",animations:"Mixamo (1000+)",textures:"Poly Haven 4K PBR",particles:"Kenney Particle Pack (200+)",ui:"Kenney UI Pack, game-icons.net (4000+)",audio:"Freesound CC0, Incompetech"}}}}export{p as AssetIntegrationSystem};
