class i{constructor(){this.counterWindows=new Map,this.counterWindowDuration=2e3,this.counterAnimations={sword_riposte:"/assets/animations/sword_riposte.fbx",spear_counter_thrust:"/assets/animations/spear_counter.fbx",axe_counter_chop:"/assets/animations/axe_counter.fbx",dagger_backstab:"/assets/animations/dagger_backstab.fbx",unarmed_counter:"/assets/animations/counter_throw.fbx"},this.vfx={counter_flash:"/assets/particles/counter_flash.png",critical_burst:"/assets/particles/critical_burst.png"}}openCounterWindow(t,n){const o=Date.now();this.counterWindows.set(t,{weaponType:n,openedAt:o,expiresAt:o+this.counterWindowDuration}),logger.info(`${t} counter window opened for ${this.counterWindowDuration}ms`)}executeCounter(t,n){const o=this.counterWindows.get(t);if(!o)return logger.info(`${t} no counter window active`),null;if(Date.now()>o.expiresAt)return logger.info(`${t} counter window expired`),this.counterWindows.delete(t),null;const s=this.getCounterAnimation(o.weaponType);return logger.info(`${t} counters ${n}!`),logger.info(`  Animation: ${s}`),logger.info(`  VFX: ${this.vfx.counter_flash}, ${this.vfx.critical_burst}`),this.counterWindows.delete(t),{damage:150,damageMultiplier:2,guaranteedCrit:!0,stunTarget:!0,stunDuration:1}}getCounterAnimation(t){const n=`${t.toLowerCase()}_counter`;return this.counterAnimations[n]||this.counterAnimations.sword_riposte}hasCounterWindow(t){const n=this.counterWindows.get(t);return n?Date.now()<=n.expiresAt:!1}update(t){const n=Date.now();for(const[o,e]of this.counterWindows.entries())n>e.expiresAt&&this.counterWindows.delete(o)}}export{i as CounterAttackSystem};
