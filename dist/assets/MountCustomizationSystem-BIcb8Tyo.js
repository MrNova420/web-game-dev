class i{constructor(s){this.gameEngine=s,this.mountCustomizations=new Map,this.mountArmor=this.createArmorDatabase(),this.mountAbilities=this.createAbilityDatabase(),this.mountCosmetics=this.createCosmeticDatabase(),this.customizationSlots={head:["horns","crown","helm","mask"],body:["saddle","armor","cloak","wings"],legs:["boots","shoes","greaves"],tail:["ribbon","armor","flame","spike"],accessories:["necklace","pendant","charm","banner"]}}createArmorDatabase(){return{leather_helm:{slot:"head",name:"Leather Helm",tier:"common",defense:5,speed:-2,unlockLevel:1},iron_helm:{slot:"head",name:"Iron Helm",tier:"uncommon",defense:15,speed:-5,unlockLevel:10},dragon_crown:{slot:"head",name:"Dragon Crown",tier:"legendary",defense:50,speed:0,special:"fire_resistance",unlockLevel:50},basic_saddle:{slot:"body",name:"Basic Saddle",tier:"common",comfort:10,speed:0,unlockLevel:1},knights_saddle:{slot:"body",name:"Knight's Saddle",tier:"uncommon",comfort:25,defense:10,unlockLevel:15},plate_armor:{slot:"body",name:"Plate Armor",tier:"rare",defense:40,speed:-10,durability:200,unlockLevel:25},celestial_armor:{slot:"body",name:"Celestial Armor",tier:"legendary",defense:100,speed:10,special:"holy_aura",unlockLevel:60},iron_boots:{slot:"legs",name:"Iron Boots",tier:"uncommon",defense:10,speed:-3,unlockLevel:5},speed_boots:{slot:"legs",name:"Speed Boots",tier:"rare",defense:15,speed:15,unlockLevel:30},spiked_tail:{slot:"tail",name:"Spiked Tail Armor",tier:"rare",defense:20,attack:10,unlockLevel:20},flame_tail:{slot:"tail",name:"Flame Tail",tier:"epic",attack:30,special:"burn_trail",unlockLevel:40}}}createAbilityDatabase(){return{dash:{name:"Dash",type:"movement",cooldown:5,effect:{speedBoost:2,duration:3},unlockLevel:10},flight:{name:"Flight",type:"movement",cooldown:30,effect:{canFly:!0,duration:10},requirement:"wings",unlockLevel:25},teleport:{name:"Teleport",type:"movement",cooldown:20,effect:{range:50},unlockLevel:35},charge:{name:"Charge",type:"combat",cooldown:10,effect:{damage:50,knockback:10},unlockLevel:15},trample:{name:"Trample",type:"combat",cooldown:15,effect:{aoe:!0,damage:30,radius:5},unlockLevel:20},roar:{name:"Intimidating Roar",type:"combat",cooldown:25,effect:{fear:!0,radius:10,duration:5},unlockLevel:30},heal:{name:"Healing Aura",type:"support",cooldown:60,effect:{healing:100,aura:!0,duration:10},unlockLevel:40},shield:{name:"Protective Shield",type:"support",cooldown:45,effect:{shield:200,duration:5},unlockLevel:35},elemental_burst:{name:"Elemental Burst",type:"special",cooldown:90,effect:{damage:200,aoe:!0,radius:15},requirement:"elemental_type",unlockLevel:50}}}createCosmeticDatabase(){return{colors:{midnight_black:{name:"Midnight Black",hex:"#1a1a1a",unlockLevel:1},snow_white:{name:"Snow White",hex:"#f5f5f5",unlockLevel:1},crimson_red:{name:"Crimson Red",hex:"#dc143c",unlockLevel:5},emerald_green:{name:"Emerald Green",hex:"#50c878",unlockLevel:5},sapphire_blue:{name:"Sapphire Blue",hex:"#0f52ba",unlockLevel:10},golden_yellow:{name:"Golden Yellow",hex:"#ffd700",unlockLevel:15},royal_purple:{name:"Royal Purple",hex:"#7851a9",unlockLevel:20},cosmic_pink:{name:"Cosmic Pink",hex:"#ff1493",unlockLevel:25},celestial_silver:{name:"Celestial Silver",hex:"#c0c0c0",unlockLevel:30},rainbow_gradient:{name:"Rainbow Gradient",type:"gradient",unlockLevel:50}},patterns:{stripes:{name:"Stripes",unlockLevel:10},spots:{name:"Spots",unlockLevel:10},flames:{name:"Flame Pattern",unlockLevel:20},stars:{name:"Starry Pattern",unlockLevel:25},tribal:{name:"Tribal Marks",unlockLevel:30},runes:{name:"Glowing Runes",unlockLevel:40},galaxy:{name:"Galaxy Pattern",unlockLevel:50}},effects:{sparkles:{name:"Sparkle Trail",type:"particle",unlockLevel:15},flames:{name:"Flame Aura",type:"particle",unlockLevel:20},lightning:{name:"Lightning Crackle",type:"particle",unlockLevel:25},frost:{name:"Frost Aura",type:"particle",unlockLevel:30},shadow:{name:"Shadow Trail",type:"particle",unlockLevel:35},divine_light:{name:"Divine Light",type:"glow",unlockLevel:45},void_darkness:{name:"Void Darkness",type:"glow",unlockLevel:45},cosmic_energy:{name:"Cosmic Energy",type:"aura",unlockLevel:60}},accessories:{flowers:{name:"Flower Crown",slot:"head",unlockLevel:5},ribbons:{name:"Decorative Ribbons",slot:"tail",unlockLevel:5},banner:{name:"War Banner",slot:"accessories",unlockLevel:15},bells:{name:"Musical Bells",slot:"accessories",unlockLevel:10},lantern:{name:"Hanging Lantern",slot:"accessories",unlockLevel:20},wings:{name:"Angelic Wings",slot:"body",unlockLevel:35},demon_wings:{name:"Demon Wings",slot:"body",unlockLevel:35},crystal_spikes:{name:"Crystal Spikes",slot:"back",unlockLevel:40}}}}initializeMountCustomization(s){if(this.mountCustomizations.has(s))return this.mountCustomizations.get(s);const t={mountId:s,equipped:{head:null,body:"basic_saddle",legs:null,tail:null,accessories:[]},appearance:{primaryColor:"#ffffff",secondaryColor:"#000000",pattern:null,effects:[]},abilities:[],stats:{defense:0,attack:0,speed:0,comfort:0}};return this.mountCustomizations.set(s,t),this.recalculateStats(s),t}equipArmor(s,t){const e=this.mountCustomizations.get(s);if(!e)return!1;const a=this.mountArmor[t];return a?this.gameEngine.player&&a.unlockLevel>this.gameEngine.player.level?(logger.info(`Requires level ${a.unlockLevel}`),!1):(e.equipped[a.slot]=t,this.recalculateStats(s),this.applyVisualChanges(s),!0):!1}unequipArmor(s,t){const e=this.mountCustomizations.get(s);return e?(e.equipped[t]=null,this.recalculateStats(s),this.applyVisualChanges(s),!0):!1}learnAbility(s,t){const e=this.mountCustomizations.get(s);if(!e)return!1;const a=this.mountAbilities[t];return a?this.gameEngine.player&&a.unlockLevel>this.gameEngine.player.level?(logger.info(`Requires level ${a.unlockLevel}`),!1):a.requirement&&a.requirement==="wings"&&!(e.equipped.body&&(e.equipped.body.includes("wings")||e.appearance.effects.includes("wings")))?(logger.info("Requires wings to be equipped"),!1):(e.abilities.includes(t)||(e.abilities.push(t),logger.info(`Learned ${a.name}!`)),!0):!1}changeColor(s,t,e){const a=this.mountCustomizations.get(s);if(!a)return!1;const n=this.mountCosmetics.colors[e];return n?(t==="primary"?a.appearance.primaryColor=n.hex||n:t==="secondary"&&(a.appearance.secondaryColor=n.hex||n),this.applyVisualChanges(s),!0):!1}applyPattern(s,t){const e=this.mountCustomizations.get(s);return!e||!this.mountCosmetics.patterns[t]?!1:(e.appearance.pattern=t,this.applyVisualChanges(s),!0)}addEffect(s,t){const e=this.mountCustomizations.get(s);return!e||!this.mountCosmetics.effects[t]?!1:(e.appearance.effects.includes(t)||(e.appearance.effects.push(t),this.applyVisualChanges(s)),!0)}removeEffect(s,t){const e=this.mountCustomizations.get(s);if(!e)return!1;const a=e.appearance.effects.indexOf(t);return a>-1&&(e.appearance.effects.splice(a,1),this.applyVisualChanges(s)),!0}recalculateStats(s){const t=this.mountCustomizations.get(s);if(t){t.stats={defense:0,attack:0,speed:0,comfort:0};for(const[e,a]of Object.entries(t.equipped)){if(!a)continue;const n=this.mountArmor[a];n&&(n.defense&&(t.stats.defense+=n.defense),n.attack&&(t.stats.attack+=n.attack),n.speed&&(t.stats.speed+=n.speed),n.comfort&&(t.stats.comfort+=n.comfort))}}}applyVisualChanges(s){const t=this.mountCustomizations.get(s);if(t&&this.gameEngine.mountSystem){const e=this.gameEngine.mountSystem.getMount(s);if(e&&e.mesh){e.mesh.material&&e.mesh.material.color.setStyle(t.appearance.primaryColor);for(const a of t.appearance.effects)this.applyMountEffect(e,a)}}}applyMountEffect(s,t){const e=this.mountCosmetics.effects[t];if(e&&this.gameEngine.particleSystem)switch(e.type){case"particle":this.gameEngine.particleSystem.attachToMount(s,t);break}}getCustomization(s){return this.mountCustomizations.get(s)}getAvailableCustomizations(s){const t={armor:[],abilities:[],colors:[],patterns:[],effects:[],accessories:[]};for(const[e,a]of Object.entries(this.mountArmor))a.unlockLevel<=s&&t.armor.push({id:e,...a});for(const[e,a]of Object.entries(this.mountAbilities))a.unlockLevel<=s&&t.abilities.push({id:e,...a});for(const[e,a]of Object.entries(this.mountCosmetics.colors))a.unlockLevel<=s&&t.colors.push({id:e,...a});for(const[e,a]of Object.entries(this.mountCosmetics.patterns))a.unlockLevel<=s&&t.patterns.push({id:e,...a});for(const[e,a]of Object.entries(this.mountCosmetics.effects))a.unlockLevel<=s&&t.effects.push({id:e,...a});for(const[e,a]of Object.entries(this.mountCosmetics.accessories))a.unlockLevel<=s&&t.accessories.push({id:e,...a});return t}}export{i as MountCustomizationSystem};
